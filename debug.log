Reading symbols from exe...
Breakpoint 1 at 0x2ef6: file branchAndBound.cpp, line 135.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
136	                toPush.item = popped.item + 1;
139	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
141	                if(wasPutIn)
144	                    if(toPush.bagState[i].getItemCount() != 1)
147	                    if(toPush.currentBagUsage + (itemCount - toPush.item) < currentMinBagUsage)
151	                    if(bound(toPush) <= currentMinBagUsage)
152	                        queue.push(toPush);

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
Reading symbols from exe...
Function "branchA" not defined.
Function "branchA" not defined.
Breakpoint 1 at 0x2ef6: file branchAndBound.cpp, line 135.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
136	                toPush.item = popped.item + 1;
139	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
141	                if(wasPutIn)
144	                    if(toPush.bagState[i].getItemCount() != 1)
147	                    if(toPush.currentBagUsage + (itemCount - toPush.item) < currentMinBagUsage)
151	                    if(bound(toPush) <= currentMinBagUsage)
152	                        queue.push(toPush);
QUEUE::push (this=0x7fffffffd810, node=...) at branchAndBound.cpp:82
82	    if(size == capacity)
85	    ++size;
86	    buffer[++rear] = node;

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
NODE::operator= (this=0x7fffffffd7f0, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
47	    delete[] bagState;
48	    bagState = nullptr;
50	    item = other.item;
51	    currentBagUsage = other.currentBagUsage;
52	    bagCount = other.bagCount;
53	    initializeBagState(other.bagState, bagCount);
55	    return *this;
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
136	                toPush.item = popped.item + 1;
139	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
141	                if(wasPutIn)
144	                    if(toPush.bagState[i].getItemCount() != 1)
147	                    if(toPush.currentBagUsage + (itemCount - toPush.item) < currentMinBagUsage)
151	                    if(bound(toPush) <= currentMinBagUsage)
152	                        queue.push(toPush);
QUEUE::push (this=0x7fffffffd810, node=...) at branchAndBound.cpp:82
82	    if(size == capacity)
85	    ++size;
86	    buffer[++rear] = node;

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
136	                toPush.item = popped.item + 1;
139	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
141	                if(wasPutIn)
144	                    if(toPush.bagState[i].getItemCount() != 1)
147	                    if(toPush.currentBagUsage + (itemCount - toPush.item) < currentMinBagUsage)
151	                    if(bound(toPush) <= currentMinBagUsage)
152	                        queue.push(toPush);
QUEUE::push (this=0x7fffffffd810, node=...) at branchAndBound.cpp:82
82	    if(size == capacity)
85	    ++size;
86	    buffer[++rear] = node;
NODE::operator= (this=0x5555555706a0, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
47	    delete[] bagState;
48	    bagState = nullptr;
50	    item = other.item;
51	    currentBagUsage = other.currentBagUsage;
52	    bagCount = other.bagCount;
53	    initializeBagState(other.bagState, bagCount);

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
136	                toPush.item = popped.item + 1;
139	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
141	                if(wasPutIn)
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
136	                toPush.item = popped.item + 1;
139	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
141	                if(wasPutIn)
144	                    if(toPush.bagState[i].getItemCount() != 1)
147	                    if(toPush.currentBagUsage + (itemCount - toPush.item) < currentMinBagUsage)
151	                    if(bound(toPush) <= currentMinBagUsage)
152	                        queue.push(toPush);
Breakpoint 2 at 0x55555555703c: file branchAndBound.cpp, line 152.
QUEUE::push (this=0x7fffffffd810, node=...) at branchAndBound.cpp:82
82	    if(size == capacity)
85	    ++size;
86	    buffer[++rear] = node;
NODE::operator= (this=0x5555555706a0, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
47	    delete[] bagState;
48	    bagState = nullptr;
50	    item = other.item;
51	    currentBagUsage = other.currentBagUsage;
52	    bagCount = other.bagCount;
53	    initializeBagState(other.bagState, bagCount);
NODE::initializeBagState (this=0x5555555706a0, listOfBags=0x555555570dd8, _bagCount=2) at branchAndBound.cpp:19
19		bagCount = _bagCount;
21	    if(bagState != nullptr)
27	    bagState = new BAG[bagCount];
BAG::BAG (this=0x555555572978) at input.cpp:134
134		x = -1;
135		y = -1;
136		z = -1;
137		maxCapacity = -1;
138		itemCount = 0;
139		itemWeightSum = 0;
140		firstItemPtr = nullptr;
141		lastItemPtr = nullptr;
142	    map = nullptr;
143	};
NODE::initializeBagState (this=0x5555555706a0, listOfBags=0x555555570dd8, _bagCount=2) at branchAndBound.cpp:29
29	    for(int i = 0; i < bagCount; i++)
30	        bagState[i] = listOfBags[i];

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 2, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:152
152	                        queue.push(toPush);
Continuing.

Breakpoint 2, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:152
152	                        queue.push(toPush);
Continuing.

Breakpoint 2, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:152
152	                        queue.push(toPush);
Continuing.

Breakpoint 2, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:152
152	                        queue.push(toPush);
Continuing.

Breakpoint 2, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:152
152	                        queue.push(toPush);
Continuing.

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
#0  __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
#1  __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78
#2  __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89
#3  0x00007ffff784526e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26
#4  0x00007ffff78288ff in __GI_abort () at ./stdlib/abort.c:79
#5  0x00007ffff78297b6 in __libc_message_impl (fmt=fmt@entry=0x7ffff79ce8d7 "%s\n") at ../sysdeps/posix/libc_fatal.c:132
#6  0x00007ffff78a8fe5 in malloc_printerr (str=str@entry=0x7ffff79d1eb8 "malloc(): unaligned tcache chunk detected") at ./malloc/malloc.c:5772
#7  0x00007ffff78ad93c in tcache_get_n (ep=<optimized out>, tc_idx=<optimized out>) at ./malloc/malloc.c:3183
#8  tcache_get (tc_idx=<optimized out>) at ./malloc/malloc.c:3199
#9  __GI___libc_malloc (bytes=32) at ./malloc/malloc.c:3320
#10 0x00007ffff7cbb904 in operator new(unsigned long) () from /lib/x86_64-linux-gnu/libstdc++.so.6
#11 0x0000555555557fe8 in ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
#12 0x0000555555557e56 in ITEMLIST::operator= (this=0x555555572540, other=...) at input.cpp:75
#13 0x000055555555843c in BAG::operator= (this=0x555555572978, other=...) at input.cpp:212
#14 0x0000555555556851 in NODE::initializeBagState (this=0x5555555706a0, listOfBags=0x555555570dd8, _bagCount=2) at branchAndBound.cpp:30
#15 0x0000555555556a65 in NODE::operator= (this=0x5555555706a0, other=...) at branchAndBound.cpp:53
#16 0x0000555555556cc3 in QUEUE::push (this=0x7fffffffd810, node=...) at branchAndBound.cpp:86
#17 0x0000555555557055 in getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:152
#18 0x000055555555a278 in main () at source.cpp:94
#1  __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78
78	in ./nptl/pthread_kill.c
#2  __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89
89	in ./nptl/pthread_kill.c
#3  0x00007ffff784526e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26
warning: 26	../sysdeps/posix/raise.c: No such file or directory
#4  0x00007ffff78288ff in __GI_abort () at ./stdlib/abort.c:79
warning: 79	./stdlib/abort.c: No such file or directory
#5  0x00007ffff78297b6 in __libc_message_impl (fmt=fmt@entry=0x7ffff79ce8d7 "%s\n") at ../sysdeps/posix/libc_fatal.c:132
warning: 132	../sysdeps/posix/libc_fatal.c: No such file or directory
#6  0x00007ffff78a8fe5 in malloc_printerr (str=str@entry=0x7ffff79d1eb8 "malloc(): unaligned tcache chunk detected") at ./malloc/malloc.c:5772
warning: 5772	./malloc/malloc.c: No such file or directory
#7  0x00007ffff78ad93c in tcache_get_n (ep=<optimized out>, tc_idx=<optimized out>) at ./malloc/malloc.c:3183
3183	in ./malloc/malloc.c
#8  tcache_get (tc_idx=<optimized out>) at ./malloc/malloc.c:3199
3199	in ./malloc/malloc.c
#9  __GI___libc_malloc (bytes=32) at ./malloc/malloc.c:3320
3320	in ./malloc/malloc.c
#10 0x00007ffff7cbb904 in operator new(unsigned long) () from /lib/x86_64-linux-gnu/libstdc++.so.6
#11 0x0000555555557fe8 in ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
#12 0x0000555555557e56 in ITEMLIST::operator= (this=0x555555572540, other=...) at input.cpp:75
75		addItemToList(*other.item);
#13 0x000055555555843c in BAG::operator= (this=0x555555572978, other=...) at input.cpp:212
212			*firstItemPtr = *other.firstItemPtr;
#12 0x0000555555557e56 in ITEMLIST::operator= (this=0x555555572540, other=...) at input.cpp:75
75		addItemToList(*other.item);
#11 0x0000555555557fe8 in ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Breakpoint 3 at 0x555555557fde: file input.cpp, line 102.
Breakpoint 4 at 0x555555557fde: file input.cpp, line 102.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
$1 = (ITEMLIST * const) 0x555555572540
$2 = {item = 0x0, nextItemOnList = 0x0}
103	    *item = itemToInclude;
105	    nextItemOnList = nullptr;
Continuing.

Program received signal SIGSEGV, Segmentation fault.
ITEMLIST::operator= (this=0x555555571140, other=...) at input.cpp:75
75		addItemToList(*other.item);
Continuing.

Program terminated with signal SIGSEGV, Segmentation fault.
The program no longer exists.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Continuing.

Program received signal SIGSEGV, Segmentation fault.
ITEMLIST::operator= (this=0x555555571140, other=...) at input.cpp:75
75		addItemToList(*other.item);
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
103	    *item = itemToInclude;
105	    nextItemOnList = nullptr;
106	}
BAG::addItemToBag (this=0x555555570dd8, itemToAdd=...) at input.cpp:254
254		lastItemPtr = newItemInList;
256		if(itemCount == 1)
257			firstItemPtr = lastItemPtr;
258	}
BAG::putIn (this=0x555555570dd8, itemToInclude=..., bitShifts=0, itemMap=0x555555571140 "\360;\240\367\377\177") at input.cpp:674
674	}
BAG::tryItem (this=0x555555570dd8, itemToCheck=...) at input.cpp:580
580							delete[] itemMap;
581	                        return true;
593	}
Continuing.

Program received signal SIGSEGV, Segmentation fault.
ITEMLIST::operator= (this=0x555555571140, other=...) at input.cpp:75
75		addItemToList(*other.item);
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Continuing.

Program received signal SIGSEGV, Segmentation fault.
ITEMLIST::operator= (this=0x555555571140, other=...) at input.cpp:75
75		addItemToList(*other.item);
#0  ITEMLIST::operator= (this=0x555555571140, other=...) at input.cpp:75
#1  0x000055555555843c in BAG::operator= (this=0x555555574438, other=...) at input.cpp:212
#2  0x0000555555556851 in NODE::initializeBagState (this=0x555555570640, listOfBags=0x555555570dd8, _bagCount=2) at branchAndBound.cpp:30
#3  0x0000555555556a65 in NODE::operator= (this=0x555555570640, other=...) at branchAndBound.cpp:53
#4  0x0000555555556cc3 in QUEUE::push (this=0x7fffffffd810, node=...) at branchAndBound.cpp:86
#5  0x0000555555557055 in getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:152
#6  0x000055555555a278 in main () at source.cpp:94
Cannot access memory at address 0x0
#0  ITEMLIST::operator= (this=0x555555571140, other=...) at input.cpp:75
#1  0x000055555555843c in BAG::operator= (this=0x555555574438, other=...) at input.cpp:212
#2  0x0000555555556851 in NODE::initializeBagState (this=0x555555570640, listOfBags=0x555555570dd8, _bagCount=2) at branchAndBound.cpp:30
#3  0x0000555555556a65 in NODE::operator= (this=0x555555570640, other=...) at branchAndBound.cpp:53
#4  0x0000555555556cc3 in QUEUE::push (this=0x7fffffffd810, node=...) at branchAndBound.cpp:86
#5  0x0000555555557055 in getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:152
#6  0x000055555555a278 in main () at source.cpp:94
#1  0x000055555555843c in BAG::operator= (this=0x555555574438, other=...) at input.cpp:212
212			*firstItemPtr = *other.firstItemPtr;
$3 = (ITEMLIST *) 0x555555571160
$4 = {item = 0x0, nextItemOnList = 0x0}
#0  ITEMLIST::operator= (this=0x555555571140, other=...) at input.cpp:75
75		addItemToList(*other.item);
No symbol "operator*" in current context.
$5 = (const ITEMLIST &) @0x555555571160: {item = 0x0, nextItemOnList = 0x0}
$6 = (ITEM *) 0x0
Breakpoint 5 at 0x55555555703c: file branchAndBound.cpp, line 152.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Continuing.

Breakpoint 5, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:152
152	                        queue.push(toPush);
Continuing.

Program received signal SIGSEGV, Segmentation fault.
ITEMLIST::operator= (this=0x555555571140, other=...) at input.cpp:75
75		addItemToList(*other.item);
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Continuing.

Breakpoint 5, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:152
152	                        queue.push(toPush);
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
#0  __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
#1  __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78
#2  __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89
#3  0x00007ffff784526e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26
#4  0x00007ffff78288ff in __GI_abort () at ./stdlib/abort.c:79
#5  0x00007ffff78297b6 in __libc_message_impl (fmt=fmt@entry=0x7ffff79ce8d7 "%s\n") at ../sysdeps/posix/libc_fatal.c:132
#6  0x00007ffff78a8fe5 in malloc_printerr (str=str@entry=0x7ffff79d1eb8 "malloc(): unaligned tcache chunk detected") at ./malloc/malloc.c:5772
#7  0x00007ffff78ad93c in tcache_get_n (ep=<optimized out>, tc_idx=<optimized out>) at ./malloc/malloc.c:3183
#8  tcache_get (tc_idx=<optimized out>) at ./malloc/malloc.c:3199
#9  __GI___libc_malloc (bytes=32) at ./malloc/malloc.c:3320
#10 0x00007ffff7cbb904 in operator new(unsigned long) () from /lib/x86_64-linux-gnu/libstdc++.so.6
#11 0x0000555555557fe8 in ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
#12 0x0000555555557e56 in ITEMLIST::operator= (this=0x555555572540, other=...) at input.cpp:75
#13 0x000055555555843c in BAG::operator= (this=0x555555572978, other=...) at input.cpp:212
#14 0x0000555555556851 in NODE::initializeBagState (this=0x5555555706a0, listOfBags=0x555555570dd8, _bagCount=2) at branchAndBound.cpp:30
#15 0x0000555555556a65 in NODE::operator= (this=0x5555555706a0, other=...) at branchAndBound.cpp:53
#16 0x0000555555556cc3 in QUEUE::push (this=0x7fffffffd810, node=...) at branchAndBound.cpp:86
#17 0x0000555555557055 in getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:152
#18 0x000055555555a278 in main () at source.cpp:94
#1  __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78
78	in ./nptl/pthread_kill.c
#2  __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89
89	in ./nptl/pthread_kill.c
#3  0x00007ffff784526e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26
warning: 26	../sysdeps/posix/raise.c: No such file or directory
#4  0x00007ffff78288ff in __GI_abort () at ./stdlib/abort.c:79
warning: 79	./stdlib/abort.c: No such file or directory
#5  0x00007ffff78297b6 in __libc_message_impl (fmt=fmt@entry=0x7ffff79ce8d7 "%s\n") at ../sysdeps/posix/libc_fatal.c:132
warning: 132	../sysdeps/posix/libc_fatal.c: No such file or directory
#6  0x00007ffff78a8fe5 in malloc_printerr (str=str@entry=0x7ffff79d1eb8 "malloc(): unaligned tcache chunk detected") at ./malloc/malloc.c:5772
warning: 5772	./malloc/malloc.c: No such file or directory
#7  0x00007ffff78ad93c in tcache_get_n (ep=<optimized out>, tc_idx=<optimized out>) at ./malloc/malloc.c:3183
3183	in ./malloc/malloc.c
#8  tcache_get (tc_idx=<optimized out>) at ./malloc/malloc.c:3199
3199	in ./malloc/malloc.c
#9  __GI___libc_malloc (bytes=32) at ./malloc/malloc.c:3320
3320	in ./malloc/malloc.c
#10 0x00007ffff7cbb904 in operator new(unsigned long) () from /lib/x86_64-linux-gnu/libstdc++.so.6
#11 0x0000555555557fe8 in ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
#12 0x0000555555557e56 in ITEMLIST::operator= (this=0x555555572540, other=...) at input.cpp:75
75		addItemToList(*other.item);
#13 0x000055555555843c in BAG::operator= (this=0x555555572978, other=...) at input.cpp:212
212			*firstItemPtr = *other.firstItemPtr;
$7 = (const BAG &) @0x555555570dd8: {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x555555572950, lastItemPtr = 0x555555572950, map = 0x555555573870 "\377"}
$8 = {item = 0x555555571180, nextItemOnList = 0x0}
$9 = {x = 7, y = 3, z = 7, weight = 23, bagNumber = 0, xLocation = 0, yLocation = 0, zLocation = 0}
#12 0x0000555555557e56 in ITEMLIST::operator= (this=0x555555572540, other=...) at input.cpp:75
75		addItemToList(*other.item);
$10 = (const ITEMLIST &) @0x555555572950: {item = 0x555555571180, nextItemOnList = 0x0}
$11 = {x = 7, y = 3, z = 7, weight = 23, bagNumber = 0, xLocation = 0, yLocation = 0, zLocation = 0}
#11 0x0000555555557fe8 in ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
No symbol "itemToIncludea" in current context.
$12 = {x = 7, y = 3, z = 7, weight = 23, bagNumber = 0, xLocation = 0, yLocation = 0, zLocation = 0}
malformed linespec error: unexpected string, "this=0x555555572540"
malformed linespec error: unexpected string, "this==0x555555572540"
Breakpoint 6 at 0x555555557fde: file input.cpp, line 102.
Breakpoint 7 at 0x555555557fde: file input.cpp, line 102.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 7, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
103	    *item = itemToInclude;
105	    nextItemOnList = nullptr;
106	}
BAG::addItemToBag (this=0x555555570e08, itemToAdd=...) at input.cpp:254
254		lastItemPtr = newItemInList;
256		if(itemCount == 1)
257			firstItemPtr = lastItemPtr;
258	}
BAG::putIn (this=0x555555570e08, itemToInclude=..., bitShifts=0, itemMap=0x555555572520 "\376?\240\367\377\177") at input.cpp:674
674	}
BAG::tryItem (this=0x555555570e08, itemToCheck=...) at input.cpp:580
580							delete[] itemMap;
581	                        return true;
593	}
getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:141
141	                if(wasPutIn)
144	                    if(toPush.bagState[i].getItemCount() != 1)
147	                    if(toPush.currentBagUsage + (itemCount - toPush.item) < currentMinBagUsage)
151	                    if(bound(toPush) <= currentMinBagUsage)
152	                        queue.push(toPush);
133	            for(int i = 0; i < bagCount; i++)
126	    while(!queue.isEmpty())
128	        popped = queue.pop();
129	        if(popped.item != itemCount - 1)
133	            for(int i = 0; i < bagCount; i++)
135	                toPush = popped;
136	                toPush.item = popped.item + 1;
139	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
141	                if(wasPutIn)
144	                    if(toPush.bagState[i].getItemCount() != 1)
147	                    if(toPush.currentBagUsage + (itemCount - toPush.item) < currentMinBagUsage)
Continuing.

Breakpoint 7, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Continuing.

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 7, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Continuing.

Breakpoint 7, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Continuing.

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 7, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Continuing.

Breakpoint 7, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 7, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Cannot access memory at address 0x0
Continuing.

Breakpoint 7, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Cannot access memory at address 0x0

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
Reading symbols from exe...
Breakpoint 1 at 0x3fde: file input.cpp, line 102.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
103	    *item = itemToInclude;
Continuing.

Breakpoint 1, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Continuing.

Breakpoint 1, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
$1 = (ITEMLIST * const) 0x555555572540
$2 = {item = 0x0, nextItemOnList = 0x0}
No symbol "operator*" in current context.
$3 = {x = 7, y = 3, z = 7, weight = 23, bagNumber = 0, xLocation = 0, yLocation = 0, zLocation = 0}

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
Continuing.

Program terminated with signal SIGABRT, Aborted.
The program no longer exists.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Continuing.

Breakpoint 1, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
$4 = {item = 0x0, nextItemOnList = 0x0}
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
103	    *item = itemToInclude;
$5 = (ITEM *) 0x555555571180
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
Continuing.

Breakpoint 1, ITEMLIST::addItemToList (this=0x555555572540, itemToInclude=...) at input.cpp:102
102	    item = new ITEM;
$6 = {item = 0x0, nextItemOnList = 0x0}

Program received signal SIGABRT, Aborted.
__pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44
warning: 44	./nptl/pthread_kill.c: No such file or directory
Reading symbols from exe...
Breakpoint 1 at 0x7a7a: file input.cpp, line 102.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 11608) exited with code 01]
Temporary breakpoint 2 at 0x5555555611f7: file source.cpp, line 10.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Temporary breakpoint 2, main () at source.cpp:10
10	{
main () at source.cpp:94
94		getMinBagCount(items, bags, inputSize, inputSize);
No symbol "rip" in current context.
No symbol "rip" in current context.
0x555555561c44 <main()+2857>:	0xfe7c8d8b
$1 = (void (*)(void)) 0x555555561c44 <main()+2857>
getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:113
113	{
#0  getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:113
#1  0x0000555555561c66 in main () at source.cpp:94
1: $rip = (void (*)(void)) 0x555555558dbe <getMinBagCount(ITEM const*, BAG const*, int, int)+278>
114	    QUEUE queue(40, bagCount);
1: $rip = (void (*)(void)) 0x555555558dcd <getMinBagCount(ITEM const*, BAG const*, int, int)+293>
115	    NODE popped, toPush;
1: $rip = (void (*)(void)) 0x555555558de7 <getMinBagCount(ITEM const*, BAG const*, int, int)+319>
118	    int currentMinBagUsage = itemCount;
1: $rip = (void (*)(void)) 0x555555558e05 <getMinBagCount(ITEM const*, BAG const*, int, int)+349>
121	    popped.item = -1;
1: $rip = (void (*)(void)) 0x555555558e11 <getMinBagCount(ITEM const*, BAG const*, int, int)+361>
122	    popped.currentBagUsage = currentMinBagUsage;
1: $rip = (void (*)(void)) 0x555555558e4d <getMinBagCount(ITEM const*, BAG const*, int, int)+421>
123	    popped.initializeBagState(bags, bagCount);
1: $rip = (void (*)(void)) 0x555555558e8f <getMinBagCount(ITEM const*, BAG const*, int, int)+487>
124	    queue.push(popped);
1: $rip = (void (*)(void)) 0x555555558eae <getMinBagCount(ITEM const*, BAG const*, int, int)+518>
126	    while(!queue.isEmpty())
1: $rip = (void (*)(void)) 0x555555558ec7 <getMinBagCount(ITEM const*, BAG const*, int, int)+543>
128	        popped = queue.pop();
1: $rip = (void (*)(void)) 0x555555558ecc <getMinBagCount(ITEM const*, BAG const*, int, int)+548>
129	        if(popped.item != itemCount - 1)
1: $rip = (void (*)(void)) 0x555555558ef0 <getMinBagCount(ITEM const*, BAG const*, int, int)+584>
133	            for(int i = 0; i < bagCount; i++)
1: $rip = (void (*)(void)) 0x555555558f39 <getMinBagCount(ITEM const*, BAG const*, int, int)+657>
135	                toPush = popped;
1: $rip = (void (*)(void)) 0x555555558f48 <getMinBagCount(ITEM const*, BAG const*, int, int)+672>
136	                toPush.item = popped.item + 1;
1: $rip = (void (*)(void)) 0x555555558f61 <getMinBagCount(ITEM const*, BAG const*, int, int)+697>
139	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: $rip = (void (*)(void)) 0x555555558fd5 <getMinBagCount(ITEM const*, BAG const*, int, int)+813>
141	                if(wasPutIn)
1: $rip = (void (*)(void)) 0x55555555918e <getMinBagCount(ITEM const*, BAG const*, int, int)+1254>
144	                    if(toPush.bagState[i].getItemCount() != 1)
1: $rip = (void (*)(void)) 0x55555555919b <getMinBagCount(ITEM const*, BAG const*, int, int)+1267>
147	                    if(toPush.currentBagUsage + (itemCount - toPush.item) < currentMinBagUsage)
1: $rip = (void (*)(void)) 0x555555559271 <getMinBagCount(ITEM const*, BAG const*, int, int)+1481>
151	                    if(bound(toPush) <= currentMinBagUsage)
1: $rip = (void (*)(void)) 0x555555559316 <getMinBagCount(ITEM const*, BAG const*, int, int)+1646>
152	                        queue.push(toPush);
1: $rip = (void (*)(void)) 0x555555559332 <getMinBagCount(ITEM const*, BAG const*, int, int)+1674>
133	            for(int i = 0; i < bagCount; i++)
1: $rip = (void (*)(void)) 0x55555555934b <getMinBagCount(ITEM const*, BAG const*, int, int)+1699>
135	                toPush = popped;
1: $rip = (void (*)(void)) 0x555555558f48 <getMinBagCount(ITEM const*, BAG const*, int, int)+672>
[Inferior 1 (process 11879) exited with code 01]
The program is not being run.
Breakpoint 3 at 0x555555558f48: file branchAndBound.cpp, line 135.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
1: $rip = (void (*)(void)) 0x555555558f48 <getMinBagCount(ITEM const*, BAG const*, int, int)+672>
Continuing.

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
1: $rip = (void (*)(void)) 0x555555558f48 <getMinBagCount(ITEM const*, BAG const*, int, int)+672>
NODE::operator= (this=0x7ffff5209080, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
47	    delete[] bagState;
BAG::~BAG (this=0x50b000000338, __in_chrg=<optimized out>) at input.cpp:147
147	    x = 0;
148	    y = 0;
149	    z = 0;
150	    maxCapacity = 0;
151		if(firstItemPtr != nullptr)
158	    delete[] map;
159	    map = nullptr;
160	};
[Inferior 1 (process 11919) exited with code 01]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Undefined command: "y".  Try "help".
Continuing.

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
NODE::operator= (this=0x7ffff5209080, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
47	    delete[] bagState;
BAG::~BAG (this=0x50b000000338, __in_chrg=<optimized out>) at input.cpp:147
147	    x = 0;
148	    y = 0;
149	    z = 0;
150	    maxCapacity = 0;
151		if(firstItemPtr != nullptr)
158	    delete[] map;
159	    map = nullptr;
160	};
BAG::~BAG (this=0x50b000000308, __in_chrg=<optimized out>) at input.cpp:147
147	    x = 0;
148	    y = 0;
149	    z = 0;
150	    maxCapacity = 0;
151		if(firstItemPtr != nullptr)
153			firstItemPtr->deleteList();
ITEMLIST::deleteList (this=0x502000000030) at input.cpp:110
110		delete item;
ITEM::~ITEM (this=0x503000000040, __in_chrg=<optimized out>) at input.cpp:22
22	    x = 0;
23	    y = 0;
24	    z = 0;
25	    weight = 0;
26	    bagNumber = 0;
27	    xLocation = 0;
28	    yLocation = 0;
29	    zLocation = 0;
30	};
ITEMLIST::deleteList (this=0x502000000030) at input.cpp:112
112		ITEMLIST* currentItemOnListPtr = nullptr;
113		ITEMLIST* previousItemOnListPtr = nullptr;
114		previousItemOnListPtr = nextItemOnList;
115		if(previousItemOnListPtr != nullptr)
127		delete previousItemOnListPtr;
129		nextItemOnList = nullptr;
130	}
BAG::~BAG (this=0x50b000000308, __in_chrg=<optimized out>) at input.cpp:154
154			delete firstItemPtr;
[Inferior 1 (process 11922) exited with code 01]
No stack.
No stack.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
NODE::operator= (this=0x7ffff5209080, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
#0  NODE::operator= (this=0x7ffff5209080, other=...) at branchAndBound.cpp:44
#1  0x0000555555558f61 in getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
#2  0x0000555555561c66 in main () at source.cpp:94
47	    delete[] bagState;
[Inferior 1 (process 11946) exited with code 01]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Undefined command: "y".  Try "help".
Continuing.

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
NODE::operator= (this=0x7ffff5209080, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
47	    delete[] bagState;
BAG::~BAG (this=0x50b000000338, __in_chrg=<optimized out>) at input.cpp:147
147	    x = 0;
148	    y = 0;
149	    z = 0;
150	    maxCapacity = 0;
151		if(firstItemPtr != nullptr)
158	    delete[] map;
159	    map = nullptr;
160	};
[Inferior 1 (process 11956) exited with code 01]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Undefined command: "y".  Try "help".
Continuing.

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
NODE::operator= (this=0x7ffff5209080, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
47	    delete[] bagState;
[Inferior 1 (process 11962) exited with code 01]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Continuing.

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
NODE::operator= (this=0x7ffff5209080, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
47	    delete[] bagState;
BAG::~BAG (this=0x50b000000338, __in_chrg=<optimized out>) at input.cpp:147
147	    x = 0;
148	    y = 0;
149	    z = 0;
150	    maxCapacity = 0;
151		if(firstItemPtr != nullptr)
158	    delete[] map;
159	    map = nullptr;
160	};
BAG::~BAG (this=0x50b000000308, __in_chrg=<optimized out>) at input.cpp:147
147	    x = 0;
148	    y = 0;
149	    z = 0;
150	    maxCapacity = 0;
151		if(firstItemPtr != nullptr)
153			firstItemPtr->deleteList();
154			delete firstItemPtr;
[Inferior 1 (process 11963) exited with code 01]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
Undefined command: "y".  Try "help".
Continuing.

Breakpoint 3, getMinBagCount (items=0x507000000098, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:135
135	                toPush = popped;
NODE::operator= (this=0x7ffff5209080, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
47	    delete[] bagState;
BAG::~BAG (this=0x50b000000338, __in_chrg=<optimized out>) at input.cpp:147
147	    x = 0;
148	    y = 0;
149	    z = 0;
150	    maxCapacity = 0;
151		if(firstItemPtr != nullptr)
158	    delete[] map;
159	    map = nullptr;
160	};
BAG::~BAG (this=0x50b000000308, __in_chrg=<optimized out>) at input.cpp:147
147	    x = 0;
148	    y = 0;
149	    z = 0;
150	    maxCapacity = 0;
151		if(firstItemPtr != nullptr)
Breakpoint 4 at 0x55555555c076: file input.cpp, line 150.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, BAG::~BAG (this=0x50b000000308, __in_chrg=<optimized out>) at input.cpp:150
150	    maxCapacity = 0;
151		if(firstItemPtr != nullptr)
153			firstItemPtr->deleteList();
154			delete firstItemPtr;
[Inferior 1 (process 11978) exited with code 01]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, BAG::~BAG (this=0x50b000000308, __in_chrg=<optimized out>) at input.cpp:150
150	    maxCapacity = 0;
Undefined command: "y".  Try "help".
151		if(firstItemPtr != nullptr)
153			firstItemPtr->deleteList();
154			delete firstItemPtr;
$2 = (ITEMLIST *) 0x502000000030
$3 = {item = 0x503000000040, nextItemOnList = 0x0}
$4 = {x = 38, y = 0, z = 0, weight = 0, bagNumber = 0, xLocation = 0, yLocation = 0, zLocation = 0}
ITEMLIST::~ITEMLIST (this=0x502000000030, __in_chrg=<optimized out>) at input.cpp:40
40	    delete item;
ITEM::~ITEM (this=0x503000000040, __in_chrg=<optimized out>) at input.cpp:22
22	    x = 0;
[Inferior 1 (process 11981) exited with code 01]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, BAG::~BAG (this=0x50b000000308, __in_chrg=<optimized out>) at input.cpp:150
150	    maxCapacity = 0;
$5 = {item = 0x503000000040, nextItemOnList = 0x0}
$6 = {x = 4, y = 8, z = 4, weight = 10, bagNumber = -1094795586, xLocation = 0, yLocation = 0, zLocation = 0}
151		if(firstItemPtr != nullptr)
153			firstItemPtr->deleteList();
154			delete firstItemPtr;
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, BAG::~BAG (this=0x50b000000308, __in_chrg=<optimized out>) at input.cpp:150
150	    maxCapacity = 0;
151		if(firstItemPtr != nullptr)
2: *firstItemPtr->item = {x = 4, y = 8, z = 4, weight = 10, bagNumber = -1094795586, xLocation = 0, yLocation = 0, zLocation = 0}
153			firstItemPtr->deleteList();
2: *firstItemPtr->item = {x = 4, y = 8, z = 4, weight = 10, bagNumber = -1094795586, xLocation = 0, yLocation = 0, zLocation = 0}
154			delete firstItemPtr;
2: *firstItemPtr->item = {x = 38, y = 0, z = 0, weight = 0, bagNumber = 0, xLocation = 0, yLocation = 0, zLocation = 0}
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, BAG::~BAG (this=0x50b000000308, __in_chrg=<optimized out>) at input.cpp:150
150	    maxCapacity = 0;
2: *firstItemPtr->item = {x = 4, y = 8, z = 4, weight = 10, bagNumber = -1094795586, xLocation = 0, yLocation = 0, zLocation = 0}
151		if(firstItemPtr != nullptr)
2: *firstItemPtr->item = {x = 4, y = 8, z = 4, weight = 10, bagNumber = -1094795586, xLocation = 0, yLocation = 0, zLocation = 0}
153			firstItemPtr->deleteList();
2: *firstItemPtr->item = {x = 4, y = 8, z = 4, weight = 10, bagNumber = -1094795586, xLocation = 0, yLocation = 0, zLocation = 0}
154			delete firstItemPtr;
2: *firstItemPtr->item = {x = 38, y = 0, z = 0, weight = 0, bagNumber = 0, xLocation = 0, yLocation = 0, zLocation = 0}
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, BAG::~BAG (this=0x50b000000308, __in_chrg=<optimized out>) at input.cpp:150
150	    maxCapacity = 0;
2: *firstItemPtr->item = {x = 4, y = 8, z = 4, weight = 10, bagNumber = -1094795586, xLocation = 0, yLocation = 0, zLocation = 0}
151		if(firstItemPtr != nullptr)
2: *firstItemPtr->item = {x = 4, y = 8, z = 4, weight = 10, bagNumber = -1094795586, xLocation = 0, yLocation = 0, zLocation = 0}
153			firstItemPtr->deleteList();
2: *firstItemPtr->item = {x = 4, y = 8, z = 4, weight = 10, bagNumber = -1094795586, xLocation = 0, yLocation = 0, zLocation = 0}
ITEMLIST::deleteList (this=0x502000000030) at input.cpp:110
110		delete item;
2: *firstItemPtr->item = <error: There is no member or method named firstItemPtr.>
105	    nextItemOnList = nullptr;
106	}
107	
108	void ITEMLIST::deleteList()
109	{
110		delete item;
111	
112		ITEMLIST* currentItemOnListPtr = nullptr;
113		ITEMLIST* previousItemOnListPtr = nullptr;
114		previousItemOnListPtr = nextItemOnList;
115		if(previousItemOnListPtr != nullptr)
116		{
117			currentItemOnListPtr = previousItemOnListPtr->nextItemOnList;
118	
119			while(currentItemOnListPtr != nullptr)
120			{
121				delete previousItemOnListPtr;
122				previousItemOnListPtr = currentItemOnListPtr;
123				currentItemOnListPtr = currentItemOnListPtr->nextItemOnList;
124			}
125		}
126	
127		delete previousItemOnListPtr;
128		
129		nextItemOnList = nullptr;
130	}
131	
132	BAG::BAG()
133	{
134		x = -1;
Reading symbols from exe...
Reading symbols from exe...
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 12313) exited with code 01]
Breakpoint 1 at 0x55555555d049: file input.cpp, line 249.
No stack.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, BAG::addItemToBag (this=0x50b000000308, itemToAdd=...) at input.cpp:249
249		ITEMLIST* newItemInList = new ITEMLIST;
#0  BAG::addItemToBag (this=0x50b000000308, itemToAdd=...) at input.cpp:249
#1  0x0000555555560d46 in BAG::putIn (this=0x50b000000308, itemToInclude=..., bitShifts=0, itemMap=0x502000000010 <incomplete sequence \360>) at input.cpp:670
#2  0x000055555555fe48 in BAG::tryItem (this=0x50b000000308, itemToCheck=...) at input.cpp:576
#3  0x0000555555559179 in getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:139
#4  0x0000555555561c89 in main () at source.cpp:94
Continuing.

Breakpoint 1, BAG::addItemToBag (this=0x50b000000498, itemToAdd=...) at input.cpp:249
249		ITEMLIST* newItemInList = new ITEMLIST;
#0  BAG::addItemToBag (this=0x50b000000498, itemToAdd=...) at input.cpp:249
#1  0x0000555555560d46 in BAG::putIn (this=0x50b000000498, itemToInclude=..., bitShifts=0, itemMap=0x502000000070 <incomplete sequence \360>) at input.cpp:670
#2  0x000055555555fe48 in BAG::tryItem (this=0x50b000000498, itemToCheck=...) at input.cpp:576
#3  0x0000555555559179 in getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:139
#4  0x0000555555561c89 in main () at source.cpp:94
Continuing.

Breakpoint 1, BAG::addItemToBag (this=0x50b000000678, itemToAdd=...) at input.cpp:249
249		ITEMLIST* newItemInList = new ITEMLIST;
#0  BAG::addItemToBag (this=0x50b000000678, itemToAdd=...) at input.cpp:249
#1  0x0000555555560d46 in BAG::putIn (this=0x50b000000678, itemToInclude=..., bitShifts=0, itemMap=0x502000000110 "\376") at input.cpp:670
#2  0x000055555555fe48 in BAG::tryItem (this=0x50b000000678, itemToCheck=...) at input.cpp:576
#3  0x0000555555559179 in getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:139
#4  0x0000555555561c89 in main () at source.cpp:94
Continuing.

Breakpoint 1, BAG::addItemToBag (this=0x50b000000808, itemToAdd=...) at input.cpp:249
249		ITEMLIST* newItemInList = new ITEMLIST;
#0  BAG::addItemToBag (this=0x50b000000808, itemToAdd=...) at input.cpp:249
#1  0x0000555555560d46 in BAG::putIn (this=0x50b000000808, itemToInclude=..., bitShifts=0, itemMap=0x502000000190 "\376") at input.cpp:670
#2  0x000055555555fe48 in BAG::tryItem (this=0x50b000000808, itemToCheck=...) at input.cpp:576
#3  0x0000555555559179 in getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:139
#4  0x0000555555561c89 in main () at source.cpp:94
Continuing.

Breakpoint 1, BAG::addItemToBag (this=0x50b0000009e8, itemToAdd=...) at input.cpp:249
249		ITEMLIST* newItemInList = new ITEMLIST;
#0  BAG::addItemToBag (this=0x50b0000009e8, itemToAdd=...) at input.cpp:249
#1  0x0000555555560d46 in BAG::putIn (this=0x50b0000009e8, itemToInclude=..., bitShifts=0, itemMap=0x502000000250 "\376") at input.cpp:670
#2  0x000055555555fe48 in BAG::tryItem (this=0x50b0000009e8, itemToCheck=...) at input.cpp:576
#3  0x0000555555559179 in getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:139
#4  0x0000555555561c89 in main () at source.cpp:94
Continuing.
[Inferior 1 (process 12326) exited with code 01]
Reading symbols from exe...
Breakpoint 1 at 0x2ea6: file branchAndBound.cpp, line 128.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:128
128	        popped = queue.pop();
129	        if(popped.item != itemCount - 1)
1: popped = {item = -1, bagState = 0x5555555709f8, currentBagUsage = 2, bagCount = 2}
2: popped.bagState[0] = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555720f0 ""}
3: popped.bagState[1] = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571230 ""}
4: toPush = {item = 1431769576, bagState = 0x0, currentBagUsage = -10192, bagCount = -1}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
133	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555709f8, currentBagUsage = 2, bagCount = 2}
2: popped.bagState[0] = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555720f0 ""}
3: popped.bagState[1] = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571230 ""}
4: toPush = {item = 1431769576, bagState = 0x0, currentBagUsage = -10192, bagCount = -1}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
135	                toPush = popped;
1: popped = {item = -1, bagState = 0x5555555709f8, currentBagUsage = 2, bagCount = 2}
2: popped.bagState[0] = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555720f0 ""}
3: popped.bagState[1] = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571230 ""}
4: toPush = {item = 1431769576, bagState = 0x0, currentBagUsage = -10192, bagCount = -1}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
136	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x5555555709f8, currentBagUsage = 2, bagCount = 2}
2: popped.bagState[0] = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555720f0 ""}
3: popped.bagState[1] = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571230 ""}
4: toPush = {item = -1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
5: toPush.bagState[0] = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555573870 ""}
6: toPush.bagState[1] = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570e40 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:128
128	        popped = queue.pop();
1: popped = {item = -1, bagState = 0x5555555709f8, currentBagUsage = 2, bagCount = 2}
2: popped.bagState[0] = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555720f0 ""}
3: popped.bagState[1] = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571230 ""}
4: toPush = {item = 0, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
5: toPush.bagState[0] = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555573870 ""}
6: toPush.bagState[1] = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x555555575360, lastItemPtr = 0x555555575360, map = 0x555555570e40 "\377"}
$1 = {item = 0, bagState = 0x555555574438, currentBagUsage = 2, bagCount = 2}
$2 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x555555571140, lastItemPtr = 0x555555571140, map = 0x5555555744a0 ""}
$3 = (ITEM *) 0x5555555711b0
$4 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555575060 ""}
$5 = {item = 0, bagState = 0x555555575388, currentBagUsage = 2, bagCount = 2}
$6 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555753f0 ""}
$7 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x555555571160, lastItemPtr = 0x555555571160, map = 0x555555575fe0 ""}
$8 = (ITEM *) 0x555555575fb0
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:128
128	        popped = queue.pop();
1: popped = {item = 0, bagState = 0x5555555709f8, currentBagUsage = 2, bagCount = 2}
2: popped.bagState[0] = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555555720f0, lastItemPtr = 0x5555555720f0, map = 0x5555555762e0 ""}
3: popped.bagState[1] = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571230 ""}
4: toPush = {item = 1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
5: toPush.bagState[0] = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x555555575360, lastItemPtr = 0x555555575360, map = 0x555555573870 ""}
6: toPush.bagState[1] = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5555555725a0, lastItemPtr = 0x5555555725a0, map = 0x555555570e40 "\377"}
usage: displayQueue <queue size> <bag count>
$9 = {item = 0, bagState = 0x555555575388, currentBagUsage = 2, bagCount = 2}
$10 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555753f0 ""}
$11 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x555555571160, lastItemPtr = 0x555555571160, map = 0x555555575fe0 ""}
$12 = (ITEM *) 0x555555575fb0
$13 = {item = 1, bagState = 0x5555555721b8, currentBagUsage = 1, bagCount = 2}
$14 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x555555572140, lastItemPtr = 0x555555572250, map = 0x555555576ea0 ""}
$15 = (ITEM *) 0x555555572220
$16 = (ITEM *) 0x555555572270
$17 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555722a0 ""}
$18 = {item = 1, bagState = 0x5555555725c8, currentBagUsage = 2, bagCount = 2}
$19 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x555555572160, lastItemPtr = 0x555555572160, map = 0x555555577a60 ""}
$20 = (ITEM *) 0x555555572630
$21 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x555555572660, lastItemPtr = 0x555555572660, map = 0x5555555726b0 ""}
$22 = (ITEM *) 0x555555572680
Continuing.

Breakpoint 1, getMinBagCount (items=0x5555555711e8, bags=0x5555555702b8, itemCount=2, bagCount=2) at branchAndBound.cpp:128
128	        popped = queue.pop();
1: popped = {item = 0, bagState = 0x5555555709f8, currentBagUsage = 2, bagCount = 2}
2: popped.bagState[0] = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555762e0 ""}
3: popped.bagState[1] = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555555720f0, lastItemPtr = 0x5555555720f0, map = 0x555555571230 ""}
4: toPush = {item = 1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
5: toPush.bagState[0] = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555573870 ""}
6: toPush.bagState[1] = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555555729b0, lastItemPtr = 0x5555555729b0, map = 0x555555570e40 ""}
$23 = {item = 1, bagState = 0x5555555721b8, currentBagUsage = 1, bagCount = 2}
$24 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x555555572140, lastItemPtr = 0x555555572250, map = 0x555555576ea0 ""}
$25 = (ITEM *) 0x555555572220
$26 = (ITEM *) 0x555555572270
$27 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555722a0 ""}
$28 = {item = 1, bagState = 0x5555555725c8, currentBagUsage = 2, bagCount = 2}
$29 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x555555572160, lastItemPtr = 0x555555572160, map = 0x555555577a60 ""}
$30 = (ITEM *) 0x555555572630
$31 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x555555572660, lastItemPtr = 0x555555572660, map = 0x5555555726b0 ""}
$32 = (ITEM *) 0x555555572680
$33 = {item = 1, bagState = 0x5555555729d8, currentBagUsage = 2, bagCount = 2}
$34 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5555555725a0, lastItemPtr = 0x5555555725a0, map = 0x555555578620 ""}
$35 = (ITEM *) 0x555555572a40
$36 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x555555572a70, lastItemPtr = 0x555555572a70, map = 0x5555555791e0 ""}
$37 = (ITEM *) 0x555555572a90
129	        if(popped.item != itemCount - 1)
7: popped = {item = 1, bagState = 0x5555555709f8, currentBagUsage = 1, bagCount = 2}
8: toPush = {item = 1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
161	            outcome++;
7: popped = {item = 1, bagState = 0x5555555709f8, currentBagUsage = 1, bagCount = 2}
8: toPush = {item = 1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
163	            for(int i = 0; i < bagCount; ++i)
7: popped = {item = 1, bagState = 0x5555555709f8, currentBagUsage = 1, bagCount = 2}
8: toPush = {item = 1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
165	                std::string fileName = "outcome";
7: popped = {item = 1, bagState = 0x5555555709f8, currentBagUsage = 1, bagCount = 2}
8: toPush = {item = 1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
166	                fileName += std::to_string(outcome);
7: popped = {item = 1, bagState = 0x5555555709f8, currentBagUsage = 1, bagCount = 2}
8: toPush = {item = 1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
167	                fileName += " bag";
7: popped = {item = 1, bagState = 0x5555555709f8, currentBagUsage = 1, bagCount = 2}
8: toPush = {item = 1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
168	                fileName += std::to_string(i + 1);
7: popped = {item = 1, bagState = 0x5555555709f8, currentBagUsage = 1, bagCount = 2}
8: toPush = {item = 1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
169					fileName += ".txt";
7: popped = {item = 1, bagState = 0x5555555709f8, currentBagUsage = 1, bagCount = 2}
8: toPush = {item = 1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
170	                popped.bagState[i].printBagMap(fileName);
7: popped = {item = 1, bagState = 0x5555555709f8, currentBagUsage = 1, bagCount = 2}
8: toPush = {item = 1, bagState = 0x555555570dd8, currentBagUsage = 2, bagCount = 2}
$38 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x5555555720f0, lastItemPtr = 0x555555575360, map = 0x5555555762e0 ""}
$39 = {item = 0x555555572110, nextItemOnList = 0x555555575360}
$40 = {x = 4, y = 8, z = 4, weight = 10, xLocation = 0, yLocation = 0, zLocation = 0}
$41 = {x = 7, y = 3, z = 7, weight = 23, xLocation = 0, yLocation = 0, zLocation = 0}
There is no member or method named map.
0x5555555762e0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5555555762e8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5555555762f0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5555555762f8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x555555576300:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Reading symbols from exe...
Breakpoint 1 at 0x8873: file input.cpp, line 202.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
203	    map = nullptr;
Continuing.

Breakpoint 1, BAG::operator= (this=0x50b000000048, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x50b000000078, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
Continuing.
[Inferior 1 (process 13389) exited with code 01]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x50b000000048, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x50b000000078, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
Continuing.
[Inferior 1 (process 13392) exited with code 01]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x50b000000048, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x50b000000078, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
[Inferior 1 (process 13403) exited with code 01]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
Undefined command: "y".  Try "help".
Continuing.

Breakpoint 1, BAG::operator= (this=0x50b000000048, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x50b000000078, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
$1 = (unsigned char *) 0x517000000080 "\f"
$2 = 12 '\f'
0x517000000080:	0x0c	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000088:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000090:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000098:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5170000000a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Cannot watch constant value `0x517000000080'.
Hardware watchpoint 2: *0x517000000080
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Hardware watchpoint 2: *0x517000000080

Old value = <unreadable>
New value = -1094795586
__memset_avx2_unaligned_erms () at ../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:245
warning: 245	../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S: No such file or directory
Continuing.

Hardware watchpoint 2: *0x517000000080

Old value = -1094795586
New value = -1094795776
BAG::initMap (this=0x50b000000048) at input.cpp:284
284	    for(int i = 0; i < size; ++i)
Continuing.

Hardware watchpoint 2: *0x517000000080

Old value = -1094795776
New value = -1094844416
BAG::initMap (this=0x50b000000048) at input.cpp:284
284	    for(int i = 0; i < size; ++i)
Continuing.

Hardware watchpoint 2: *0x517000000080

Old value = -1094844416
New value = -1107296256
BAG::initMap (this=0x50b000000048) at input.cpp:284
284	    for(int i = 0; i < size; ++i)
Continuing.

Hardware watchpoint 2: *0x517000000080

Old value = -1107296256
New value = 0
BAG::initMap (this=0x50b000000048) at input.cpp:284
284	    for(int i = 0; i < size; ++i)
Continuing.

Breakpoint 1, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x50b000000048, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Hardware watchpoint 2: *0x517000000080

Old value = 0
New value = 12
__asan::Allocator::QuarantineChunk (ptr=0x517000000080, this=0x7ffff799cec0 <__asan::instance>, m=0x517000000070, stack=0x7fffffffce30) at ../../../../src/libsanitizer/asan/asan_allocator.cpp:693
warning: 693	../../../../src/libsanitizer/asan/asan_allocator.cpp: No such file or directory
Continuing.

Breakpoint 1, BAG::operator= (this=0x50b000000078, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 1, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
Continuing.
[Inferior 1 (process 14172) exited with code 01]
Note: breakpoint 1 also set at pc 0x55555555c873.
Breakpoint 3 at 0x55555555c873: file input.cpp, line 202.
Breakpoint 4 at 0x55555555c873: file input.cpp, line 202.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 4, BAG::operator= (this=0x50b000000048, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 4, BAG::operator= (this=0x50b000000078, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 4, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
[Inferior 1 (process 14180) exited with code 01]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 4, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 4, BAG::operator= (this=0x50b000000048, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 4, BAG::operator= (this=0x50b000000078, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 4, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
#0  BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
#1  0x000055555556114c in sort (bags=0x50b000000048, bagCount=2) at input.cpp:705
#2  0x0000555555561e79 in main () at source.cpp:87
#1  0x000055555556114c in sort (bags=0x50b000000048, bagCount=2) at input.cpp:705
705	        tempBag = bags[i];
$3 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x517000000080 "\f"}
0x517000000080:	0x0c	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000088:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000090:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000098:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5170000000a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
Breakpoint 5 at 0x555555561066: file input.cpp, line 692.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 5, sort (bags=0x50b000000048, bagCount=2) at input.cpp:692
692	    BAG tempBag;
1: x/40xb tempBag.map
0x0:	<error: Cannot access memory at address 0x0>
695	    for(int i = 0; i < bagCount; i++)
1: x/40xb tempBag.map
0x0:	<error: Cannot access memory at address 0x0>
697	        maxIndex = i;
1: x/40xb tempBag.map
0x0:	<error: Cannot access memory at address 0x0>
699	        for(int j = i + 1; j < bagCount; j++)
1: x/40xb tempBag.map
0x0:	<error: Cannot access memory at address 0x0>
701	            if(compare(bags[j], bags[maxIndex]) == 0)
1: x/40xb tempBag.map
0x0:	<error: Cannot access memory at address 0x0>
702	                maxIndex = j;
1: x/40xb tempBag.map
0x0:	<error: Cannot access memory at address 0x0>
699	        for(int j = i + 1; j < bagCount; j++)
1: x/40xb tempBag.map
0x0:	<error: Cannot access memory at address 0x0>
705	        tempBag = bags[i];
1: x/40xb tempBag.map
0x0:	<error: Cannot access memory at address 0x0>
706	        bags[i] = bags[maxIndex];
1: x/40xb tempBag.map
0x517000000080:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000088:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000090:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000098:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5170000000a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
707	        bags[maxIndex] = tempBag;
1: x/40xb tempBag.map
0x517000000080:	0x0c	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000088:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000090:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000098:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5170000000a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
695	    for(int i = 0; i < bagCount; i++)
1: x/40xb tempBag.map
0x517000000080:	0x0c	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000088:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000090:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000098:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5170000000a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
697	        maxIndex = i;
1: x/40xb tempBag.map
0x517000000080:	0x0c	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000088:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000090:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000098:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5170000000a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
699	        for(int j = i + 1; j < bagCount; j++)
1: x/40xb tempBag.map
0x517000000080:	0x0c	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000088:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000090:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000098:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5170000000a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
705	        tempBag = bags[i];
1: x/40xb tempBag.map
0x517000000080:	0x0c	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000088:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000090:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x517000000098:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5170000000a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
[Inferior 1 (process 14272) exited with code 01]
Breakpoint 6 at 0x55555555c873: file input.cpp, line 202.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 6, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 6, BAG::operator= (this=0x50b000000048, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 6, BAG::operator= (this=0x50b000000078, other=...) at input.cpp:202
202	    delete[] map;
Continuing.

Breakpoint 6, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
#0  BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
#1  0x000055555556114c in sort (bags=0x50b000000048, bagCount=2) at input.cpp:705
#2  0x0000555555561e79 in main () at source.cpp:87
#1  0x000055555556114c in sort (bags=0x50b000000048, bagCount=2) at input.cpp:705
705	        tempBag = bags[i];
$4 = (BAG *) 0x7ffff4f09030
$5 = (BAG *) 0x50b000000078
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 6, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
#0  BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
#1  0x000055555556114c in sort (bags=0x50b000000048, bagCount=2) at input.cpp:705
#2  0x0000555555561e79 in main () at source.cpp:87
#1  0x000055555556114c in sort (bags=0x50b000000048, bagCount=2) at input.cpp:705
705	        tempBag = bags[i];
#0  BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
Cannot access memory at address 0x0
$6 = (unsigned char *) 0x0
203	    map = nullptr;
206	    x = other.x;
$7 = (unsigned char *) 0x0
207	    y = other.y;
208	    z = other.z;
209	    maxCapacity = other.maxCapacity;
210	    itemCount = other.itemCount;
211	    itemWeightSum = other.itemWeightSum;
214		if(other.firstItemPtr != nullptr)
225			firstItemPtr = nullptr;
226			lastItemPtr = nullptr;
229	    initMap();
BAG::initMap (this=0x7ffff4f09030) at input.cpp:273
273	    if(map != nullptr)
281	    int size = (x * y * z - 1) / 8 + 1;
282	    map = new unsigned char[size];
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
285	        map[i] = 0;
284	    for(int i = 0; i < size; ++i)
$8 = 750
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 6, BAG::operator= (this=0x7ffff4f09030, other=...) at input.cpp:202
202	    delete[] map;
$9 = (unsigned char *) 0x0
203	    map = nullptr;
$10 = (unsigned char *) 0x0
206	    x = other.x;
207	    y = other.y;
208	    z = other.z;
209	    maxCapacity = other.maxCapacity;
210	    itemCount = other.itemCount;
211	    itemWeightSum = other.itemWeightSum;
214		if(other.firstItemPtr != nullptr)
225			firstItemPtr = nullptr;
226			lastItemPtr = nullptr;
229	    initMap();
$11 = (unsigned char *) 0x0
230		map = other.map;
$12 = (unsigned char *) 0x517000000400 ""
$13 = (unsigned char *) 0x517000000080 ""
232	    return *this;
$14 = (unsigned char *) 0x517000000080 ""
Reading symbols from exe...
Breakpoint 1 at 0x55f8: file branchAndBound.cpp, line 170.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:170
170	                popped.bagState[i].printBagMap(fileName);
$1 = {item = 1, bagState = 0x50b000000bf8, currentBagUsage = 1, bagCount = 2}
$2 = (BAG *) 0x50b000000bf8
$3 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x502000000310, lastItemPtr = 0x502000000330, map = 0x51f00000fc80 "\377"}
$4 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x517000004a00 ""}
$5 = {x = 4, y = 8, z = 4, weight = 10, xLocation = 0, yLocation = 0, zLocation = 0}
Size letters are meaningless in "print" command.
0x51f00000fc80:	0xff	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fc88:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fc90:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fc98:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fca0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fca8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcb0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcb8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcc0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcc8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcd0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcd8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fce0:	0x00	0x00	0x00	0x00
0x51f00000fc80:	0xff	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fc88:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fc90:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fc98:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fca0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fca8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcb0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcb8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcc0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcc8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcd0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcd8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fce0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fce8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcf0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fcf8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd00:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd08:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd10:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd18:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd20:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd28:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd30:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd38:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd40:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd48:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd50:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd58:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd60:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd68:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd70:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd78:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd80:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd88:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd90:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fd98:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fda0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fda8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fdb0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fdb8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fdc0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fdc8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fdd0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fdd8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fde0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fde8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fdf0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fdf8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe00:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe08:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe10:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe18:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe20:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe28:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe30:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe38:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe40:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe48:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe50:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe58:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe60:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe68:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000fe70:	0x00	0x00	0x00	0x00
Function "branchAndBound.cpp" not defined.
Breakpoint 2 at 0x555555559349: file branchAndBound.cpp, line 152.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 2, getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:152
152	                        queue.push(toPush);
$6 = {item = 0, bagState = 0x50b000000308, currentBagUsage = 2, bagCount = 2}
0x51f000004680:	0xff	0x00	0x00	0x03	0xfc	0x00	0x00	0x0f
0x51f000004688:	0xf0	0x00	0x00	0x3f	0xc0	0x00	0x00	0xff
0x51f000004690:	0x00	0x00	0x03	0xfc	0x00	0x00	0x0f	0xf0
0x51f000004698:	0x00	0x00	0x3f	0xc0	0x00	0x00	0x00	0x00
0x51f0000046a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046a8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046b0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046b8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046c0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046c8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046d0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046d8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046e0:	0x00	0x00	0x00	0x00
133	            for(int i = 0; i < bagCount; i++)
$7 = {item = 0, bagState = 0x50b0000003b8, currentBagUsage = 2, bagCount = 2}
There is no member or method named map.
0x51f000005480:	0xff	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005488:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005490:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005498:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054a8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054b0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054b8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054c0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054c8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054d0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054d8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054e0:	0x00	0x00	0x00	0x00
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 2, getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:152
152	                        queue.push(toPush);
QUEUE::push (this=0x7ffff5209100, node=...) at branchAndBound.cpp:82
82	    if(size == capacity)
85	    ++size;
86	    buffer[++rear] = node;
NODE::operator= (this=0x5190000000a0, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
47	    delete[] bagState;
48	    bagState = nullptr;
50	    item = other.item;
51	    currentBagUsage = other.currentBagUsage;
52	    bagCount = other.bagCount;
53	    initializeBagState(other.bagState, bagCount);
NODE::initializeBagState (this=0x5190000000a0, listOfBags=0x50b000000308, _bagCount=2) at branchAndBound.cpp:19
19		bagCount = _bagCount;
21	    if(bagState != nullptr)
27	    bagState = new BAG[bagCount];
29	    for(int i = 0; i < bagCount; i++)
30	        bagState[i] = listOfBags[i];
29	    for(int i = 0; i < bagCount; i++)
30	        bagState[i] = listOfBags[i];
29	    for(int i = 0; i < bagCount; i++)
31	}
NODE::operator= (this=0x5190000000a0, other=...) at branchAndBound.cpp:55
55	    return *this;
56	}
QUEUE::push (this=0x7ffff5209100, node=...) at branchAndBound.cpp:87
87	}
getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:133
133	            for(int i = 0; i < bagCount; i++)
135	                toPush = popped;
136	                toPush.item = popped.item + 1;
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 2, getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:152
152	                        queue.push(toPush);
QUEUE::push (this=0x7ffff5209100, node=...) at branchAndBound.cpp:82
82	    if(size == capacity)
85	    ++size;
86	    buffer[++rear] = node;
NODE::operator= (this=0x5190000000a0, other=...) at branchAndBound.cpp:44
44	    if(this == &other)
47	    delete[] bagState;
48	    bagState = nullptr;
50	    item = other.item;
51	    currentBagUsage = other.currentBagUsage;
52	    bagCount = other.bagCount;
53	    initializeBagState(other.bagState, bagCount);
NODE::initializeBagState (this=0x5190000000a0, listOfBags=0x50b000000308, _bagCount=2) at branchAndBound.cpp:19
19		bagCount = _bagCount;
21	    if(bagState != nullptr)
27	    bagState = new BAG[bagCount];
29	    for(int i = 0; i < bagCount; i++)
30	        bagState[i] = listOfBags[i];
BAG::operator= (this=0x50b0000003b8, other=...) at input.cpp:191
191	    if(this == &other)
195		if(firstItemPtr != nullptr)
202	    delete[] map;
203	    map = nullptr;
206	    x = other.x;
207	    y = other.y;
208	    z = other.z;
209	    maxCapacity = other.maxCapacity;
210	    itemCount = other.itemCount;
211	    itemWeightSum = other.itemWeightSum;
214		if(other.firstItemPtr != nullptr)
216			firstItemPtr = new ITEMLIST();
217			*firstItemPtr = *other.firstItemPtr;
218			ITEMLIST* ptr = firstItemPtr;
219			while(ptr->nextItemOnList !=nullptr)
221			lastItemPtr = ptr;
229	    initMap();
230		*map = *other.map;
Undefined command: "x100".  Try "help".
0x51f0000054e4:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054ec:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054f4:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054fc:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005504:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000550c:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005514:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000551c:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005524:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000552c:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005534:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f00000553c:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005544:	0x00	0x00	0x00	0x00
0x51f000005480:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005488:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005490:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005498:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054a8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054b0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054b8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054c0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054c8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054d0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054d8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054e0:	0x00	0x00	0x00	0x00
0x51f000004680:	0xff	0x00	0x00	0x03	0xfc	0x00	0x00	0x0f
0x51f000004688:	0xf0	0x00	0x00	0x3f	0xc0	0x00	0x00	0xff
0x51f000004690:	0x00	0x00	0x03	0xfc	0x00	0x00	0x0f	0xf0
0x51f000004698:	0x00	0x00	0x3f	0xc0	0x00	0x00	0x00	0x00
0x51f0000046a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046a8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046b0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046b8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046c0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046c8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046d0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046d8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046e0:	0x00	0x00	0x00	0x00
232	    return *this;
0x51f000004680:	0xff	0x00	0x00	0x03	0xfc	0x00	0x00	0x0f
0x51f000004688:	0xf0	0x00	0x00	0x3f	0xc0	0x00	0x00	0xff
0x51f000004690:	0x00	0x00	0x03	0xfc	0x00	0x00	0x0f	0xf0
0x51f000004698:	0x00	0x00	0x3f	0xc0	0x00	0x00	0x00	0x00
0x51f0000046a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046a8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046b0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046b8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046c0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046c8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046d0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046d8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000046e0:	0x00	0x00	0x00	0x00
0x51f000005480:	0xff	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005488:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005490:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f000005498:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054a8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054b0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054b8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054c0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054c8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054d0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054d8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x51f0000054e0:	0x00	0x00	0x00	0x00
Reading symbols from exe...
Breakpoint 1 at 0x5380: file branchAndBound.cpp, line 161.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:161
161	            outcome++;
printing queue buffer {index}
$1 = {item = 1, bagState = 0x50b000000888, currentBagUsage = 2, bagCount = 2}
Printing bag state of buffer {index}
$2 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5020000001f0, lastItemPtr = 0x5020000001f0, map = 0x51f00000b680 "\377"}
printing current item:
$3 = (ITEM *) 0x503000000250
Printing bag state of buffer {index}
$4 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x502000000210, lastItemPtr = 0x502000000210, map = 0x517000003880 "\377"}
printing current item:
$5 = (ITEM *) 0x503000000280
printing queue buffer {index}
$6 = {item = 1, bagState = 0x50b000000a98, currentBagUsage = 2, bagCount = 2}
Printing bag state of buffer {index}
$7 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5020000002b0, lastItemPtr = 0x5020000002b0, map = 0x51f00000e080 "\377"}
printing current item:
$8 = (ITEM *) 0x503000000340
Printing bag state of buffer {index}
$9 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5020000002d0, lastItemPtr = 0x5020000002d0, map = 0x517000004300 "\377"}
printing current item:
$10 = (ITEM *) 0x503000000370
$11 = {item = 1, bagState = 0x50b000000bf8, currentBagUsage = 1, bagCount = 2}
$12 = 2
Reading symbols from exe...
Breakpoint 1 at 0x5385: file branchAndBound.cpp, line 161.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x506000000028, bags=0x50b000000048, itemCount=2, bagCount=2) at branchAndBound.cpp:161
161	            outcome++;
$1 = {item = 1, bagState = 0x50b000000bf8, currentBagUsage = 1, bagCount = 2}
$2 = 2
Reading symbols from exe...
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 16392) exited with code 01]
Reading symbols from exe...
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 16444) exited normally]
Reading symbols from exe...
Breakpoint 1 at 0x2ea6: file branchAndBound.cpp, line 130.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Breakpoint 2 at 0x55555555708a: file branchAndBound.cpp, line 163.
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.
[Inferior 1 (process 16481) exited normally]
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
The program is not being run.
Reading symbols from exe...
Breakpoint 1 at 0x2ea6: file branchAndBound.cpp, line 130.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = -1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 0, bagState = 0x5555555852f8, currentBagUsage = 4, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 0, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 1, bagState = 0x5555555852f8, currentBagUsage = 4, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b3b0, lastItemPtr = 0x55555558b3b0, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 0, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x555555571950 "\377"}
4: toPush = {item = 1, bagState = 0x5555555852f8, currentBagUsage = 4, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555555bf6c0, lastItemPtr = 0x5555555bf6c0, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 0, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 1, bagState = 0x5555555852f8, currentBagUsage = 4, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 0, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 1, bagState = 0x5555555852f8, currentBagUsage = 4, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x5555555fa070, map = 0x55555557a8d0 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x5555556008a0, lastItemPtr = 0x555555591de0, map = 0x5555555853c0 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5555555fa070, lastItemPtr = 0x5555555fa070, map = 0x555555571950 "\377"}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 4, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555556008a0, lastItemPtr = 0x5555556008a0, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x555555621380, lastItemPtr = 0x555555621380, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 4, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555556008a0, lastItemPtr = 0x5555556008a0, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555556008a0, lastItemPtr = 0x5555556008a0, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555555fa070, lastItemPtr = 0x5555555fa070, map = 0x555555571950 "\377"}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 4, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5555556008a0, lastItemPtr = 0x5555556008a0, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x555555648680, lastItemPtr = 0x555555648680, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x5555555fa070, map = 0x555555571950 "\377\377"}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x555555655780, lastItemPtr = 0x55555565c000, map = 0x555555588e60 "\377\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x555555571950 "\377"}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 4, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555566f980, lastItemPtr = 0x55555566f980, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x555555571950 "\377"}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x555555676200, lastItemPtr = 0x555555676200, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 4, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x555555676200, lastItemPtr = 0x555555676200, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x555555571950 "\377"}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 4, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x555555683300, lastItemPtr = 0x555555683300, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556b7700, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x555555571950 "\377"}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5555556d8180, lastItemPtr = 0x5555556d8180, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x555555576488, currentBagUsage = 4, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555571950 ""}
4: toPush = {item = 2, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 2, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 37, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x555555571950, map = 0x55555557a8d0 "\377\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556f2380 ""}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 2, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 37, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x5555555853c0 "\377\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x555555571950, map = 0x55555557a8d0 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 4, firstItemPtr = 0x5555555fa070, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x5555555853c0 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 4, firstItemPtr = 0x5555556ebb00, lastItemPtr = 0x5555556ebb00, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x555555571950, map = 0x55555557a8d0 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556f2380 ""}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x5555555853c0 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x555555571950, map = 0x55555557a8d0 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556f2380 ""}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x5555555853c0 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x555555571950, map = 0x55555557a8d0 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5555555fa070, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x5555555853c0 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5555556ebb00, lastItemPtr = 0x5555556ebb00, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 27, firstItemPtr = 0x555555571950, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556b7700, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 27, firstItemPtr = 0x5555556dea00, lastItemPtr = 0x5555556ebb00, map = 0x555555588e60 "\377\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x555555571950, map = 0x55555557a8d0 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556f2380 ""}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x5555555853c0 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556f2380 ""}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556b7700, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x555555571950, map = 0x55555557a8d0 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556f2380 ""}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x5555555853c0 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556f2380 ""}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556b7700, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 27, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x555555571950, map = 0x55555557a8d0 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555555fa070, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 27, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x5555555853c0 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555556ebb00, lastItemPtr = 0x5555556ebb00, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x555555571950, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556b7700, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x5555556dea00, lastItemPtr = 0x5555556ebb00, map = 0x555555588e60 "\377\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 4, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x555555571950, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 4, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556b7700, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x5555556dea00, lastItemPtr = 0x5555556ebb00, map = 0x555555588e60 "\377\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 2, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 37, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377\377\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 2, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 37, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x555555588e60 "\377\377\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x555555588e60 "\377\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x555555588e60 "\377\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x555555588e60 "\377\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x5555556f2380 "\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556b7700, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 14, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x555555588e60 "\377\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x5555556f2380 "\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 10, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556b7700, map = 0x555555588e60 "\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 27, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x5555555fa070, map = 0x55555557a8d0 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556f2380 ""}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 27, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x5555555853c0 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x55555557a8d0 "\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556f2380 ""}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556b7700, map = 0x5555555853c0 "\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555588e60 ""}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 27, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x5555555fa070, map = 0x5555556f2380 "\377\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 27, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556dea00, map = 0x555555588e60 "\377\377"}
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x555555576488, currentBagUsage = 3, bagCount = 4}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a8d0 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x55555558b4a0, lastItemPtr = 0x55555558b4a0, map = 0x5555556f2380 "\377"}
4: toPush = {item = 3, bagState = 0x5555555852f8, currentBagUsage = 3, bagCount = 4}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555853c0 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 23, firstItemPtr = 0x5555556b7700, lastItemPtr = 0x5555556b7700, map = 0x555555588e60 "\377"}
Not confirmed.
printing queue buffer 44
$1 = {item = 2, bagState = 0x5555556a3da8, currentBagUsage = 3, bagCount = 4}
Printing bag state of buffer 44
	$2 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 4, firstItemPtr = 0x5555556a3d80, lastItemPtr = 0x5555556a3d80, map = 0x5555556a3ea0 "\377"}
printing current item
		$3 = (ITEM *) 0x5555556a3e70
Printing bag state of buffer 44
	$4 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556a7940 ""}
Printing bag state of buffer 44
	$5 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x5555556a96a0, lastItemPtr = 0x5555556a96f0, map = 0x5555556a9740 "\377\377"}
printing current item
		$6 = (ITEM *) 0x5555556a96c0
printing current item
		$7 = (ITEM *) 0x5555556a9710
Printing bag state of buffer 44
	$8 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556aa300 ""}
printing queue buffer 45
$9 = {item = 2, bagState = 0x5555556aa628, currentBagUsage = 3, bagCount = 4}
Printing bag state of buffer 45
	$10 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556aa6f0 ""}
Printing bag state of buffer 45
	$11 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 4, firstItemPtr = 0x555555696c80, lastItemPtr = 0x555555696c80, map = 0x5555556ae1c0 "\377"}
printing current item
		$12 = (ITEM *) 0x5555556ae190
Printing bag state of buffer 45
	$13 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x5555556aff20, lastItemPtr = 0x5555556aff70, map = 0x5555556affc0 "\377\377"}
printing current item
		$14 = (ITEM *) 0x5555556aff40
printing current item
		$15 = (ITEM *) 0x5555556aff90
Printing bag state of buffer 45
	$16 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556b0b80 ""}
printing queue buffer 46
$17 = {item = 2, bagState = 0x5555556b0ea8, currentBagUsage = 2, bagCount = 4}
Printing bag state of buffer 46
	$18 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556b0f70 ""}
Printing bag state of buffer 46
	$19 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556b4a10 ""}
Printing bag state of buffer 46
	$20 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 3, itemWeightSum = 37, firstItemPtr = 0x555555683300, lastItemPtr = 0x5555556b67f0, map = 0x5555556b6840 "\377\377\377\003\377\377\374\017\377\377\360?\300?\300\377"}
printing current item
		$21 = (ITEM *) 0x5555556b6770
printing current item
		$22 = (ITEM *) 0x5555556b67c0
printing current item
		$23 = (ITEM *) 0x5555556b6810
Printing bag state of buffer 46
	$24 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556b7400 ""}
printing queue buffer 47
$25 = {item = 2, bagState = 0x5555556b7728, currentBagUsage = 3, bagCount = 4}
Printing bag state of buffer 47
	$26 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556b77f0 ""}
Printing bag state of buffer 47
	$27 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556bb290 ""}
Printing bag state of buffer 47
	$28 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 33, firstItemPtr = 0x55555569d500, lastItemPtr = 0x5555556bd020, map = 0x5555556bd070 "\377\377"}
printing current item
		$29 = (ITEM *) 0x5555556bcff0
printing current item
		$30 = (ITEM *) 0x5555556bd040
Printing bag state of buffer 47
	$31 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 4, firstItemPtr = 0x5555556bdc30, lastItemPtr = 0x5555556bdc30, map = 0x5555556bdc80 "\377"}
printing current item
		$32 = (ITEM *) 0x5555556bdc50
printing queue buffer 48
$33 = {item = 2, bagState = 0x5555556bdfa8, currentBagUsage = 3, bagCount = 4}
Printing bag state of buffer 48
	$34 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556be070 ""}
Quit
Reading symbols from exe...
Breakpoint 1 at 0x2ea6: file branchAndBound.cpp, line 130.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:130
130	        popped = queue.pop();
Reading symbols from exe...
Reading symbols from exe...
Breakpoint 1 at 0x32d8: file branchAndBound.cpp, line 192.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 18449) exited normally]
Breakpoint 2 at 0x5555555572d8: file branchAndBound.cpp, line 192.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 18580) exited normally]
Breakpoint 3 at 0x5555555571f2: file branchAndBound.cpp, line 179.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 18615) exited normally]
Note: breakpoint 3 also set at pc 0x5555555571f2.
Breakpoint 4 at 0x5555555571f2: file branchAndBound.cpp, line 179.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 18618) exited normally]
Undefined command: "y".  Try "help".
No line 164 in the current file.
Breakpoint 5 at 0x55555555710a: file branchAndBound.cpp, line 164.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 5, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=4, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
165	        if(popped.item != itemCount - 1)
169	            for(int i = 0; i < bagCount; i++)
171	                toPush = popped;
172	                toPush.item = popped.item + 1;
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
177	                if(wasPutIn)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
171	                toPush = popped;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
172	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -1, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
177	                if(wasPutIn)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
171	                toPush = popped;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
172	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -1, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
177	                if(wasPutIn)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
171	                toPush = popped;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
172	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -1, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
177	                if(wasPutIn)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
162	    while(!queue.isEmpty())
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
219	    return 0;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
220	}
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 4, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
219	    return 0;
1: popped = {item = -1, bagState = 0x0, currentBagUsage = 4, bagCount = 4, bagUsage = 0x0}
2: popped.bagState[0] = <error: Cannot access memory at address 0x0>
3: popped.bagState[1] = <error: Cannot access memory at address 0x30>
4: toPush = {item = 0, bagState = 0x0, currentBagUsage = 4, bagCount = 4, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
220	}
1: popped = {item = -1, bagState = 0x0, currentBagUsage = 4, bagCount = 4, bagUsage = 0x0}
2: popped.bagState[0] = <error: Cannot access memory at address 0x0>
3: popped.bagState[1] = <error: Cannot access memory at address 0x30>
4: toPush = {item = 0, bagState = 0x0, currentBagUsage = 4, bagCount = 4, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
main () at source.cpp:115
warning: Source file is more recent than executable.
115	    delete[] bags;
Reading symbols from exe...
Breakpoint 1 at 0x310a: file branchAndBound.cpp, line 164.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
165	        if(popped.item != itemCount - 1)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
171	                toPush = popped;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
172	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -1, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
177	                if(wasPutIn)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
171	                toPush = popped;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
172	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -1, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
177	                if(wasPutIn)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
171	                toPush = popped;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
172	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -1, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
177	                if(wasPutIn)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
171	                toPush = popped;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
172	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -1, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
177	                if(wasPutIn)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
162	    while(!queue.isEmpty())
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
219	    return 0;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
220	}
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555573a58, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
165	        if(popped.item != itemCount - 1)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
171	                toPush = popped;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
172	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -1, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
$1 = {x = 1, y = 1, z = 1, weight = 1}
$2 = {x = 2, y = 2, z = 2, weight = 2}
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
165	        if(popped.item != itemCount - 1)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
171	                toPush = popped;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
172	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -1, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
$3 = {x = 1, y = 1, z = 1, weight = 1}
BAG::tryItem (this=0x555555576968, itemToCheck=...) at input.cpp:382
382	{
384	    if(itemWeightSum + itemToCheck.weight > maxCapacity)
$4 = {x = 1, y = 1, z = 1, weight = 1}
387	    int totalBitShift = 0;
388	    int itemSize = (itemToCheck.x - 1) / 8 + 1;
391	    itemMap = new unsigned char[itemSize];
393	    int itemxBytes = itemToCheck.x / 8;
394	    unsigned short itemxBits = bitTable[itemToCheck.x % 8];
397	    for(int k = 0; k < itemxBytes; ++k)
405	    ptr = &itemMap[totalBitShift / 8];
406		*ptr = (unsigned char)itemxBits;
408	    int xMaxShift = x - itemToCheck.x;
409	    int yMaxShift = y - itemToCheck.y;
410	    int zMaxShift = z - itemToCheck.z;
$5 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
412	    if(itemToCheck.x == 1)
414	        unsigned char byte = 128;
416	        for(int i = 0; i <= zMaxShift; ++i)
418	            for(int j = 0; j <= yMaxShift; ++j)
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
165	        if(popped.item != itemCount - 1)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
171	                toPush = popped;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
172	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -1, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
Reading symbols from exe...
Breakpoint 1 at 0x310a: file branchAndBound.cpp, line 164.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
165	        if(popped.item != itemCount - 1)
169	            for(int i = 0; i < bagCount; i++)
171	                toPush = popped;
172	                toPush.item = popped.item + 1;
175	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585870 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
177	                if(wasPutIn)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555573a50, lastItemPtr = 0x555555573a50, map = 0x555555585870 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
179						toPush.bagUsage[i] = true;
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555576968, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555573a50, lastItemPtr = 0x555555573a50, map = 0x555555585870 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555589310 ""}
Reading symbols from exe...
The program is not being run.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Program received signal SIGSEGV, Segmentation fault.
0x0000555555556ae9 in NODE::operator= (this=0x555555571f88, other=...) at branchAndBound.cpp:58
58	    delete[] bagState;
#0  0x0000555555556ae9 in NODE::operator= (this=0x555555571f88, other=...) at branchAndBound.cpp:58
#1  0x0000555555556ed6 in QUEUE::push (this=0x7fffffffd770, node=...) at branchAndBound.cpp:116
#2  0x00005555555572a4 in getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
#3  0x000055555555abcd in main () at source.cpp:112
Breakpoint 1 at 0x55555555728e: file branchAndBound.cpp, line 189.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
191						if(toPush.getUsedBagVolume() < smallestBagVolume && (toPush.item == itemCount -1))
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Continuing.

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Not confirmed.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Program received signal SIGSEGV, Segmentation fault.
0x0000555555556ae9 in NODE::operator= (this=0x555555571f88, other=...) at branchAndBound.cpp:58
58	    delete[] bagState;
$1 = {item = 33, bagState = 0xa0000000a, currentBagUsage = 10, bagCount = 1, bagUsage = 0x555555571f80}
Cannot access memory at address 0xa0000000a
#0  0x0000555555556ae9 in NODE::operator= (this=0x555555571f88, other=...) at branchAndBound.cpp:58
#1  0x0000555555556ed6 in QUEUE::push (this=0x7fffffffd770, node=...) at branchAndBound.cpp:116
#2  0x00005555555572a4 in getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
#3  0x000055555555abcd in main () at source.cpp:112
#1  0x0000555555556ed6 in QUEUE::push (this=0x7fffffffd770, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
No symbol "operator*" in current context.
$2 = (NODE &) @0x7fffffffd7b0: {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a99af0}
$3 = 200
$4 = {item = 33, bagState = 0xa0000000a, currentBagUsage = 10, bagCount = 1, bagUsage = 0x555555571f80}
#2  0x00005555555572a4 in getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
$5 = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a99af0}
Undefined command: "y".  Try "help".
Breakpoint 2 at 0x55555555710a: file branchAndBound.cpp, line 164.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 0, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558baf0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555576480, lastItemPtr = 0x555555576480, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 1, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558b9a0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555573a10, lastItemPtr = 0x555555573a10, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 0, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558bad0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558baf0, lastItemPtr = 0x55555558baf0, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 1, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558b570}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555555b94e0, lastItemPtr = 0x5555555b94e0, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 0, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 1, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555555b94e0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 0, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558baf0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 1, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555600ef0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555571fb0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x55555558baf0, lastItemPtr = 0x55555558bad0, map = 0x55555557a870 "\377\377\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555555fa6c0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x555555571ff0, lastItemPtr = 0x555555607720, map = 0x555555585940 "\377\377\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555571f90}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555571fb0, lastItemPtr = 0x555555571fb0, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555576480, lastItemPtr = 0x555555576480, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555571ff0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555556281a0, lastItemPtr = 0x5555556281a0, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555600ef0, lastItemPtr = 0x555555600ef0, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558bad0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555571f90, lastItemPtr = 0x555555571f90, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555600ef0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555648bf0, lastItemPtr = 0x555555648bf0, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558bad0, lastItemPtr = 0x55555558bad0, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555669620}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555662db0, lastItemPtr = 0x555555662db0, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558baf0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555576480, lastItemPtr = 0x555555576480, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555571f90, lastItemPtr = 0x555555571f90, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555662db0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555566fe90, lastItemPtr = 0x55555566fe90, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555655cd0, lastItemPtr = 0x555555655cd0, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555571fb0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x55555558baf0, lastItemPtr = 0x55555558bad0, map = 0x55555557e310 "\377\377\377\377"}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555655cd0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x555555697130, lastItemPtr = 0x555555669620, map = 0x5555555893e0 "\377\377\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555571f90}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555571fb0, lastItemPtr = 0x555555571fb0, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555669620}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555556b12f0, lastItemPtr = 0x5555556b12f0, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558bad0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555571f90, lastItemPtr = 0x555555571f90, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555556d1d20}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555556cb4b0, lastItemPtr = 0x5555556cb4b0, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555558bad0, lastItemPtr = 0x55555558bad0, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555556a4210}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555556e5670, lastItemPtr = 0x5555556e5670, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558baf0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555576480, lastItemPtr = 0x555555576480, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555669620}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555556ff830, lastItemPtr = 0x5555556ff830, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555571fb0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555720260}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555571f90}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555573a420}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558bad0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555571f90, lastItemPtr = 0x555555571f90, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557545e0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555574dd70, lastItemPtr = 0x55555574dd70, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555558bad0, lastItemPtr = 0x55555558bad0, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555576e7a0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555767f30, lastItemPtr = 0x555555767f30, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558baf0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555788960}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 1, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555571fb0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 2, bagState = 0x555555585878, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555740c90}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x55555560df70}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x555555571fb0, lastItemPtr = 0x555555571f90, map = 0x55555557a870 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\300"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 6, bagCount = 4, bagUsage = 0x55555560e9b0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x5555557a2b20, lastItemPtr = 0x55555560dfd0, map = 0x555555585940 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\300"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555558bad0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x55555560df70, lastItemPtr = 0x55555558baf0, map = 0x55555557a870 "\377\377\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555560df50, lastItemPtr = 0x55555560df50, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557d70b0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557c9f50, lastItemPtr = 0x555555740c90, map = 0x555555585940 "\377\377\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555557a9390, lastItemPtr = 0x5555557a9390, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x55555558bad0, lastItemPtr = 0x555555571fb0, map = 0x55555557a870 "\377\377\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557f1370}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557e4210, lastItemPtr = 0x55555578f1d0, map = 0x555555585940 "\377\377\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555560df50}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x555555576480, lastItemPtr = 0x55555560df70, map = 0x55555557a870 "\377\377\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555557a9390}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557fe4d0, lastItemPtr = 0x555555788960, map = 0x555555585940 "\377\377\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555571f90}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555560df50, lastItemPtr = 0x55555558bad0, map = 0x55555557a870 "\377\377\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555571fb0, lastItemPtr = 0x555555571fb0, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558258f0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555818790, lastItemPtr = 0x55555580b630, map = 0x555555585940 "\377\377\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555557eaac0, lastItemPtr = 0x5555557eaac0, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555558baf0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555571f90, lastItemPtr = 0x555555571f90, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555576480, lastItemPtr = 0x55555560df70, map = 0x55555557e310 "\377\377\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555583fbb0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555832a50, lastItemPtr = 0x555555832a50, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x55555578f1d0, lastItemPtr = 0x5555557eaac0, map = 0x5555555893e0 "\377\377\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555571fb0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558baf0, lastItemPtr = 0x55555558baf0, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555560df50, lastItemPtr = 0x55555560df50, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555859e70}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555584cd10, lastItemPtr = 0x55555584cd10, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555804d80, lastItemPtr = 0x555555804d80, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555560df70}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555571fb0, lastItemPtr = 0x555555571fb0, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555571f90, lastItemPtr = 0x555555571f90, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557eaac0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555866fd0, lastItemPtr = 0x555555866fd0, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555839300, lastItemPtr = 0x555555839300, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555558bad0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555560df70, lastItemPtr = 0x55555558baf0, map = 0x55555557a870 "\377\377\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555588e3f0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555881290, lastItemPtr = 0x5555558535c0, map = 0x555555585940 "\377\377\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558bad0, lastItemPtr = 0x55555558bad0, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555571fb0, lastItemPtr = 0x555555571fb0, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555558a86b0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555589b550, lastItemPtr = 0x55555589b550, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555804d80, lastItemPtr = 0x555555804d80, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555560df50}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555576480, lastItemPtr = 0x555555576480, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555874130}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555887b40, lastItemPtr = 0x555555887b40, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555571f90}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555560df50, lastItemPtr = 0x55555560df50, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558c2970}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558bc0c0, lastItemPtr = 0x5555558bc0c0, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555558baf0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555571f90, lastItemPtr = 0x555555576480, map = 0x55555557a870 "\377\377\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555558dcc30}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x5555558e9d90, lastItemPtr = 0x5555558d6380, map = 0x555555585940 "\377\377\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555571fb0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558baf0, lastItemPtr = 0x55555558baf0, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555560df50, lastItemPtr = 0x55555560df50, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558f6ef0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555904050, lastItemPtr = 0x555555904050, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555558b5810, lastItemPtr = 0x5555558b5810, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555560df70}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555571fb0, lastItemPtr = 0x555555571fb0, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555559111b0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558cfad0, lastItemPtr = 0x5555558cfad0, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555558bad0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555560df70, lastItemPtr = 0x55555560df70, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555592b470}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555924bc0, lastItemPtr = 0x555555924bc0, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558cfad0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555571fb0, lastItemPtr = 0x555555571f90, map = 0x55555557a870 "\377\377\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555576480, lastItemPtr = 0x555555576480, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555959140}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x55555594bfe0, lastItemPtr = 0x555555945730, map = 0x555555585940 "\377\377\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555592b470, lastItemPtr = 0x55555592b470, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558d6380}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558cfad0, lastItemPtr = 0x5555558cfad0, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555558baf0, lastItemPtr = 0x55555560df50, map = 0x55555557e310 "\377\377\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555973400}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555559662a0, lastItemPtr = 0x5555559662a0, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555591e310, lastItemPtr = 0x55555592b470, map = 0x5555555893e0 "\377\377\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558d6380, lastItemPtr = 0x5555558d6380, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555571fb0, lastItemPtr = 0x555555571fb0, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555598d6c0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555980560, lastItemPtr = 0x555555980560, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555593ee80, lastItemPtr = 0x55555593ee80, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555560df50}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555576480, lastItemPtr = 0x555555576480, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558cfad0, lastItemPtr = 0x5555558cfad0, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555592b470}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555599a820, lastItemPtr = 0x55555599a820, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555596cb50, lastItemPtr = 0x55555596cb50, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555571f90}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555560df50, lastItemPtr = 0x55555560df50, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555558d6380, lastItemPtr = 0x555555571fb0, map = 0x55555557e310 "\377\377\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555559c1c40}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555559b4ae0, lastItemPtr = 0x5555559b4ae0, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x555555986e10, lastItemPtr = 0x5555559a7980, map = 0x5555555893e0 "\377\377\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x55555558baf0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x555555571f90, lastItemPtr = 0x5555558cfad0, map = 0x55555557e310 "\377\377\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555559dbf00}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x5555559b4ae0, lastItemPtr = 0x55555599a820, map = 0x5555555893e0 "\377\377\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558d6380}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x55555558baf0, lastItemPtr = 0x55555560df50, map = 0x55555557e310 "\377\377\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555559f61c0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555559b4ae0, lastItemPtr = 0x55555599a820, map = 0x5555555893e0 "\377\377\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555558d6380, lastItemPtr = 0x555555571f90, map = 0x55555557e310 "\377\377\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555986e10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555559b4ae0, lastItemPtr = 0x55555599a820, map = 0x5555555893e0 "\377\377\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555571fb0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555576480, lastItemPtr = 0x555555576480, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558baf0, lastItemPtr = 0x55555558baf0, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555a2a740}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a1d5e0, lastItemPtr = 0x555555a1d5e0, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a09bd0, lastItemPtr = 0x555555a09bd0, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558cfad0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555571fb0, lastItemPtr = 0x5555558d6380, map = 0x55555557e310 "\377\377\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a44a00}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555a1d5e0, lastItemPtr = 0x555555a09bd0, map = 0x5555555893e0 "\377\377\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555560df50}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558cfad0, lastItemPtr = 0x5555558cfad0, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a10480}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a1d5e0, lastItemPtr = 0x555555a1d5e0, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555571f90}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555560df50, lastItemPtr = 0x55555560df50, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a5ecc0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a1d5e0, lastItemPtr = 0x555555a1d5e0, map = 0x5555555893e0 "\377\377"}
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 2, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558baf0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555571f90, lastItemPtr = 0x555555571f90, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558cfad0, lastItemPtr = 0x5555558cfad0, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 3, bagState = 0x555555585878, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a78f80}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a860e0, lastItemPtr = 0x555555a860e0, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a726d0, lastItemPtr = 0x555555a726d0, map = 0x5555555893e0 "\377\377"}
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x0000555555556ae9 in NODE::operator= (this=0x555555571f88, other=...) at branchAndBound.cpp:58
58	    delete[] bagState;
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
165	        if(popped.item != itemCount - 1)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
169	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = -10192, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = -1, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576480}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 0, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555573a10}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555585940 ""}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
printing queue buffer 1
$6 = {item = 0, bagState = 0x555555573a98, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555592310}
	Printing bag state of buffer 1
	$7 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555573a30, lastItemPtr = 0x555555573a30, map = 0x55555558bc50 "\377\377"}
		printing current item
		$8 = (ITEM *) 0x55555558bc30
	Printing bag state of buffer 1
	$9 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555558f6f0 ""}
	Printing bag state of buffer 1
	$10 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555591450 ""}
	Printing bag state of buffer 1
	$11 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555592010 ""}
printing queue buffer 2
$12 = {item = 0, bagState = 0x55555558b168, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558b550}
	Printing bag state of buffer 2
	$13 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555592ef0 ""}
	Printing bag state of buffer 2
	$14 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555573a50, lastItemPtr = 0x555555573a50, map = 0x555555596990 "\377\377"}
		printing current item
		$15 = (ITEM *) 0x55555558b230
	Printing bag state of buffer 2
	$16 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555986f0 ""}
	Printing bag state of buffer 2
	$17 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555558b250 ""}
printing queue buffer 3
$18 = {item = 0, bagState = 0x55555558b598, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558b980}
	Printing bag state of buffer 3
	$19 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555992b0 ""}
	Printing bag state of buffer 3
	$20 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555559cd50 ""}
	Printing bag state of buffer 3
	$21 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555573a70, lastItemPtr = 0x555555573a70, map = 0x55555559eab0 "\377\377"}
		printing current item
		$22 = (ITEM *) 0x55555558b660
	Printing bag state of buffer 3
	$23 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555558b680 ""}
printing queue buffer 4
$24 = {item = 0, bagState = 0x55555558b9c8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558bab0}
	Printing bag state of buffer 4
	$25 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555559f670 ""}
	Printing bag state of buffer 4
	$26 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555a3110 ""}
	Printing bag state of buffer 4
	$27 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555a4e70 ""}
	Printing bag state of buffer 4
	$28 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558b140, lastItemPtr = 0x55555558b140, map = 0x5555555a5a30 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$29 = (ITEM *) 0x55555558ba90
Continuing.

Breakpoint 2, getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:164
164	        popped = queue.pop();
1: popped = {item = 0, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558baf0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555576480, lastItemPtr = 0x555555576480, map = 0x55555557a870 "\377\377"}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557e310 ""}
4: toPush = {item = 1, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558b9a0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555573a10, lastItemPtr = 0x555555573a10, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
165	        if(popped.item != itemCount - 1)
1: popped = {item = 0, bagState = 0x5555555764a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558bad0}
2: popped.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555557a870 ""}
3: popped.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558baf0, lastItemPtr = 0x55555558baf0, map = 0x55555557e310 "\377\377"}
4: toPush = {item = 1, bagState = 0x555555585878, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558b9a0}
5: toPush.bagState[0] = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555573a10, lastItemPtr = 0x555555573a10, map = 0x555555585940 "\377\377"}
6: toPush.bagState[1] = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555893e0 ""}
printing queue buffer 3
$30 = {item = 0, bagState = 0x55555558b598, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558b980}
	Printing bag state of buffer 3
	$31 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555992b0 ""}
	Printing bag state of buffer 3
	$32 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555559cd50 ""}
	Printing bag state of buffer 3
	$33 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555573a70, lastItemPtr = 0x555555573a70, map = 0x55555559eab0 "\377\377"}
		printing current item
		$34 = (ITEM *) 0x55555558b660
	Printing bag state of buffer 3
	$35 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555558b680 ""}
printing queue buffer 4
$36 = {item = 0, bagState = 0x55555558b9c8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555558bab0}
	Printing bag state of buffer 4
	$37 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555559f670 ""}
	Printing bag state of buffer 4
	$38 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555a3110 ""}
	Printing bag state of buffer 4
	$39 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555a4e70 ""}
	Printing bag state of buffer 4
	$40 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558b140, lastItemPtr = 0x55555558b140, map = 0x5555555a5a30 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$41 = (ITEM *) 0x55555558ba90
printing queue buffer 5
$42 = {item = 1, bagState = 0x5555555a5d38, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555558bbd0}
	Printing bag state of buffer 5
	$43 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x55555558bb10, lastItemPtr = 0x55555558bb90, map = 0x5555555a5e00 "\377\377\377\377"}
		printing current item
		$44 = (ITEM *) 0x55555558bb70
		printing current item
		$45 = (ITEM *) 0x55555558bbb0
	Printing bag state of buffer 5
	$46 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555a98a0 ""}
	Printing bag state of buffer 5
	$47 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555ab600 ""}
	Printing bag state of buffer 5
	$48 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555ac1c0 ""}
printing queue buffer 6
$49 = {item = 1, bagState = 0x5555555ac4c8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555555b2c90}
	Printing bag state of buffer 6
	$50 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558bb30, lastItemPtr = 0x55555558bb30, map = 0x5555555ac590 "\377\377"}
		printing current item
		$51 = (ITEM *) 0x55555558bc10
	Printing bag state of buffer 6
	$52 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555555b0030, lastItemPtr = 0x5555555b0030, map = 0x5555555b0070 "\377\377"}
		printing current item
		$53 = (ITEM *) 0x5555555b0050
	Printing bag state of buffer 6
	$54 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555b1dd0 ""}
	Printing bag state of buffer 6
	$55 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555b2990 ""}
printing queue buffer 7
$56 = {item = 1, bagState = 0x5555555b2cd8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555555b94c0}
	Printing bag state of buffer 7
	$57 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558bb50, lastItemPtr = 0x55555558bb50, map = 0x5555555b2dc0 "\377\377"}
		printing current item
		$58 = (ITEM *) 0x5555555b2da0
	Printing bag state of buffer 7
	$59 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555b6860 ""}
	Printing bag state of buffer 7
	$60 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555555b85c0, lastItemPtr = 0x5555555b85c0, map = 0x5555555b8600 "\377\377"}
		printing current item
		$61 = (ITEM *) 0x5555555b85e0
	Printing bag state of buffer 7
	$62 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555b91c0 ""}
printing queue buffer 8
$63 = {item = 1, bagState = 0x5555555b9508, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555555bfcf0}
	Printing bag state of buffer 8
	$64 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555558bbf0, lastItemPtr = 0x55555558bbf0, map = 0x5555555b95f0 "\377\377"}
		printing current item
		$65 = (ITEM *) 0x5555555b95d0
	Printing bag state of buffer 8
	$66 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555bd090 ""}
	Printing bag state of buffer 8
	$67 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555bedf0 ""}
	Printing bag state of buffer 8
	$68 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555555bf9b0, lastItemPtr = 0x5555555bf9b0, map = 0x5555555bf9f0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$69 = (ITEM *) 0x5555555bf9d0
Reading symbols from exe...
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 23189) exited with code 01]
Breakpoint 1 at 0x55555555902e: file branchAndBound.cpp, line 116.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.

Breakpoint 1, QUEUE::push (this=0x7ffff5209060, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Continuing.
[Inferior 1 (process 23202) exited with code 01]
Reading symbols from exe...
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Program received signal SIGSEGV, Segmentation fault.
0x0000555555556ae9 in NODE::operator= (this=0x555555571f88, other=...) at branchAndBound.cpp:58
58	    delete[] bagState;
$1 = {item = 33, bagState = 0xa0000000a, currentBagUsage = 10, bagCount = 1, bagUsage = 0x555555571f80}
$2 = 128
$3 = 128
$4 = 3
$5 = 170
$6 = 85
#1  0x0000555555556ed6 in QUEUE::push (this=0x7fffffffd770, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
Python Exception <class 'gdb.error'>: No symbol "queue" in current context.
Error occurred in Python: No symbol "queue" in current context.
Python Exception <class 'gdb.error'>: No symbol "queue" in current context.
Error occurred in Python: No symbol "queue" in current context.
#2  0x00005555555572a4 in getMinBagCount (items=0x555555576a48, bags=0x5555555702b8, itemCount=8, bagCount=4) at branchAndBound.cpp:189
189	                        queue.push(toPush);
printing queue buffer 51
$7 = {item = 2, bagState = 0x5555556d1d48, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555556d8570}
	Printing bag state of buffer 51
	$8 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556d1e10 ""}
	Printing bag state of buffer 51
	$9 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555556c4c40, lastItemPtr = 0x5555556c4c40, map = 0x5555556d58d0 "\377\377"}
		printing current item
		$10 = (ITEM *) 0x5555556d58b0
	Printing bag state of buffer 51
	$11 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555556d7630, lastItemPtr = 0x5555556d7630, map = 0x5555556d7670 "\377\377"}
		printing current item
		$12 = (ITEM *) 0x5555556d7650
	Printing bag state of buffer 51
	$13 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555556d8230, lastItemPtr = 0x5555556d8230, map = 0x5555556d8270 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$14 = (ITEM *) 0x5555556d8250
printing queue buffer 52
$15 = {item = 2, bagState = 0x5555556d85b8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555556dede0}
	Printing bag state of buffer 52
	$16 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556d8680 ""}
	Printing bag state of buffer 52
	$17 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555556be3d0, lastItemPtr = 0x5555556be3d0, map = 0x5555556dc140 "\377\377"}
		printing current item
		$18 = (ITEM *) 0x5555556dc120
	Printing bag state of buffer 52
	$19 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556ddea0 ""}
	Printing bag state of buffer 52
	$20 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x5555556dea60, lastItemPtr = 0x5555556deaa0, map = 0x5555556deae0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$21 = (ITEM *) 0x5555556dea80
		printing current item
		$22 = (ITEM *) 0x5555556deac0
printing queue buffer 53
$23 = {item = 2, bagState = 0x5555556dee28, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555556e5650}
	Printing bag state of buffer 53
	$24 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x55555568a050, lastItemPtr = 0x5555556def10, map = 0x5555556def50 "\377\377\377\377"}
		printing current item
		$25 = (ITEM *) 0x5555556deef0
		printing current item
		$26 = (ITEM *) 0x5555556def30
	Printing bag state of buffer 53
	$27 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556e29f0 ""}
	Printing bag state of buffer 53
	$28 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555556e4750, lastItemPtr = 0x5555556e4750, map = 0x5555556e4790 "\377\377"}
		printing current item
		$29 = (ITEM *) 0x5555556e4770
	Printing bag state of buffer 53
	$30 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556e5350 ""}
printing queue buffer 54
$31 = {item = 2, bagState = 0x5555556e5698, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555556ebec0}
	Printing bag state of buffer 54
	$32 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555556b12f0, lastItemPtr = 0x5555556b12f0, map = 0x5555556e5780 "\377\377"}
		printing current item
		$33 = (ITEM *) 0x5555556e5760
	Printing bag state of buffer 54
	$34 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555556e9220, lastItemPtr = 0x5555556e9220, map = 0x5555556e9260 "\377\377"}
		printing current item
		$35 = (ITEM *) 0x5555556e9240
	Printing bag state of buffer 54
	$36 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555556eafc0, lastItemPtr = 0x5555556eafc0, map = 0x5555556eb000 "\377\377"}
		printing current item
		$37 = (ITEM *) 0x5555556eafe0
	Printing bag state of buffer 54
	$38 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556ebbc0 ""}
printing queue buffer 55
$39 = {item = 2, bagState = 0x5555556ebf08, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555556f2730}
	Printing bag state of buffer 55
	$40 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555556cb4b0, lastItemPtr = 0x5555556cb4b0, map = 0x5555556ebff0 "\377\377"}
		printing current item
		$41 = (ITEM *) 0x5555556ebfd0
	Printing bag state of buffer 55
	$42 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556efa90 ""}
	Printing bag state of buffer 55
	$43 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x5555556f17f0, lastItemPtr = 0x5555556f1830, map = 0x5555556f1870 "\377\377"}
		printing current item
		$44 = (ITEM *) 0x5555556f1810
		printing current item
		$45 = (ITEM *) 0x5555556f1850
	Printing bag state of buffer 55
	$46 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556f2430 ""}
printing queue buffer 56
$47 = {item = 2, bagState = 0x5555556f2778, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555556f8fa0}
	Printing bag state of buffer 56
	$48 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555556d8590, lastItemPtr = 0x5555556d8590, map = 0x5555556f2860 "\377\377"}
		printing current item
		$49 = (ITEM *) 0x5555556f2840
	Printing bag state of buffer 56
	$50 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556f6300 ""}
	Printing bag state of buffer 56
	$51 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555556f8060, lastItemPtr = 0x5555556f8060, map = 0x5555556f80a0 "\377\377"}
		printing current item
		$52 = (ITEM *) 0x5555556f8080
	Printing bag state of buffer 56
	$53 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555556f8c60, lastItemPtr = 0x5555556f8c60, map = 0x5555556f8ca0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$54 = (ITEM *) 0x5555556f8c80
printing queue buffer 57
$55 = {item = 2, bagState = 0x5555556f8fe8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555556ff810}
	Printing bag state of buffer 57
	$56 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555556ebee0, lastItemPtr = 0x5555556ebee0, map = 0x5555556f90d0 "\377\377"}
		printing current item
		$57 = (ITEM *) 0x5555556f90b0
	Printing bag state of buffer 57
	$58 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555556fcb70, lastItemPtr = 0x5555556fcb70, map = 0x5555556fcbb0 "\377\377"}
		printing current item
		$59 = (ITEM *) 0x5555556fcb90
	Printing bag state of buffer 57
	$60 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555556fe910, lastItemPtr = 0x5555556fe910, map = 0x5555556fe950 "\377\377"}
		printing current item
		$61 = (ITEM *) 0x5555556fe930
	Printing bag state of buffer 57
	$62 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556ff510 ""}
printing queue buffer 58
$63 = {item = 2, bagState = 0x5555556ff858, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555706080}
	Printing bag state of buffer 58
	$64 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555556ff920 ""}
	Printing bag state of buffer 58
	$65 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x5555556dee00, lastItemPtr = 0x5555557033e0, map = 0x555555703420 "\377\377\377\377"}
		printing current item
		$66 = (ITEM *) 0x5555557033c0
		printing current item
		$67 = (ITEM *) 0x555555703400
	Printing bag state of buffer 58
	$68 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555705180, lastItemPtr = 0x555555705180, map = 0x5555557051c0 "\377\377"}
		printing current item
		$69 = (ITEM *) 0x5555557051a0
	Printing bag state of buffer 58
	$70 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555705d80 ""}
printing queue buffer 59
$71 = {item = 2, bagState = 0x5555557060c8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555570c8f0}
	Printing bag state of buffer 59
	$72 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555706190 ""}
	Printing bag state of buffer 59
	$73 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555556f8fc0, lastItemPtr = 0x5555556f8fc0, map = 0x555555709c50 "\377\377"}
		printing current item
		$74 = (ITEM *) 0x555555709c30
	Printing bag state of buffer 59
	$75 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555570b9b0, lastItemPtr = 0x55555570b9f0, map = 0x55555570ba30 "\377\377"}
		printing current item
		$76 = (ITEM *) 0x55555570b9d0
		printing current item
		$77 = (ITEM *) 0x55555570ba10
	Printing bag state of buffer 59
	$78 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555570c5f0 ""}
printing queue buffer 60
$79 = {item = 2, bagState = 0x55555570c938, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555713160}
	Printing bag state of buffer 60
	$80 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555570ca00 ""}
	Printing bag state of buffer 60
	$81 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555556a4210, lastItemPtr = 0x5555556a4210, map = 0x5555557104c0 "\377\377"}
		printing current item
		$82 = (ITEM *) 0x5555557104a0
	Printing bag state of buffer 60
	$83 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555712220, lastItemPtr = 0x555555712220, map = 0x555555712260 "\377\377"}
		printing current item
		$84 = (ITEM *) 0x555555712240
	Printing bag state of buffer 60
	$85 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555712e20, lastItemPtr = 0x555555712e20, map = 0x555555712e60 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$86 = (ITEM *) 0x555555712e40
printing queue buffer 61
$87 = {item = 2, bagState = 0x5555557131a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557199d0}
	Printing bag state of buffer 61
	$88 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555557060a0, lastItemPtr = 0x5555557060a0, map = 0x555555713290 "\377\377"}
		printing current item
		$89 = (ITEM *) 0x555555713270
	Printing bag state of buffer 61
	$90 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555716d30 ""}
	Printing bag state of buffer 61
	$91 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x555555718a90, lastItemPtr = 0x555555718ad0, map = 0x555555718b10 "\377\377"}
		printing current item
		$92 = (ITEM *) 0x555555718ab0
		printing current item
		$93 = (ITEM *) 0x555555718af0
	Printing bag state of buffer 61
	$94 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557196d0 ""}
printing queue buffer 62
$95 = {item = 2, bagState = 0x555555719a18, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555720240}
	Printing bag state of buffer 62
	$96 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555719ae0 ""}
	Printing bag state of buffer 62
	$97 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555556e5670, lastItemPtr = 0x5555556e5670, map = 0x55555571d5a0 "\377\377"}
		printing current item
		$98 = (ITEM *) 0x55555571d580
	Printing bag state of buffer 62
	$99 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x55555571f300, lastItemPtr = 0x55555571f340, map = 0x55555571f380 "\377\377"}
		printing current item
		$100 = (ITEM *) 0x55555571f320
		printing current item
		$101 = (ITEM *) 0x55555571f360
	Printing bag state of buffer 62
	$102 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555571ff40 ""}
printing queue buffer 63
$103 = {item = 2, bagState = 0x555555720288, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555726ab0}
	Printing bag state of buffer 63
	$104 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555720350 ""}
	Printing bag state of buffer 63
	$105 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555723df0 ""}
	Printing bag state of buffer 63
	$106 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x555555713180, lastItemPtr = 0x555555725bb0, map = 0x555555725bf0 "\377\377"}
		printing current item
		$107 = (ITEM *) 0x555555725b50
		printing current item
		$108 = (ITEM *) 0x555555725b90
		printing current item
		$109 = (ITEM *) 0x555555725bd0
	Printing bag state of buffer 63
	$110 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557267b0 ""}
printing queue buffer 64
$111 = {item = 2, bagState = 0x555555726af8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555572d320}
	Printing bag state of buffer 64
	$112 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555726bc0 ""}
	Printing bag state of buffer 64
	$113 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555572a660 ""}
	Printing bag state of buffer 64
	$114 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557199f0, lastItemPtr = 0x55555572c3e0, map = 0x55555572c420 "\377\377"}
		printing current item
		$115 = (ITEM *) 0x55555572c3c0
		printing current item
		$116 = (ITEM *) 0x55555572c400
	Printing bag state of buffer 64
	$117 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555572cfe0, lastItemPtr = 0x55555572cfe0, map = 0x55555572d020 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$118 = (ITEM *) 0x55555572d000
printing queue buffer 65
$119 = {item = 2, bagState = 0x55555572d368, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555733b90}
	Printing bag state of buffer 65
	$120 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555556f2750, lastItemPtr = 0x5555556f2750, map = 0x55555572d450 "\377\377"}
		printing current item
		$121 = (ITEM *) 0x55555572d430
	Printing bag state of buffer 65
	$122 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555730ef0 ""}
	Printing bag state of buffer 65
	$123 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555732c50, lastItemPtr = 0x555555732c50, map = 0x555555732c90 "\377\377"}
		printing current item
		$124 = (ITEM *) 0x555555732c70
	Printing bag state of buffer 65
	$125 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555733850, lastItemPtr = 0x555555733850, map = 0x555555733890 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$126 = (ITEM *) 0x555555733870
printing queue buffer 66
$127 = {item = 2, bagState = 0x555555733bd8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555573a400}
	Printing bag state of buffer 66
	$128 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555733ca0 ""}
	Printing bag state of buffer 66
	$129 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555556ff830, lastItemPtr = 0x5555556ff830, map = 0x555555737760 "\377\377"}
		printing current item
		$130 = (ITEM *) 0x555555737740
	Printing bag state of buffer 66
	$131 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555557394c0, lastItemPtr = 0x5555557394c0, map = 0x555555739500 "\377\377"}
		printing current item
		$132 = (ITEM *) 0x5555557394e0
	Printing bag state of buffer 66
	$133 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555573a0c0, lastItemPtr = 0x55555573a0c0, map = 0x55555573a100 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$134 = (ITEM *) 0x55555573a0e0
printing queue buffer 67
$135 = {item = 2, bagState = 0x55555573a448, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555740c70}
	Printing bag state of buffer 67
	$136 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555573a510 ""}
	Printing bag state of buffer 67
	$137 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555573dfb0 ""}
	Printing bag state of buffer 67
	$138 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555572d340, lastItemPtr = 0x55555573fd30, map = 0x55555573fd70 "\377\377"}
		printing current item
		$139 = (ITEM *) 0x55555573fd10
		printing current item
		$140 = (ITEM *) 0x55555573fd50
	Printing bag state of buffer 67
	$141 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555740930, lastItemPtr = 0x555555740930, map = 0x555555740970 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$142 = (ITEM *) 0x555555740950
printing queue buffer 68
$143 = {item = 2, bagState = 0x555555740cb8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557474e0}
	Printing bag state of buffer 68
	$144 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555740d80 ""}
	Printing bag state of buffer 68
	$145 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555744820 ""}
	Printing bag state of buffer 68
	$146 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555733bb0, lastItemPtr = 0x555555733bb0, map = 0x5555557465a0 "\377\377"}
		printing current item
		$147 = (ITEM *) 0x555555746580
	Printing bag state of buffer 68
	$148 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555747160, lastItemPtr = 0x5555557471a0, map = 0x5555557471e0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$149 = (ITEM *) 0x555555747180
		printing current item
		$150 = (ITEM *) 0x5555557471c0
printing queue buffer 69
$151 = {item = 2, bagState = 0x555555747528, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555574dd50}
	Printing bag state of buffer 69
	$152 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555669620, lastItemPtr = 0x555555747610, map = 0x555555747650 "\377\377\377\377"}
		printing current item
		$153 = (ITEM *) 0x5555557475f0
		printing current item
		$154 = (ITEM *) 0x555555747630
	Printing bag state of buffer 69
	$155 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555574b0f0 ""}
	Printing bag state of buffer 69
	$156 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555574ce50 ""}
	Printing bag state of buffer 69
	$157 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555574da10, lastItemPtr = 0x55555574da10, map = 0x55555574da50 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$158 = (ITEM *) 0x55555574da30
printing queue buffer 70
$159 = {item = 2, bagState = 0x55555574dd98, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555557545c0}
	Printing bag state of buffer 70
	$160 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555570c910, lastItemPtr = 0x55555570c910, map = 0x55555574de80 "\377\377"}
		printing current item
		$161 = (ITEM *) 0x55555574de60
	Printing bag state of buffer 70
	$162 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555751920, lastItemPtr = 0x555555751920, map = 0x555555751960 "\377\377"}
		printing current item
		$163 = (ITEM *) 0x555555751940
	Printing bag state of buffer 70
	$164 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557536c0 ""}
	Printing bag state of buffer 70
	$165 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555754280, lastItemPtr = 0x555555754280, map = 0x5555557542c0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$166 = (ITEM *) 0x5555557542a0
printing queue buffer 71
$167 = {item = 2, bagState = 0x555555754608, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555575ae30}
	Printing bag state of buffer 71
	$168 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555726ad0, lastItemPtr = 0x555555726ad0, map = 0x5555557546f0 "\377\377"}
		printing current item
		$169 = (ITEM *) 0x5555557546d0
	Printing bag state of buffer 71
	$170 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555758190 ""}
	Printing bag state of buffer 71
	$171 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555759ef0, lastItemPtr = 0x555555759ef0, map = 0x555555759f30 "\377\377"}
		printing current item
		$172 = (ITEM *) 0x555555759f10
	Printing bag state of buffer 71
	$173 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555575aaf0, lastItemPtr = 0x55555575aaf0, map = 0x55555575ab30 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$174 = (ITEM *) 0x55555575ab10
printing queue buffer 72
$175 = {item = 2, bagState = 0x55555575ae78, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557616a0}
	Printing bag state of buffer 72
	$176 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555573a420, lastItemPtr = 0x55555573a420, map = 0x55555575af60 "\377\377"}
		printing current item
		$177 = (ITEM *) 0x55555575af40
	Printing bag state of buffer 72
	$178 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555575ea00 ""}
	Printing bag state of buffer 72
	$179 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555760760 ""}
	Printing bag state of buffer 72
	$180 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555761320, lastItemPtr = 0x555555761360, map = 0x5555557613a0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$181 = (ITEM *) 0x555555761340
		printing current item
		$182 = (ITEM *) 0x555555761380
printing queue buffer 73
$183 = {item = 2, bagState = 0x5555557616e8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555767f10}
	Printing bag state of buffer 73
	$184 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555556d1d20, lastItemPtr = 0x5555556d1d20, map = 0x5555557617d0 "\377\377"}
		printing current item
		$185 = (ITEM *) 0x5555557617b0
	Printing bag state of buffer 73
	$186 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555765270, lastItemPtr = 0x555555765270, map = 0x5555557652b0 "\377\377"}
		printing current item
		$187 = (ITEM *) 0x555555765290
	Printing bag state of buffer 73
	$188 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555767010 ""}
	Printing bag state of buffer 73
	$189 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555767bd0, lastItemPtr = 0x555555767bd0, map = 0x555555767c10 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$190 = (ITEM *) 0x555555767bf0
printing queue buffer 74
$191 = {item = 2, bagState = 0x555555767f58, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555576e780}
	Printing bag state of buffer 74
	$192 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555768020 ""}
	Printing bag state of buffer 74
	$193 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555747500, lastItemPtr = 0x55555576bae0, map = 0x55555576bb20 "\377\377\377\377"}
		printing current item
		$194 = (ITEM *) 0x55555576bac0
		printing current item
		$195 = (ITEM *) 0x55555576bb00
	Printing bag state of buffer 74
	$196 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555576d880 ""}
	Printing bag state of buffer 74
	$197 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555576e440, lastItemPtr = 0x55555576e440, map = 0x55555576e480 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$198 = (ITEM *) 0x55555576e460
printing queue buffer 75
$199 = {item = 2, bagState = 0x55555576e7c8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555774ff0}
	Printing bag state of buffer 75
	$200 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555576e890 ""}
	Printing bag state of buffer 75
	$201 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555557616c0, lastItemPtr = 0x5555557616c0, map = 0x555555772350 "\377\377"}
		printing current item
		$202 = (ITEM *) 0x555555772330
	Printing bag state of buffer 75
	$203 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555557740b0, lastItemPtr = 0x5555557740b0, map = 0x5555557740f0 "\377\377"}
		printing current item
		$204 = (ITEM *) 0x5555557740d0
	Printing bag state of buffer 75
	$205 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555774cb0, lastItemPtr = 0x555555774cb0, map = 0x555555774cf0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$206 = (ITEM *) 0x555555774cd0
printing queue buffer 76
$207 = {item = 2, bagState = 0x555555775038, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555577b860}
	Printing bag state of buffer 76
	$208 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555775100 ""}
	Printing bag state of buffer 76
	$209 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555575ae50, lastItemPtr = 0x55555575ae50, map = 0x555555778bc0 "\377\377"}
		printing current item
		$210 = (ITEM *) 0x555555778ba0
	Printing bag state of buffer 76
	$211 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555577a920 ""}
	Printing bag state of buffer 76
	$212 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555577b4e0, lastItemPtr = 0x55555577b520, map = 0x55555577b560 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$213 = (ITEM *) 0x55555577b500
		printing current item
		$214 = (ITEM *) 0x55555577b540
printing queue buffer 77
$215 = {item = 2, bagState = 0x55555577b8a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555557820d0}
	Printing bag state of buffer 77
	$216 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555720260, lastItemPtr = 0x555555720260, map = 0x55555577b990 "\377\377"}
		printing current item
		$217 = (ITEM *) 0x55555577b970
	Printing bag state of buffer 77
	$218 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555577f430 ""}
	Printing bag state of buffer 77
	$219 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555781190, lastItemPtr = 0x555555781190, map = 0x5555557811d0 "\377\377"}
		printing current item
		$220 = (ITEM *) 0x5555557811b0
	Printing bag state of buffer 77
	$221 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555781d90, lastItemPtr = 0x555555781d90, map = 0x555555781dd0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$222 = (ITEM *) 0x555555781db0
printing queue buffer 78
$223 = {item = 2, bagState = 0x555555782118, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555788940}
	Printing bag state of buffer 78
	$224 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557821e0 ""}
	Printing bag state of buffer 78
	$225 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555574dd70, lastItemPtr = 0x55555574dd70, map = 0x555555785ca0 "\377\377"}
		printing current item
		$226 = (ITEM *) 0x555555785c80
	Printing bag state of buffer 78
	$227 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555787a00, lastItemPtr = 0x555555787a00, map = 0x555555787a40 "\377\377"}
		printing current item
		$228 = (ITEM *) 0x555555787a20
	Printing bag state of buffer 78
	$229 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555788600, lastItemPtr = 0x555555788600, map = 0x555555788640 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$230 = (ITEM *) 0x555555788620
printing queue buffer 79
$231 = {item = 2, bagState = 0x555555788988, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555578f1b0}
	Printing bag state of buffer 79
	$232 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555788a50 ""}
	Printing bag state of buffer 79
	$233 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555578c4f0 ""}
	Printing bag state of buffer 79
	$234 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x55555577b880, lastItemPtr = 0x55555578e270, map = 0x55555578e2b0 "\377\377"}
		printing current item
		$235 = (ITEM *) 0x55555578e250
		printing current item
		$236 = (ITEM *) 0x55555578e290
	Printing bag state of buffer 79
	$237 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555578ee70, lastItemPtr = 0x55555578ee70, map = 0x55555578eeb0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$238 = (ITEM *) 0x55555578ee90
printing queue buffer 80
$239 = {item = 2, bagState = 0x55555578f1f8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555795a20}
	Printing bag state of buffer 80
	$240 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555578f2c0 ""}
	Printing bag state of buffer 80
	$241 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555792d60 ""}
	Printing bag state of buffer 80
	$242 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555557820f0, lastItemPtr = 0x5555557820f0, map = 0x555555794ae0 "\377\377"}
		printing current item
		$243 = (ITEM *) 0x555555794ac0
	Printing bag state of buffer 80
	$244 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x5555557956a0, lastItemPtr = 0x5555557956e0, map = 0x555555795720 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$245 = (ITEM *) 0x5555557956c0
		printing current item
		$246 = (ITEM *) 0x555555795700
printing queue buffer 81
$247 = {item = 2, bagState = 0x555555795a68, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555579c290}
	Printing bag state of buffer 81
	$248 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555557545e0, lastItemPtr = 0x5555557545e0, map = 0x555555795b50 "\377\377"}
		printing current item
		$249 = (ITEM *) 0x555555795b30
	Printing bag state of buffer 81
	$250 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557995f0 ""}
	Printing bag state of buffer 81
	$251 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555579b350 ""}
	Printing bag state of buffer 81
	$252 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x55555579bf10, lastItemPtr = 0x55555579bf50, map = 0x55555579bf90 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$253 = (ITEM *) 0x55555579bf30
		printing current item
		$254 = (ITEM *) 0x55555579bf70
printing queue buffer 82
$255 = {item = 2, bagState = 0x55555579c2d8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557a2b00}
	Printing bag state of buffer 82
	$256 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555579c3a0 ""}
	Printing bag state of buffer 82
	$257 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555767f30, lastItemPtr = 0x555555767f30, map = 0x55555579fe60 "\377\377"}
		printing current item
		$258 = (ITEM *) 0x55555579fe40
	Printing bag state of buffer 82
	$259 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557a1bc0 ""}
	Printing bag state of buffer 82
	$260 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557a2780, lastItemPtr = 0x5555557a27c0, map = 0x5555557a2800 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$261 = (ITEM *) 0x5555557a27a0
		printing current item
		$262 = (ITEM *) 0x5555557a27e0
printing queue buffer 83
$263 = {item = 2, bagState = 0x5555557a2b48, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557a9370}
	Printing bag state of buffer 83
	$264 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557a2c10 ""}
	Printing bag state of buffer 83
	$265 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557a66b0 ""}
	Printing bag state of buffer 83
	$266 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555795a40, lastItemPtr = 0x555555795a40, map = 0x5555557a8430 "\377\377"}
		printing current item
		$267 = (ITEM *) 0x5555557a8410
	Printing bag state of buffer 83
	$268 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557a8ff0, lastItemPtr = 0x5555557a9030, map = 0x5555557a9070 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$269 = (ITEM *) 0x5555557a9010
		printing current item
		$270 = (ITEM *) 0x5555557a9050
printing queue buffer 84
$271 = {item = 2, bagState = 0x5555557a93b8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555557afbe0}
	Printing bag state of buffer 84
	$272 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557a9480 ""}
	Printing bag state of buffer 84
	$273 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557acf20 ""}
	Printing bag state of buffer 84
	$274 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557aec80 ""}
	Printing bag state of buffer 84
	$275 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x55555579c2b0, lastItemPtr = 0x5555557af8a0, map = 0x5555557af8e0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$276 = (ITEM *) 0x5555557af840
		printing current item
		$277 = (ITEM *) 0x5555557af880
		printing current item
		$278 = (ITEM *) 0x5555557af8c0
printing queue buffer 85
$279 = {item = 3, bagState = 0x55555560dff8, currentBagUsage = 5, bagCount = 4, bagUsage = 0x55555560e4a0}
	Printing bag state of buffer 85
	$280 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 4, itemWeightSum = 26, firstItemPtr = 0x55555560df90, lastItemPtr = 0x55555560e160, map = 0x5555557b07c0 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377", <incomplete sequence \360>}
		printing current item
		$281 = (ITEM *) 0x55555560e0c0
		printing current item
		$282 = (ITEM *) 0x55555560e100
		printing current item
		$283 = (ITEM *) 0x55555560e140
		printing current item
		$284 = (ITEM *) 0x55555560e180
	Printing bag state of buffer 85
	$285 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557b4260 ""}
	Printing bag state of buffer 85
	$286 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557b5fc0 ""}
	Printing bag state of buffer 85
	$287 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555560e1a0 ""}
printing queue buffer 86
$288 = {item = 3, bagState = 0x55555560e4e8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x55555560e990}
	Printing bag state of buffer 86
	$289 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x555555775010, lastItemPtr = 0x55555560e610, map = 0x5555557b6b80 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\300"}
		printing current item
		$290 = (ITEM *) 0x55555560e5b0
		printing current item
		$291 = (ITEM *) 0x55555560e5f0
		printing current item
		$292 = (ITEM *) 0x55555560e630
	Printing bag state of buffer 86
	$293 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x55555560e650, lastItemPtr = 0x55555560e650, map = 0x5555557ba620 "\377\377"}
		printing current item
		$294 = (ITEM *) 0x55555560e670
	Printing bag state of buffer 86
	$295 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557bc380 ""}
	Printing bag state of buffer 86
	$296 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555560e690 ""}
printing queue buffer 87
$297 = {item = 3, bagState = 0x55555560e9d8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555557c3680}
	Printing bag state of buffer 87
	$298 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x55555576e7a0, lastItemPtr = 0x5555557bcf40, map = 0x5555557bcf80 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\300"}
		printing current item
		$299 = (ITEM *) 0x55555560eaa0
		printing current item
		$300 = (ITEM *) 0x55555560eae0
		printing current item
		$301 = (ITEM *) 0x5555557bcf60
	Printing bag state of buffer 87
	$302 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557c0a20 ""}
	Printing bag state of buffer 87
	$303 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555557c2780, lastItemPtr = 0x5555557c2780, map = 0x5555557c27c0 "\377\377"}
		printing current item
		$304 = (ITEM *) 0x5555557c27a0
	Printing bag state of buffer 87
	$305 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557c3380 ""}
printing queue buffer 88
$306 = {item = 3, bagState = 0x5555557c36c8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555557c9f30}
	Printing bag state of buffer 88
	$307 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x55555560e4c0, lastItemPtr = 0x5555557c37f0, map = 0x5555557c3830 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\300"}
		printing current item
		$308 = (ITEM *) 0x5555557c3790
		printing current item
		$309 = (ITEM *) 0x5555557c37d0
		printing current item
		$310 = (ITEM *) 0x5555557c3810
	Printing bag state of buffer 88
	$311 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557c72d0 ""}
	Printing bag state of buffer 88
	$312 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557c9030 ""}
	Printing bag state of buffer 88
	$313 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555557c9bf0, lastItemPtr = 0x5555557c9bf0, map = 0x5555557c9c30 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$314 = (ITEM *) 0x5555557c9c10
printing queue buffer 89
$315 = {item = 3, bagState = 0x5555557c9f78, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555557d07e0}
	Printing bag state of buffer 89
	$316 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 23, firstItemPtr = 0x55555560e9b0, lastItemPtr = 0x5555557ca0a0, map = 0x5555557ca0e0 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\300"}
		printing current item
		$317 = (ITEM *) 0x5555557ca040
		printing current item
		$318 = (ITEM *) 0x5555557ca080
		printing current item
		$319 = (ITEM *) 0x5555557ca0c0
	Printing bag state of buffer 89
	$320 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555557cdb80, lastItemPtr = 0x5555557cdb80, map = 0x5555557cdbc0 "\377\377"}
		printing current item
		$321 = (ITEM *) 0x5555557cdba0
	Printing bag state of buffer 89
	$322 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557cf920 ""}
	Printing bag state of buffer 89
	$323 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557d04e0 ""}
printing queue buffer 90
$324 = {item = 3, bagState = 0x5555557d0828, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555557d7090}
	Printing bag state of buffer 90
	$325 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557c36a0, lastItemPtr = 0x5555557d0910, map = 0x5555557d0950 "\377\377\377\377"}
		printing current item
		$326 = (ITEM *) 0x5555557d08f0
		printing current item
		$327 = (ITEM *) 0x5555557d0930
	Printing bag state of buffer 90
	$328 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x5555557d43f0, lastItemPtr = 0x5555557d4430, map = 0x5555557d4470 "\377\377\377\377"}
		printing current item
		$329 = (ITEM *) 0x5555557d4410
		printing current item
		$330 = (ITEM *) 0x5555557d4450
	Printing bag state of buffer 90
	$331 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557d61d0 ""}
	Printing bag state of buffer 90
	$332 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557d6d90 ""}
printing queue buffer 91
$333 = {item = 3, bagState = 0x5555557d70d8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557dd940}
	Printing bag state of buffer 91
	$334 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x55555560dfb0, lastItemPtr = 0x5555557d71c0, map = 0x5555557d7200 "\377\377\377\377"}
		printing current item
		$335 = (ITEM *) 0x5555557d71a0
		printing current item
		$336 = (ITEM *) 0x5555557d71e0
	Printing bag state of buffer 91
	$337 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555557daca0, lastItemPtr = 0x5555557daca0, map = 0x5555557dace0 "\377\377"}
		printing current item
		$338 = (ITEM *) 0x5555557dacc0
	Printing bag state of buffer 91
	$339 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555557dca40, lastItemPtr = 0x5555557dca40, map = 0x5555557dca80 "\377\377"}
		printing current item
		$340 = (ITEM *) 0x5555557dca60
	Printing bag state of buffer 91
	$341 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557dd640 ""}
printing queue buffer 92
$342 = {item = 3, bagState = 0x5555557dd988, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557e41f0}
	Printing bag state of buffer 92
	$343 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557d0800, lastItemPtr = 0x5555557dda70, map = 0x5555557ddab0 "\377\377\377\377"}
		printing current item
		$344 = (ITEM *) 0x5555557dda50
		printing current item
		$345 = (ITEM *) 0x5555557dda90
	Printing bag state of buffer 92
	$346 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555557e1550, lastItemPtr = 0x5555557e1550, map = 0x5555557e1590 "\377\377"}
		printing current item
		$347 = (ITEM *) 0x5555557e1570
	Printing bag state of buffer 92
	$348 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557e32f0 ""}
	Printing bag state of buffer 92
	$349 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555557e3eb0, lastItemPtr = 0x5555557e3eb0, map = 0x5555557e3ef0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$350 = (ITEM *) 0x5555557e3ed0
printing queue buffer 93
$351 = {item = 3, bagState = 0x5555557e4238, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555557eaaa0}
	Printing bag state of buffer 93
	$352 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 23, firstItemPtr = 0x5555557d70b0, lastItemPtr = 0x5555557e4360, map = 0x5555557e43a0 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\300"}
		printing current item
		$353 = (ITEM *) 0x5555557e4300
		printing current item
		$354 = (ITEM *) 0x5555557e4340
		printing current item
		$355 = (ITEM *) 0x5555557e4380
	Printing bag state of buffer 93
	$356 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557e7e40 ""}
	Printing bag state of buffer 93
	$357 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555557e9ba0, lastItemPtr = 0x5555557e9ba0, map = 0x5555557e9be0 "\377\377"}
		printing current item
		$358 = (ITEM *) 0x5555557e9bc0
	Printing bag state of buffer 93
	$359 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557ea7a0 ""}
printing queue buffer 94
$360 = {item = 3, bagState = 0x5555557eaae8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557f1350}
	Printing bag state of buffer 94
	$361 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557dd960, lastItemPtr = 0x5555557eabd0, map = 0x5555557eac10 "\377\377\377\377"}
		printing current item
		$362 = (ITEM *) 0x5555557eabb0
		printing current item
		$363 = (ITEM *) 0x5555557eabf0
	Printing bag state of buffer 94
	$364 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555557ee6b0, lastItemPtr = 0x5555557ee6b0, map = 0x5555557ee6f0 "\377\377"}
		printing current item
		$365 = (ITEM *) 0x5555557ee6d0
	Printing bag state of buffer 94
	$366 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555557f0450, lastItemPtr = 0x5555557f0450, map = 0x5555557f0490 "\377\377"}
		printing current item
		$367 = (ITEM *) 0x5555557f0470
	Printing bag state of buffer 94
	$368 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557f1050 ""}
printing queue buffer 95
$369 = {item = 3, bagState = 0x5555557f1398, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555557f7c00}
	Printing bag state of buffer 95
	$370 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557a2b20, lastItemPtr = 0x5555557f1480, map = 0x5555557f14c0 "\377\377\377\377"}
		printing current item
		$371 = (ITEM *) 0x5555557f1460
		printing current item
		$372 = (ITEM *) 0x5555557f14a0
	Printing bag state of buffer 95
	$373 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557f4f60 ""}
	Printing bag state of buffer 95
	$374 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x5555557f6cc0, lastItemPtr = 0x5555557f6d00, map = 0x5555557f6d40 "\377\377"}
		printing current item
		$375 = (ITEM *) 0x5555557f6ce0
		printing current item
		$376 = (ITEM *) 0x5555557f6d20
	Printing bag state of buffer 95
	$377 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557f7900 ""}
printing queue buffer 96
$378 = {item = 3, bagState = 0x5555557f7c48, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555557fe4b0}
	Printing bag state of buffer 96
	$379 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x55555560dfd0, lastItemPtr = 0x5555557f7d30, map = 0x5555557f7d70 "\377\377\377\377"}
		printing current item
		$380 = (ITEM *) 0x5555557f7d10
		printing current item
		$381 = (ITEM *) 0x5555557f7d50
	Printing bag state of buffer 96
	$382 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555557fb810 ""}
	Printing bag state of buffer 96
	$383 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555557fd570, lastItemPtr = 0x5555557fd570, map = 0x5555557fd5b0 "\377\377"}
		printing current item
		$384 = (ITEM *) 0x5555557fd590
	Printing bag state of buffer 96
	$385 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555557fe170, lastItemPtr = 0x5555557fe170, map = 0x5555557fe1b0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$386 = (ITEM *) 0x5555557fe190
printing queue buffer 97
$387 = {item = 3, bagState = 0x5555557fe4f8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555804d60}
	Printing bag state of buffer 97
	$388 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 23, firstItemPtr = 0x5555557f1370, lastItemPtr = 0x5555557fe620, map = 0x5555557fe660 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\300"}
		printing current item
		$389 = (ITEM *) 0x5555557fe5c0
		printing current item
		$390 = (ITEM *) 0x5555557fe600
		printing current item
		$391 = (ITEM *) 0x5555557fe640
	Printing bag state of buffer 97
	$392 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555802100 ""}
	Printing bag state of buffer 97
	$393 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555803e60 ""}
	Printing bag state of buffer 97
	$394 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555804a20, lastItemPtr = 0x555555804a20, map = 0x555555804a60 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$395 = (ITEM *) 0x555555804a40
printing queue buffer 98
$396 = {item = 3, bagState = 0x555555804da8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555580b610}
	Printing bag state of buffer 98
	$397 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557f7c20, lastItemPtr = 0x555555804e90, map = 0x555555804ed0 "\377\377\377\377"}
		printing current item
		$398 = (ITEM *) 0x555555804e70
		printing current item
		$399 = (ITEM *) 0x555555804eb0
	Printing bag state of buffer 98
	$400 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555808970, lastItemPtr = 0x555555808970, map = 0x5555558089b0 "\377\377"}
		printing current item
		$401 = (ITEM *) 0x555555808990
	Printing bag state of buffer 98
	$402 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555580a710 ""}
	Printing bag state of buffer 98
	$403 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555580b2d0, lastItemPtr = 0x55555580b2d0, map = 0x55555580b310 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$404 = (ITEM *) 0x55555580b2f0
printing queue buffer 99
$405 = {item = 3, bagState = 0x55555580b658, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555811ec0}
	Printing bag state of buffer 99
	$406 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555557c9f50, lastItemPtr = 0x55555580b740, map = 0x55555580b780 "\377\377\377\377"}
		printing current item
		$407 = (ITEM *) 0x55555580b720
		printing current item
		$408 = (ITEM *) 0x55555580b760
	Printing bag state of buffer 99
	$409 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555580f220 ""}
	Printing bag state of buffer 99
	$410 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555810f80, lastItemPtr = 0x555555810f80, map = 0x555555810fc0 "\377\377"}
		printing current item
		$411 = (ITEM *) 0x555555810fa0
	Printing bag state of buffer 99
	$412 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555811b80, lastItemPtr = 0x555555811b80, map = 0x555555811bc0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$413 = (ITEM *) 0x555555811ba0
printing queue buffer 100
$414 = {item = 3, bagState = 0x555555811f08, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555818770}
	Printing bag state of buffer 100
	$415 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x555555740c90, lastItemPtr = 0x555555811ff0, map = 0x555555812030 "\377\377\377\377"}
		printing current item
		$416 = (ITEM *) 0x555555811fd0
		printing current item
		$417 = (ITEM *) 0x555555812010
	Printing bag state of buffer 100
	$418 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555815ad0 ""}
	Printing bag state of buffer 100
	$419 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555817830 ""}
	Printing bag state of buffer 100
	$420 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x5555558183f0, lastItemPtr = 0x555555818430, map = 0x555555818470 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$421 = (ITEM *) 0x555555818410
		printing current item
		$422 = (ITEM *) 0x555555818450
printing queue buffer 101
$423 = {item = 3, bagState = 0x5555558187b8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x55555581f020}
	Printing bag state of buffer 101
	$424 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 24, firstItemPtr = 0x5555557a9390, lastItemPtr = 0x5555558188e0, map = 0x555555818920 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\300"}
		printing current item
		$425 = (ITEM *) 0x555555818880
		printing current item
		$426 = (ITEM *) 0x5555558188c0
		printing current item
		$427 = (ITEM *) 0x555555818900
	Printing bag state of buffer 101
	$428 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555581c3c0, lastItemPtr = 0x55555581c3c0, map = 0x55555581c400 "\377\377"}
		printing current item
		$429 = (ITEM *) 0x55555581c3e0
	Printing bag state of buffer 101
	$430 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555581e160 ""}
	Printing bag state of buffer 101
	$431 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555581ed20 ""}
printing queue buffer 102
$432 = {item = 3, bagState = 0x55555581f068, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555558258d0}
	Printing bag state of buffer 102
	$433 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555811ee0, lastItemPtr = 0x55555581f150, map = 0x55555581f190 "\377\377\377\377"}
		printing current item
		$434 = (ITEM *) 0x55555581f130
		printing current item
		$435 = (ITEM *) 0x55555581f170
	Printing bag state of buffer 102
	$436 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555822c30, lastItemPtr = 0x555555822c70, map = 0x555555822cb0 "\377\377\377\377"}
		printing current item
		$437 = (ITEM *) 0x555555822c50
		printing current item
		$438 = (ITEM *) 0x555555822c90
	Printing bag state of buffer 102
	$439 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555824a10 ""}
	Printing bag state of buffer 102
	$440 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558255d0 ""}
printing queue buffer 103
$441 = {item = 3, bagState = 0x555555825918, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555582c180}
	Printing bag state of buffer 103
	$442 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x5555557e4210, lastItemPtr = 0x555555825a00, map = 0x555555825a40 "\377\377\377\377"}
		printing current item
		$443 = (ITEM *) 0x5555558259e0
		printing current item
		$444 = (ITEM *) 0x555555825a20
	Printing bag state of buffer 103
	$445 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558294e0, lastItemPtr = 0x5555558294e0, map = 0x555555829520 "\377\377"}
		printing current item
		$446 = (ITEM *) 0x555555829500
	Printing bag state of buffer 103
	$447 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x55555582b280, lastItemPtr = 0x55555582b280, map = 0x55555582b2c0 "\377\377"}
		printing current item
		$448 = (ITEM *) 0x55555582b2a0
	Printing bag state of buffer 103
	$449 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555582be80 ""}
printing queue buffer 104
$450 = {item = 3, bagState = 0x55555582c1c8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555832a30}
	Printing bag state of buffer 104
	$451 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555581f040, lastItemPtr = 0x55555582c2b0, map = 0x55555582c2f0 "\377\377\377\377"}
		printing current item
		$452 = (ITEM *) 0x55555582c290
		printing current item
		$453 = (ITEM *) 0x55555582c2d0
	Printing bag state of buffer 104
	$454 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555582fd90, lastItemPtr = 0x55555582fd90, map = 0x55555582fdd0 "\377\377"}
		printing current item
		$455 = (ITEM *) 0x55555582fdb0
	Printing bag state of buffer 104
	$456 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555831b30 ""}
	Printing bag state of buffer 104
	$457 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555558326f0, lastItemPtr = 0x5555558326f0, map = 0x555555832730 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$458 = (ITEM *) 0x555555832710
printing queue buffer 105
$459 = {item = 3, bagState = 0x555555832a78, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555558392e0}
	Printing bag state of buffer 105
	$460 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x5555558258f0, lastItemPtr = 0x555555832b60, map = 0x555555832ba0 "\377\377\377\377"}
		printing current item
		$461 = (ITEM *) 0x555555832b40
		printing current item
		$462 = (ITEM *) 0x555555832b80
	Printing bag state of buffer 105
	$463 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555836640, lastItemPtr = 0x555555836680, map = 0x5555558366c0 "\377\377\377\377"}
		printing current item
		$464 = (ITEM *) 0x555555836660
		printing current item
		$465 = (ITEM *) 0x5555558366a0
	Printing bag state of buffer 105
	$466 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555838420 ""}
	Printing bag state of buffer 105
	$467 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555838fe0 ""}
printing queue buffer 106
$468 = {item = 3, bagState = 0x555555839328, currentBagUsage = 6, bagCount = 4, bagUsage = 0x55555583fb90}
	Printing bag state of buffer 106
	$469 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555582c1a0, lastItemPtr = 0x55555582c1a0, map = 0x555555839410 "\377\377"}
		printing current item
		$470 = (ITEM *) 0x5555558393f0
	Printing bag state of buffer 106
	$471 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 25, firstItemPtr = 0x55555583ceb0, lastItemPtr = 0x55555583cf30, map = 0x55555583cf70 "\377\377\377\377"}
		printing current item
		$472 = (ITEM *) 0x55555583ced0
		printing current item
		$473 = (ITEM *) 0x55555583cf10
		printing current item
		$474 = (ITEM *) 0x55555583cf50
	Printing bag state of buffer 106
	$475 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555583ecd0 ""}
	Printing bag state of buffer 106
	$476 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555583f890 ""}
printing queue buffer 107
$477 = {item = 3, bagState = 0x55555583fbd8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555846440}
	Printing bag state of buffer 107
	$478 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555557fe4d0, lastItemPtr = 0x5555557fe4d0, map = 0x55555583fcc0 "\377\377"}
		printing current item
		$479 = (ITEM *) 0x55555583fca0
	Printing bag state of buffer 107
	$480 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555843760, lastItemPtr = 0x5555558437a0, map = 0x5555558437e0 "\377\377\377\377"}
		printing current item
		$481 = (ITEM *) 0x555555843780
		printing current item
		$482 = (ITEM *) 0x5555558437c0
	Printing bag state of buffer 107
	$483 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555845540, lastItemPtr = 0x555555845540, map = 0x555555845580 "\377\377"}
		printing current item
		$484 = (ITEM *) 0x555555845560
	Printing bag state of buffer 107
	$485 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555846140 ""}
printing queue buffer 108
$486 = {item = 3, bagState = 0x555555846488, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555584ccf0}
	Printing bag state of buffer 108
	$487 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555788960, lastItemPtr = 0x555555788960, map = 0x555555846570 "\377\377"}
		printing current item
		$488 = (ITEM *) 0x555555846550
	Printing bag state of buffer 108
	$489 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x55555584a010, lastItemPtr = 0x55555584a050, map = 0x55555584a090 "\377\377\377\377"}
		printing current item
		$490 = (ITEM *) 0x55555584a030
		printing current item
		$491 = (ITEM *) 0x55555584a070
	Printing bag state of buffer 108
	$492 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555584bdf0 ""}
	Printing bag state of buffer 108
	$493 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x55555584c9b0, lastItemPtr = 0x55555584c9b0, map = 0x55555584c9f0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$494 = (ITEM *) 0x55555584c9d0
printing queue buffer 109
$495 = {item = 3, bagState = 0x55555584cd38, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558535a0}
	Printing bag state of buffer 109
	$496 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x55555583fbb0, lastItemPtr = 0x55555584ce20, map = 0x55555584ce60 "\377\377\377\377"}
		printing current item
		$497 = (ITEM *) 0x55555584ce00
		printing current item
		$498 = (ITEM *) 0x55555584ce40
	Printing bag state of buffer 109
	$499 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555850900, lastItemPtr = 0x555555850900, map = 0x555555850940 "\377\377"}
		printing current item
		$500 = (ITEM *) 0x555555850920
	Printing bag state of buffer 109
	$501 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555558526a0, lastItemPtr = 0x5555558526a0, map = 0x5555558526e0 "\377\377"}
		printing current item
		$502 = (ITEM *) 0x5555558526c0
	Printing bag state of buffer 109
	$503 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558532a0 ""}
printing queue buffer 110
$504 = {item = 3, bagState = 0x5555558535e8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555859e50}
	Printing bag state of buffer 110
	$505 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555846460, lastItemPtr = 0x555555846460, map = 0x5555558536d0 "\377\377"}
		printing current item
		$506 = (ITEM *) 0x5555558536b0
	Printing bag state of buffer 110
	$507 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555857170, lastItemPtr = 0x5555558571b0, map = 0x5555558571f0 "\377\377\377\377"}
		printing current item
		$508 = (ITEM *) 0x555555857190
		printing current item
		$509 = (ITEM *) 0x5555558571d0
	Printing bag state of buffer 110
	$510 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555858f50, lastItemPtr = 0x555555858f50, map = 0x555555858f90 "\377\377"}
		printing current item
		$511 = (ITEM *) 0x555555858f70
	Printing bag state of buffer 110
	$512 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555859b50 ""}
printing queue buffer 111
$513 = {item = 3, bagState = 0x555555859e98, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555860700}
	Printing bag state of buffer 111
	$514 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555818790, lastItemPtr = 0x555555818790, map = 0x555555859f80 "\377\377"}
		printing current item
		$515 = (ITEM *) 0x555555859f60
	Printing bag state of buffer 111
	$516 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555585da20, lastItemPtr = 0x55555585da20, map = 0x55555585da60 "\377\377"}
		printing current item
		$517 = (ITEM *) 0x55555585da40
	Printing bag state of buffer 111
	$518 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x55555585f7c0, lastItemPtr = 0x55555585f800, map = 0x55555585f840 "\377\377"}
		printing current item
		$519 = (ITEM *) 0x55555585f7e0
		printing current item
		$520 = (ITEM *) 0x55555585f820
	Printing bag state of buffer 111
	$521 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555860400 ""}
printing queue buffer 112
$522 = {item = 3, bagState = 0x555555860748, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555866fb0}
	Printing bag state of buffer 112
	$523 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555580b630, lastItemPtr = 0x55555580b630, map = 0x555555860830 "\377\377"}
		printing current item
		$524 = (ITEM *) 0x555555860810
	Printing bag state of buffer 112
	$525 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558642d0, lastItemPtr = 0x5555558642d0, map = 0x555555864310 "\377\377"}
		printing current item
		$526 = (ITEM *) 0x5555558642f0
	Printing bag state of buffer 112
	$527 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555866070, lastItemPtr = 0x555555866070, map = 0x5555558660b0 "\377\377"}
		printing current item
		$528 = (ITEM *) 0x555555866090
	Printing bag state of buffer 112
	$529 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555866c70, lastItemPtr = 0x555555866c70, map = 0x555555866cb0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$530 = (ITEM *) 0x555555866c90
printing queue buffer 113
$531 = {item = 3, bagState = 0x555555866ff8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555586d860}
	Printing bag state of buffer 113
	$532 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x555555859e70, lastItemPtr = 0x5555558670e0, map = 0x555555867120 "\377\377\377\377"}
		printing current item
		$533 = (ITEM *) 0x5555558670c0
		printing current item
		$534 = (ITEM *) 0x555555867100
	Printing bag state of buffer 113
	$535 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555586abc0, lastItemPtr = 0x55555586abc0, map = 0x55555586ac00 "\377\377"}
		printing current item
		$536 = (ITEM *) 0x55555586abe0
	Printing bag state of buffer 113
	$537 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555586c960 ""}
	Printing bag state of buffer 113
	$538 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555586d520, lastItemPtr = 0x55555586d520, map = 0x55555586d560 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$539 = (ITEM *) 0x55555586d540
printing queue buffer 114
$540 = {item = 3, bagState = 0x55555586d8a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555874110}
	Printing bag state of buffer 114
	$541 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555860720, lastItemPtr = 0x555555860720, map = 0x55555586d990 "\377\377"}
		printing current item
		$542 = (ITEM *) 0x55555586d970
	Printing bag state of buffer 114
	$543 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555871430, lastItemPtr = 0x555555871470, map = 0x5555558714b0 "\377\377\377\377"}
		printing current item
		$544 = (ITEM *) 0x555555871450
		printing current item
		$545 = (ITEM *) 0x555555871490
	Printing bag state of buffer 114
	$546 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555873210 ""}
	Printing bag state of buffer 114
	$547 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555873dd0, lastItemPtr = 0x555555873dd0, map = 0x555555873e10 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$548 = (ITEM *) 0x555555873df0
printing queue buffer 115
$549 = {item = 3, bagState = 0x555555874158, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555587a9c0}
	Printing bag state of buffer 115
	$550 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555832a50, lastItemPtr = 0x555555832a50, map = 0x555555874240 "\377\377"}
		printing current item
		$551 = (ITEM *) 0x555555874220
	Printing bag state of buffer 115
	$552 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555877ce0, lastItemPtr = 0x555555877ce0, map = 0x555555877d20 "\377\377"}
		printing current item
		$553 = (ITEM *) 0x555555877d00
	Printing bag state of buffer 115
	$554 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555879a80, lastItemPtr = 0x555555879a80, map = 0x555555879ac0 "\377\377"}
		printing current item
		$555 = (ITEM *) 0x555555879aa0
	Printing bag state of buffer 115
	$556 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555587a680, lastItemPtr = 0x55555587a680, map = 0x55555587a6c0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$557 = (ITEM *) 0x55555587a6a0
printing queue buffer 116
$558 = {item = 3, bagState = 0x55555587aa08, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555881270}
	Printing bag state of buffer 116
	$559 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555578f1d0, lastItemPtr = 0x55555578f1d0, map = 0x55555587aaf0 "\377\377"}
		printing current item
		$560 = (ITEM *) 0x55555587aad0
	Printing bag state of buffer 116
	$561 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555587e590, lastItemPtr = 0x55555587e590, map = 0x55555587e5d0 "\377\377"}
		printing current item
		$562 = (ITEM *) 0x55555587e5b0
	Printing bag state of buffer 116
	$563 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555880330 ""}
	Printing bag state of buffer 116
	$564 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x555555880ef0, lastItemPtr = 0x555555880f30, map = 0x555555880f70 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$565 = (ITEM *) 0x555555880f10
		printing current item
		$566 = (ITEM *) 0x555555880f50
printing queue buffer 117
$567 = {item = 3, bagState = 0x5555558812b8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555887b20}
	Printing bag state of buffer 117
	$568 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 24, firstItemPtr = 0x5555557eaac0, lastItemPtr = 0x5555558813e0, map = 0x555555881420 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\300"}
		printing current item
		$569 = (ITEM *) 0x555555881380
		printing current item
		$570 = (ITEM *) 0x5555558813c0
		printing current item
		$571 = (ITEM *) 0x555555881400
	Printing bag state of buffer 117
	$572 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555884ec0 ""}
	Printing bag state of buffer 117
	$573 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555886c20, lastItemPtr = 0x555555886c20, map = 0x555555886c60 "\377\377"}
		printing current item
		$574 = (ITEM *) 0x555555886c40
	Printing bag state of buffer 117
	$575 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555887820 ""}
printing queue buffer 118
$576 = {item = 3, bagState = 0x555555887b68, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555588e3d0}
	Printing bag state of buffer 118
	$577 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555587a9e0, lastItemPtr = 0x555555887c50, map = 0x555555887c90 "\377\377\377\377"}
		printing current item
		$578 = (ITEM *) 0x555555887c30
		printing current item
		$579 = (ITEM *) 0x555555887c70
	Printing bag state of buffer 118
	$580 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x55555588b730, lastItemPtr = 0x55555588b730, map = 0x55555588b770 "\377\377"}
		printing current item
		$581 = (ITEM *) 0x55555588b750
	Printing bag state of buffer 118
	$582 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555588d4d0, lastItemPtr = 0x55555588d4d0, map = 0x55555588d510 "\377\377"}
		printing current item
		$583 = (ITEM *) 0x55555588d4f0
	Printing bag state of buffer 118
	$584 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555588e0d0 ""}
printing queue buffer 119
$585 = {item = 3, bagState = 0x55555588e418, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555894c80}
	Printing bag state of buffer 119
	$586 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555584cd10, lastItemPtr = 0x55555588e500, map = 0x55555588e540 "\377\377\377\377"}
		printing current item
		$587 = (ITEM *) 0x55555588e4e0
		printing current item
		$588 = (ITEM *) 0x55555588e520
	Printing bag state of buffer 119
	$589 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555891fe0 ""}
	Printing bag state of buffer 119
	$590 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555893d40, lastItemPtr = 0x555555893d80, map = 0x555555893dc0 "\377\377"}
		printing current item
		$591 = (ITEM *) 0x555555893d60
		printing current item
		$592 = (ITEM *) 0x555555893da0
	Printing bag state of buffer 119
	$593 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555894980 ""}
printing queue buffer 120
$594 = {item = 3, bagState = 0x555555894cc8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555589b530}
	Printing bag state of buffer 120
	$595 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555586d880, lastItemPtr = 0x555555894db0, map = 0x555555894df0 "\377\377\377\377"}
		printing current item
		$596 = (ITEM *) 0x555555894d90
		printing current item
		$597 = (ITEM *) 0x555555894dd0
	Printing bag state of buffer 120
	$598 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555898890 ""}
	Printing bag state of buffer 120
	$599 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555589a5f0, lastItemPtr = 0x55555589a5f0, map = 0x55555589a630 "\377\377"}
		printing current item
		$600 = (ITEM *) 0x55555589a610
	Printing bag state of buffer 120
	$601 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x55555589b1f0, lastItemPtr = 0x55555589b1f0, map = 0x55555589b230 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$602 = (ITEM *) 0x55555589b210
printing queue buffer 121
$603 = {item = 3, bagState = 0x55555589b578, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558a1de0}
	Printing bag state of buffer 121
	$604 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x55555588e3f0, lastItemPtr = 0x55555589b660, map = 0x55555589b6a0 "\377\377\377\377"}
		printing current item
		$605 = (ITEM *) 0x55555589b640
		printing current item
		$606 = (ITEM *) 0x55555589b680
	Printing bag state of buffer 121
	$607 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555589f140, lastItemPtr = 0x55555589f140, map = 0x55555589f180 "\377\377"}
		printing current item
		$608 = (ITEM *) 0x55555589f160
	Printing bag state of buffer 121
	$609 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558a0ee0, lastItemPtr = 0x5555558a0ee0, map = 0x5555558a0f20 "\377\377"}
		printing current item
		$610 = (ITEM *) 0x5555558a0f00
	Printing bag state of buffer 121
	$611 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558a1ae0 ""}
printing queue buffer 122
$612 = {item = 3, bagState = 0x5555558a1e28, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558a8690}
	Printing bag state of buffer 122
	$613 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555894ca0, lastItemPtr = 0x555555894ca0, map = 0x5555558a1f10 "\377\377"}
		printing current item
		$614 = (ITEM *) 0x5555558a1ef0
	Printing bag state of buffer 122
	$615 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x5555558a59b0, lastItemPtr = 0x5555558a59f0, map = 0x5555558a5a30 "\377\377\377\377"}
		printing current item
		$616 = (ITEM *) 0x5555558a59d0
		printing current item
		$617 = (ITEM *) 0x5555558a5a10
	Printing bag state of buffer 122
	$618 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558a7790, lastItemPtr = 0x5555558a7790, map = 0x5555558a77d0 "\377\377"}
		printing current item
		$619 = (ITEM *) 0x5555558a77b0
	Printing bag state of buffer 122
	$620 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558a8390 ""}
printing queue buffer 123
$621 = {item = 3, bagState = 0x5555558a86d8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558aef40}
	Printing bag state of buffer 123
	$622 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555866fd0, lastItemPtr = 0x555555866fd0, map = 0x5555558a87c0 "\377\377"}
		printing current item
		$623 = (ITEM *) 0x5555558a87a0
	Printing bag state of buffer 123
	$624 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555558ac260, lastItemPtr = 0x5555558ac260, map = 0x5555558ac2a0 "\377\377"}
		printing current item
		$625 = (ITEM *) 0x5555558ac280
	Printing bag state of buffer 123
	$626 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x5555558ae000, lastItemPtr = 0x5555558ae040, map = 0x5555558ae080 "\377\377"}
		printing current item
		$627 = (ITEM *) 0x5555558ae020
		printing current item
		$628 = (ITEM *) 0x5555558ae060
	Printing bag state of buffer 123
	$629 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558aec40 ""}
printing queue buffer 124
$630 = {item = 3, bagState = 0x5555558aef88, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555558b57f0}
	Printing bag state of buffer 124
	$631 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555839300, lastItemPtr = 0x555555839300, map = 0x5555558af070 "\377\377"}
		printing current item
		$632 = (ITEM *) 0x5555558af050
	Printing bag state of buffer 124
	$633 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555558b2b10, lastItemPtr = 0x5555558b2b10, map = 0x5555558b2b50 "\377\377"}
		printing current item
		$634 = (ITEM *) 0x5555558b2b30
	Printing bag state of buffer 124
	$635 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558b48b0, lastItemPtr = 0x5555558b48b0, map = 0x5555558b48f0 "\377\377"}
		printing current item
		$636 = (ITEM *) 0x5555558b48d0
	Printing bag state of buffer 124
	$637 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555558b54b0, lastItemPtr = 0x5555558b54b0, map = 0x5555558b54f0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$638 = (ITEM *) 0x5555558b54d0
printing queue buffer 125
$639 = {item = 3, bagState = 0x5555558b5838, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555558bc0a0}
	Printing bag state of buffer 125
	$640 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x5555558a86b0, lastItemPtr = 0x5555558b5920, map = 0x5555558b5960 "\377\377\377\377"}
		printing current item
		$641 = (ITEM *) 0x5555558b5900
		printing current item
		$642 = (ITEM *) 0x5555558b5940
	Printing bag state of buffer 125
	$643 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558b9400 ""}
	Printing bag state of buffer 125
	$644 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x5555558bb160, lastItemPtr = 0x5555558bb1a0, map = 0x5555558bb1e0 "\377\377"}
		printing current item
		$645 = (ITEM *) 0x5555558bb180
		printing current item
		$646 = (ITEM *) 0x5555558bb1c0
	Printing bag state of buffer 125
	$647 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558bbda0 ""}
printing queue buffer 126
$648 = {item = 3, bagState = 0x5555558bc0e8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558c2950}
	Printing bag state of buffer 126
	$649 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558aef60, lastItemPtr = 0x5555558aef60, map = 0x5555558bc1d0 "\377\377"}
		printing current item
		$650 = (ITEM *) 0x5555558bc1b0
	Printing bag state of buffer 126
	$651 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555558bfc70, lastItemPtr = 0x5555558bfc70, map = 0x5555558bfcb0 "\377\377"}
		printing current item
		$652 = (ITEM *) 0x5555558bfc90
	Printing bag state of buffer 126
	$653 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x5555558c1a10, lastItemPtr = 0x5555558c1a50, map = 0x5555558c1a90 "\377\377"}
		printing current item
		$654 = (ITEM *) 0x5555558c1a30
		printing current item
		$655 = (ITEM *) 0x5555558c1a70
	Printing bag state of buffer 126
	$656 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558c2650 ""}
printing queue buffer 127
$657 = {item = 3, bagState = 0x5555558c2998, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555558c9200}
	Printing bag state of buffer 127
	$658 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555881290, lastItemPtr = 0x555555881290, map = 0x5555558c2a80 "\377\377"}
		printing current item
		$659 = (ITEM *) 0x5555558c2a60
	Printing bag state of buffer 127
	$660 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558c6520 ""}
	Printing bag state of buffer 127
	$661 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 3, itemWeightSum = 25, firstItemPtr = 0x5555558c8280, lastItemPtr = 0x5555558c8300, map = 0x5555558c8340 "\377\377"}
		printing current item
		$662 = (ITEM *) 0x5555558c82a0
		printing current item
		$663 = (ITEM *) 0x5555558c82e0
		printing current item
		$664 = (ITEM *) 0x5555558c8320
	Printing bag state of buffer 127
	$665 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558c8f00 ""}
printing queue buffer 128
$666 = {item = 3, bagState = 0x5555558c9248, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558cfab0}
	Printing bag state of buffer 128
	$667 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558535c0, lastItemPtr = 0x5555558535c0, map = 0x5555558c9330 "\377\377"}
		printing current item
		$668 = (ITEM *) 0x5555558c9310
	Printing bag state of buffer 128
	$669 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558ccdd0 ""}
	Printing bag state of buffer 128
	$670 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x5555558ceb30, lastItemPtr = 0x5555558ceb70, map = 0x5555558cebb0 "\377\377"}
		printing current item
		$671 = (ITEM *) 0x5555558ceb50
		printing current item
		$672 = (ITEM *) 0x5555558ceb90
	Printing bag state of buffer 128
	$673 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555558cf770, lastItemPtr = 0x5555558cf770, map = 0x5555558cf7b0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$674 = (ITEM *) 0x5555558cf790
printing queue buffer 129
$675 = {item = 3, bagState = 0x5555558cfaf8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558d6360}
	Printing bag state of buffer 129
	$676 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x555555874130, lastItemPtr = 0x5555558cfbe0, map = 0x5555558cfc20 "\377\377\377\377"}
		printing current item
		$677 = (ITEM *) 0x5555558cfbc0
		printing current item
		$678 = (ITEM *) 0x5555558cfc00
	Printing bag state of buffer 129
	$679 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558d36c0 ""}
	Printing bag state of buffer 129
	$680 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558d5420, lastItemPtr = 0x5555558d5420, map = 0x5555558d5460 "\377\377"}
		printing current item
		$681 = (ITEM *) 0x5555558d5440
	Printing bag state of buffer 129
	$682 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555558d6020, lastItemPtr = 0x5555558d6020, map = 0x5555558d6060 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$683 = (ITEM *) 0x5555558d6040
printing queue buffer 130
$684 = {item = 3, bagState = 0x5555558d63a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555558dcc10}
	Printing bag state of buffer 130
	$685 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558c9220, lastItemPtr = 0x5555558c9220, map = 0x5555558d6490 "\377\377"}
		printing current item
		$686 = (ITEM *) 0x5555558d6470
	Printing bag state of buffer 130
	$687 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555558d9f30, lastItemPtr = 0x5555558d9f30, map = 0x5555558d9f70 "\377\377"}
		printing current item
		$688 = (ITEM *) 0x5555558d9f50
	Printing bag state of buffer 130
	$689 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558dbcd0, lastItemPtr = 0x5555558dbcd0, map = 0x5555558dbd10 "\377\377"}
		printing current item
		$690 = (ITEM *) 0x5555558dbcf0
	Printing bag state of buffer 130
	$691 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555558dc8d0, lastItemPtr = 0x5555558dc8d0, map = 0x5555558dc910 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$692 = (ITEM *) 0x5555558dc8f0
printing queue buffer 131
$693 = {item = 3, bagState = 0x5555558dcc58, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558e34c0}
	Printing bag state of buffer 131
	$694 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555589b550, lastItemPtr = 0x55555589b550, map = 0x5555558dcd40 "\377\377"}
		printing current item
		$695 = (ITEM *) 0x5555558dcd20
	Printing bag state of buffer 131
	$696 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558e07e0 ""}
	Printing bag state of buffer 131
	$697 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x5555558e2540, lastItemPtr = 0x5555558e2580, map = 0x5555558e25c0 "\377\377"}
		printing current item
		$698 = (ITEM *) 0x5555558e2560
		printing current item
		$699 = (ITEM *) 0x5555558e25a0
	Printing bag state of buffer 131
	$700 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555558e3180, lastItemPtr = 0x5555558e3180, map = 0x5555558e31c0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$701 = (ITEM *) 0x5555558e31a0
printing queue buffer 132
$702 = {item = 3, bagState = 0x5555558e3508, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558e9d70}
	Printing bag state of buffer 132
	$703 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558a1e00, lastItemPtr = 0x5555558a1e00, map = 0x5555558e35f0 "\377\377"}
		printing current item
		$704 = (ITEM *) 0x5555558e35d0
	Printing bag state of buffer 132
	$705 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558e7090 ""}
	Printing bag state of buffer 132
	$706 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558e8df0, lastItemPtr = 0x5555558e8df0, map = 0x5555558e8e30 "\377\377"}
		printing current item
		$707 = (ITEM *) 0x5555558e8e10
	Printing bag state of buffer 132
	$708 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x5555558e99f0, lastItemPtr = 0x5555558e9a30, map = 0x5555558e9a70 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$709 = (ITEM *) 0x5555558e9a10
		printing current item
		$710 = (ITEM *) 0x5555558e9a50
printing queue buffer 133
$711 = {item = 3, bagState = 0x5555558e9db8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555558f0620}
	Printing bag state of buffer 133
	$712 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 24, firstItemPtr = 0x5555558c2970, lastItemPtr = 0x5555558e9ee0, map = 0x5555558e9f20 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\300"}
		printing current item
		$713 = (ITEM *) 0x5555558e9e80
		printing current item
		$714 = (ITEM *) 0x5555558e9ec0
		printing current item
		$715 = (ITEM *) 0x5555558e9f00
	Printing bag state of buffer 133
	$716 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558ed9c0 ""}
	Printing bag state of buffer 133
	$717 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558ef720 ""}
	Printing bag state of buffer 133
	$718 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558f02e0, lastItemPtr = 0x5555558f02e0, map = 0x5555558f0320 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$719 = (ITEM *) 0x5555558f0300
printing queue buffer 134
$720 = {item = 3, bagState = 0x5555558f0668, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558f6ed0}
	Printing bag state of buffer 134
	$721 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x5555558e34e0, lastItemPtr = 0x5555558f0750, map = 0x5555558f0790 "\377\377\377\377"}
		printing current item
		$722 = (ITEM *) 0x5555558f0730
		printing current item
		$723 = (ITEM *) 0x5555558f0770
	Printing bag state of buffer 134
	$724 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555558f4230, lastItemPtr = 0x5555558f4230, map = 0x5555558f4270 "\377\377"}
		printing current item
		$725 = (ITEM *) 0x5555558f4250
	Printing bag state of buffer 134
	$726 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558f5fd0 ""}
	Printing bag state of buffer 134
	$727 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558f6b90, lastItemPtr = 0x5555558f6b90, map = 0x5555558f6bd0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$728 = (ITEM *) 0x5555558f6bb0
printing queue buffer 135
$729 = {item = 3, bagState = 0x5555558f6f18, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555558fd780}
	Printing bag state of buffer 135
	$730 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555887b40, lastItemPtr = 0x5555558f7000, map = 0x5555558f7040 "\377\377\377\377"}
		printing current item
		$731 = (ITEM *) 0x5555558f6fe0
		printing current item
		$732 = (ITEM *) 0x5555558f7020
	Printing bag state of buffer 135
	$733 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555558faae0 ""}
	Printing bag state of buffer 135
	$734 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555558fc840, lastItemPtr = 0x5555558fc840, map = 0x5555558fc880 "\377\377"}
		printing current item
		$735 = (ITEM *) 0x5555558fc860
	Printing bag state of buffer 135
	$736 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555558fd440, lastItemPtr = 0x5555558fd440, map = 0x5555558fd480 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$737 = (ITEM *) 0x5555558fd460
printing queue buffer 136
$738 = {item = 3, bagState = 0x5555558fd7c8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555904030}
	Printing bag state of buffer 136
	$739 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555804d80, lastItemPtr = 0x5555558fd8b0, map = 0x5555558fd8f0 "\377\377\377\377"}
		printing current item
		$740 = (ITEM *) 0x5555558fd890
		printing current item
		$741 = (ITEM *) 0x5555558fd8d0
	Printing bag state of buffer 136
	$742 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555901390 ""}
	Printing bag state of buffer 136
	$743 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559030f0 ""}
	Printing bag state of buffer 136
	$744 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555903cb0, lastItemPtr = 0x555555903cf0, map = 0x555555903d30 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$745 = (ITEM *) 0x555555903cd0
		printing current item
		$746 = (ITEM *) 0x555555903d10
printing queue buffer 137
$747 = {item = 3, bagState = 0x555555904078, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555590a8e0}
	Printing bag state of buffer 137
	$748 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x5555558dcc30, lastItemPtr = 0x555555904160, map = 0x5555559041a0 "\377\377\377\377"}
		printing current item
		$749 = (ITEM *) 0x555555904140
		printing current item
		$750 = (ITEM *) 0x555555904180
	Printing bag state of buffer 137
	$751 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555907c40, lastItemPtr = 0x555555907c40, map = 0x555555907c80 "\377\377"}
		printing current item
		$752 = (ITEM *) 0x555555907c60
	Printing bag state of buffer 137
	$753 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559099e0 ""}
	Printing bag state of buffer 137
	$754 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555590a5a0, lastItemPtr = 0x55555590a5a0, map = 0x55555590a5e0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$755 = (ITEM *) 0x55555590a5c0
printing queue buffer 138
$756 = {item = 3, bagState = 0x55555590a928, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555911190}
	Printing bag state of buffer 138
	$757 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558fd7a0, lastItemPtr = 0x5555558fd7a0, map = 0x55555590aa10 "\377\377"}
		printing current item
		$758 = (ITEM *) 0x55555590a9f0
	Printing bag state of buffer 138
	$759 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x55555590e4b0, lastItemPtr = 0x55555590e4f0, map = 0x55555590e530 "\377\377\377\377"}
		printing current item
		$760 = (ITEM *) 0x55555590e4d0
		printing current item
		$761 = (ITEM *) 0x55555590e510
	Printing bag state of buffer 138
	$762 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555910290 ""}
	Printing bag state of buffer 138
	$763 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555910e50, lastItemPtr = 0x555555910e50, map = 0x555555910e90 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$764 = (ITEM *) 0x555555910e70
printing queue buffer 139
$765 = {item = 3, bagState = 0x5555559111d8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555917a40}
	Printing bag state of buffer 139
	$766 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558bc0c0, lastItemPtr = 0x5555558bc0c0, map = 0x5555559112c0 "\377\377"}
		printing current item
		$767 = (ITEM *) 0x5555559112a0
	Printing bag state of buffer 139
	$768 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555914d60, lastItemPtr = 0x555555914d60, map = 0x555555914da0 "\377\377"}
		printing current item
		$769 = (ITEM *) 0x555555914d80
	Printing bag state of buffer 139
	$770 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555916b00, lastItemPtr = 0x555555916b00, map = 0x555555916b40 "\377\377"}
		printing current item
		$771 = (ITEM *) 0x555555916b20
	Printing bag state of buffer 139
	$772 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555917700, lastItemPtr = 0x555555917700, map = 0x555555917740 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$773 = (ITEM *) 0x555555917720
printing queue buffer 140
$774 = {item = 3, bagState = 0x555555917a88, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555591e2f0}
	Printing bag state of buffer 140
	$775 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558f0640, lastItemPtr = 0x5555558f0640, map = 0x555555917b70 "\377\377"}
		printing current item
		$776 = (ITEM *) 0x555555917b50
	Printing bag state of buffer 140
	$777 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555591b610, lastItemPtr = 0x55555591b610, map = 0x55555591b650 "\377\377"}
		printing current item
		$778 = (ITEM *) 0x55555591b630
	Printing bag state of buffer 140
	$779 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555591d3b0 ""}
	Printing bag state of buffer 140
	$780 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x55555591df70, lastItemPtr = 0x55555591dfb0, map = 0x55555591dff0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$781 = (ITEM *) 0x55555591df90
		printing current item
		$782 = (ITEM *) 0x55555591dfd0
printing queue buffer 141
$783 = {item = 3, bagState = 0x55555591e338, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555924ba0}
	Printing bag state of buffer 141
	$784 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x5555558f6ef0, lastItemPtr = 0x55555591e420, map = 0x55555591e460 "\377\377\377\377"}
		printing current item
		$785 = (ITEM *) 0x55555591e400
		printing current item
		$786 = (ITEM *) 0x55555591e440
	Printing bag state of buffer 141
	$787 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555921f00 ""}
	Printing bag state of buffer 141
	$788 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555923c60, lastItemPtr = 0x555555923c60, map = 0x555555923ca0 "\377\377"}
		printing current item
		$789 = (ITEM *) 0x555555923c80
	Printing bag state of buffer 141
	$790 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555924860, lastItemPtr = 0x555555924860, map = 0x5555559248a0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$791 = (ITEM *) 0x555555924880
printing queue buffer 142
$792 = {item = 3, bagState = 0x555555924be8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555592b450}
	Printing bag state of buffer 142
	$793 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555917a60, lastItemPtr = 0x555555917a60, map = 0x555555924cd0 "\377\377"}
		printing current item
		$794 = (ITEM *) 0x555555924cb0
	Printing bag state of buffer 142
	$795 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555928770, lastItemPtr = 0x555555928770, map = 0x5555559287b0 "\377\377"}
		printing current item
		$796 = (ITEM *) 0x555555928790
	Printing bag state of buffer 142
	$797 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555592a510, lastItemPtr = 0x55555592a510, map = 0x55555592a550 "\377\377"}
		printing current item
		$798 = (ITEM *) 0x55555592a530
	Printing bag state of buffer 142
	$799 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555592b110, lastItemPtr = 0x55555592b110, map = 0x55555592b150 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$800 = (ITEM *) 0x55555592b130
printing queue buffer 143
$801 = {item = 3, bagState = 0x55555592b498, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555931d00}
	Printing bag state of buffer 143
	$802 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555558e9d90, lastItemPtr = 0x5555558e9d90, map = 0x55555592b580 "\377\377"}
		printing current item
		$803 = (ITEM *) 0x55555592b560
	Printing bag state of buffer 143
	$804 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555592f020 ""}
	Printing bag state of buffer 143
	$805 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x555555930d80, lastItemPtr = 0x555555930dc0, map = 0x555555930e00 "\377\377"}
		printing current item
		$806 = (ITEM *) 0x555555930da0
		printing current item
		$807 = (ITEM *) 0x555555930de0
	Printing bag state of buffer 143
	$808 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555559319c0, lastItemPtr = 0x5555559319c0, map = 0x555555931a00 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$809 = (ITEM *) 0x5555559319e0
printing queue buffer 144
$810 = {item = 3, bagState = 0x555555931d48, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555559385b0}
	Printing bag state of buffer 144
	$811 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555590a900, lastItemPtr = 0x55555590a900, map = 0x555555931e30 "\377\377"}
		printing current item
		$812 = (ITEM *) 0x555555931e10
	Printing bag state of buffer 144
	$813 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559358d0 ""}
	Printing bag state of buffer 144
	$814 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555937630, lastItemPtr = 0x555555937630, map = 0x555555937670 "\377\377"}
		printing current item
		$815 = (ITEM *) 0x555555937650
	Printing bag state of buffer 144
	$816 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555938230, lastItemPtr = 0x555555938270, map = 0x5555559382b0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$817 = (ITEM *) 0x555555938250
		printing current item
		$818 = (ITEM *) 0x555555938290
printing queue buffer 145
$819 = {item = 3, bagState = 0x5555559385f8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x55555593ee60}
	Printing bag state of buffer 145
	$820 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x5555559111b0, lastItemPtr = 0x5555559386e0, map = 0x555555938720 "\377\377\377\377"}
		printing current item
		$821 = (ITEM *) 0x5555559386c0
		printing current item
		$822 = (ITEM *) 0x555555938700
	Printing bag state of buffer 145
	$823 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555593c1c0 ""}
	Printing bag state of buffer 145
	$824 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555593df20 ""}
	Printing bag state of buffer 145
	$825 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x55555593eae0, lastItemPtr = 0x55555593eb20, map = 0x55555593eb60 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$826 = (ITEM *) 0x55555593eb00
		printing current item
		$827 = (ITEM *) 0x55555593eb40
printing queue buffer 146
$828 = {item = 3, bagState = 0x55555593eea8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555945710}
	Printing bag state of buffer 146
	$829 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555931d20, lastItemPtr = 0x555555931d20, map = 0x55555593ef90 "\377\377"}
		printing current item
		$830 = (ITEM *) 0x55555593ef70
	Printing bag state of buffer 146
	$831 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555942a30, lastItemPtr = 0x555555942a30, map = 0x555555942a70 "\377\377"}
		printing current item
		$832 = (ITEM *) 0x555555942a50
	Printing bag state of buffer 146
	$833 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559447d0 ""}
	Printing bag state of buffer 146
	$834 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555945390, lastItemPtr = 0x5555559453d0, map = 0x555555945410 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$835 = (ITEM *) 0x5555559453b0
		printing current item
		$836 = (ITEM *) 0x5555559453f0
printing queue buffer 147
$837 = {item = 3, bagState = 0x555555945758, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555594bfc0}
	Printing bag state of buffer 147
	$838 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555904050, lastItemPtr = 0x555555904050, map = 0x555555945840 "\377\377"}
		printing current item
		$839 = (ITEM *) 0x555555945820
	Printing bag state of buffer 147
	$840 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559492e0 ""}
	Printing bag state of buffer 147
	$841 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x55555594b040, lastItemPtr = 0x55555594b040, map = 0x55555594b080 "\377\377"}
		printing current item
		$842 = (ITEM *) 0x55555594b060
	Printing bag state of buffer 147
	$843 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x55555594bc40, lastItemPtr = 0x55555594bc80, map = 0x55555594bcc0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$844 = (ITEM *) 0x55555594bc60
		printing current item
		$845 = (ITEM *) 0x55555594bca0
printing queue buffer 148
$846 = {item = 3, bagState = 0x55555594c008, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555952870}
	Printing bag state of buffer 148
	$847 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 3, itemWeightSum = 25, firstItemPtr = 0x55555558bad0, lastItemPtr = 0x55555594c130, map = 0x55555594c170 "\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377\377\377\377\377\363\377\377\377\377\377\374\377\377\377\377\377\377?\377\377\377\377\377\317\377", <incomplete sequence \360>}
		printing current item
		$848 = (ITEM *) 0x55555594c0d0
		printing current item
		$849 = (ITEM *) 0x55555594c110
		printing current item
		$850 = (ITEM *) 0x55555594c150
	Printing bag state of buffer 148
	$851 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555594fc10, lastItemPtr = 0x55555594fc10, map = 0x55555594fc50 "\377\377"}
		printing current item
		$852 = (ITEM *) 0x55555594fc30
	Printing bag state of buffer 148
	$853 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559519b0 ""}
	Printing bag state of buffer 148
	$854 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555952570 ""}
printing queue buffer 149
$855 = {item = 3, bagState = 0x5555559528b8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555959120}
	Printing bag state of buffer 149
	$856 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x5555558b5810, lastItemPtr = 0x5555559529a0, map = 0x5555559529e0 "\377\377\377\377"}
		printing current item
		$857 = (ITEM *) 0x555555952980
		printing current item
		$858 = (ITEM *) 0x5555559529c0
	Printing bag state of buffer 149
	$859 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x555555956480, lastItemPtr = 0x5555559564c0, map = 0x555555956500 "\377\377\377\377"}
		printing current item
		$860 = (ITEM *) 0x5555559564a0
		printing current item
		$861 = (ITEM *) 0x5555559564e0
	Printing bag state of buffer 149
	$862 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555958260 ""}
	Printing bag state of buffer 149
	$863 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555958e20 ""}
printing queue buffer 150
$864 = {item = 3, bagState = 0x555555959168, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555595f9d0}
	Printing bag state of buffer 150
	$865 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x5555559385d0, lastItemPtr = 0x555555959250, map = 0x555555959290 "\377\377\377\377"}
		printing current item
		$866 = (ITEM *) 0x555555959230
		printing current item
		$867 = (ITEM *) 0x555555959270
	Printing bag state of buffer 150
	$868 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555595cd30, lastItemPtr = 0x55555595cd30, map = 0x55555595cd70 "\377\377"}
		printing current item
		$869 = (ITEM *) 0x55555595cd50
	Printing bag state of buffer 150
	$870 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x55555595ead0, lastItemPtr = 0x55555595ead0, map = 0x55555595eb10 "\377\377"}
		printing current item
		$871 = (ITEM *) 0x55555595eaf0
	Printing bag state of buffer 150
	$872 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555595f6d0 ""}
printing queue buffer 151
$873 = {item = 3, bagState = 0x55555595fa18, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555966280}
	Printing bag state of buffer 151
	$874 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555952890, lastItemPtr = 0x55555595fb00, map = 0x55555595fb40 "\377\377\377\377"}
		printing current item
		$875 = (ITEM *) 0x55555595fae0
		printing current item
		$876 = (ITEM *) 0x55555595fb20
	Printing bag state of buffer 151
	$877 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555559635e0, lastItemPtr = 0x5555559635e0, map = 0x555555963620 "\377\377"}
		printing current item
		$878 = (ITEM *) 0x555555963600
	Printing bag state of buffer 151
	$879 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555965380 ""}
	Printing bag state of buffer 151
	$880 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555965f40, lastItemPtr = 0x555555965f40, map = 0x555555965f80 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$881 = (ITEM *) 0x555555965f60
printing queue buffer 152
$882 = {item = 3, bagState = 0x5555559662c8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x55555596cb30}
	Printing bag state of buffer 152
	$883 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555959140, lastItemPtr = 0x5555559663b0, map = 0x5555559663f0 "\377\377\377\377"}
		printing current item
		$884 = (ITEM *) 0x555555966390
		printing current item
		$885 = (ITEM *) 0x5555559663d0
	Printing bag state of buffer 152
	$886 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555969e90, lastItemPtr = 0x555555969ed0, map = 0x555555969f10 "\377\377\377\377"}
		printing current item
		$887 = (ITEM *) 0x555555969eb0
		printing current item
		$888 = (ITEM *) 0x555555969ef0
	Printing bag state of buffer 152
	$889 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555596bc70 ""}
	Printing bag state of buffer 152
	$890 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555596c830 ""}
printing queue buffer 153
$891 = {item = 3, bagState = 0x55555596cb78, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555559733e0}
	Printing bag state of buffer 153
	$892 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555595f9f0, lastItemPtr = 0x55555595f9f0, map = 0x55555596cc60 "\377\377"}
		printing current item
		$893 = (ITEM *) 0x55555596cc40
	Printing bag state of buffer 153
	$894 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 24, firstItemPtr = 0x555555970700, lastItemPtr = 0x555555970780, map = 0x5555559707c0 "\377\377\377\377"}
		printing current item
		$895 = (ITEM *) 0x555555970720
		printing current item
		$896 = (ITEM *) 0x555555970760
		printing current item
		$897 = (ITEM *) 0x5555559707a0
	Printing bag state of buffer 153
	$898 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555972520 ""}
	Printing bag state of buffer 153
	$899 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559730e0 ""}
printing queue buffer 154
$900 = {item = 3, bagState = 0x555555973428, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555979c90}
	Printing bag state of buffer 154
	$901 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555560df70, lastItemPtr = 0x55555560df70, map = 0x555555973510 "\377\377"}
		printing current item
		$902 = (ITEM *) 0x5555559734f0
	Printing bag state of buffer 154
	$903 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555976fb0, lastItemPtr = 0x555555976ff0, map = 0x555555977030 "\377\377\377\377"}
		printing current item
		$904 = (ITEM *) 0x555555976fd0
		printing current item
		$905 = (ITEM *) 0x555555977010
	Printing bag state of buffer 154
	$906 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555978d90, lastItemPtr = 0x555555978d90, map = 0x555555978dd0 "\377\377"}
		printing current item
		$907 = (ITEM *) 0x555555978db0
	Printing bag state of buffer 154
	$908 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555979990 ""}
printing queue buffer 155
$909 = {item = 3, bagState = 0x555555979cd8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555980540}
	Printing bag state of buffer 155
	$910 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555924bc0, lastItemPtr = 0x555555924bc0, map = 0x555555979dc0 "\377\377"}
		printing current item
		$911 = (ITEM *) 0x555555979da0
	Printing bag state of buffer 155
	$912 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555597d860, lastItemPtr = 0x55555597d8a0, map = 0x55555597d8e0 "\377\377\377\377"}
		printing current item
		$913 = (ITEM *) 0x55555597d880
		printing current item
		$914 = (ITEM *) 0x55555597d8c0
	Printing bag state of buffer 155
	$915 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555597f640 ""}
	Printing bag state of buffer 155
	$916 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555980200, lastItemPtr = 0x555555980200, map = 0x555555980240 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$917 = (ITEM *) 0x555555980220
printing queue buffer 156
$918 = {item = 3, bagState = 0x555555980588, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555986df0}
	Printing bag state of buffer 156
	$919 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555973400, lastItemPtr = 0x555555980670, map = 0x5555559806b0 "\377\377\377\377"}
		printing current item
		$920 = (ITEM *) 0x555555980650
		printing current item
		$921 = (ITEM *) 0x555555980690
	Printing bag state of buffer 156
	$922 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555984150, lastItemPtr = 0x555555984150, map = 0x555555984190 "\377\377"}
		printing current item
		$923 = (ITEM *) 0x555555984170
	Printing bag state of buffer 156
	$924 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555985ef0, lastItemPtr = 0x555555985ef0, map = 0x555555985f30 "\377\377"}
		printing current item
		$925 = (ITEM *) 0x555555985f10
	Printing bag state of buffer 156
	$926 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555986af0 ""}
printing queue buffer 157
$927 = {item = 3, bagState = 0x555555986e38, currentBagUsage = 7, bagCount = 4, bagUsage = 0x55555598d6a0}
	Printing bag state of buffer 157
	$928 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555979cb0, lastItemPtr = 0x555555979cb0, map = 0x555555986f20 "\377\377"}
		printing current item
		$929 = (ITEM *) 0x555555986f00
	Printing bag state of buffer 157
	$930 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x55555598a9c0, lastItemPtr = 0x55555598aa00, map = 0x55555598aa40 "\377\377\377\377"}
		printing current item
		$931 = (ITEM *) 0x55555598a9e0
		printing current item
		$932 = (ITEM *) 0x55555598aa20
	Printing bag state of buffer 157
	$933 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x55555598c7a0, lastItemPtr = 0x55555598c7a0, map = 0x55555598c7e0 "\377\377"}
		printing current item
		$934 = (ITEM *) 0x55555598c7c0
	Printing bag state of buffer 157
	$935 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x55555598d3a0 ""}
printing queue buffer 158
$936 = {item = 3, bagState = 0x55555598d6e8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555993f50}
	Printing bag state of buffer 158
	$937 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555594bfe0, lastItemPtr = 0x55555594bfe0, map = 0x55555598d7d0 "\377\377"}
		printing current item
		$938 = (ITEM *) 0x55555598d7b0
	Printing bag state of buffer 158
	$939 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555991270, lastItemPtr = 0x555555991270, map = 0x5555559912b0 "\377\377"}
		printing current item
		$940 = (ITEM *) 0x555555991290
	Printing bag state of buffer 158
	$941 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x555555993010, lastItemPtr = 0x555555993050, map = 0x555555993090 "\377\377"}
		printing current item
		$942 = (ITEM *) 0x555555993030
		printing current item
		$943 = (ITEM *) 0x555555993070
	Printing bag state of buffer 158
	$944 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555993c50 ""}
printing queue buffer 159
$945 = {item = 3, bagState = 0x555555993f98, currentBagUsage = 8, bagCount = 4, bagUsage = 0x55555599a800}
	Printing bag state of buffer 159
	$946 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555945730, lastItemPtr = 0x555555945730, map = 0x555555994080 "\377\377"}
		printing current item
		$947 = (ITEM *) 0x555555994060
	Printing bag state of buffer 159
	$948 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555997b20, lastItemPtr = 0x555555997b20, map = 0x555555997b60 "\377\377"}
		printing current item
		$949 = (ITEM *) 0x555555997b40
	Printing bag state of buffer 159
	$950 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555559998c0, lastItemPtr = 0x5555559998c0, map = 0x555555999900 "\377\377"}
		printing current item
		$951 = (ITEM *) 0x5555559998e0
	Printing bag state of buffer 159
	$952 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x55555599a4c0, lastItemPtr = 0x55555599a4c0, map = 0x55555599a500 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$953 = (ITEM *) 0x55555599a4e0
printing queue buffer 160
$954 = {item = 3, bagState = 0x55555599a848, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555559a10b0}
	Printing bag state of buffer 160
	$955 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x55555598d6c0, lastItemPtr = 0x55555599a930, map = 0x55555599a970 "\377\377\377\377"}
		printing current item
		$956 = (ITEM *) 0x55555599a910
		printing current item
		$957 = (ITEM *) 0x55555599a950
	Printing bag state of buffer 160
	$958 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x55555599e410, lastItemPtr = 0x55555599e410, map = 0x55555599e450 "\377\377"}
		printing current item
		$959 = (ITEM *) 0x55555599e430
	Printing bag state of buffer 160
	$960 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559a01b0 ""}
	Printing bag state of buffer 160
	$961 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555559a0d70, lastItemPtr = 0x5555559a0d70, map = 0x5555559a0db0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$962 = (ITEM *) 0x5555559a0d90
printing queue buffer 161
$963 = {item = 3, bagState = 0x5555559a10f8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555559a7960}
	Printing bag state of buffer 161
	$964 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555993f70, lastItemPtr = 0x555555993f70, map = 0x5555559a11e0 "\377\377"}
		printing current item
		$965 = (ITEM *) 0x5555559a11c0
	Printing bag state of buffer 161
	$966 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x5555559a4c80, lastItemPtr = 0x5555559a4cc0, map = 0x5555559a4d00 "\377\377\377\377"}
		printing current item
		$967 = (ITEM *) 0x5555559a4ca0
		printing current item
		$968 = (ITEM *) 0x5555559a4ce0
	Printing bag state of buffer 161
	$969 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559a6a60 ""}
	Printing bag state of buffer 161
	$970 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555559a7620, lastItemPtr = 0x5555559a7620, map = 0x5555559a7660 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$971 = (ITEM *) 0x5555559a7640
printing queue buffer 162
$972 = {item = 3, bagState = 0x5555559a79a8, currentBagUsage = 8, bagCount = 4, bagUsage = 0x5555559ae210}
	Printing bag state of buffer 162
	$973 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x5555559662a0, lastItemPtr = 0x5555559662a0, map = 0x5555559a7a90 "\377\377"}
		printing current item
		$974 = (ITEM *) 0x5555559a7a70
	Printing bag state of buffer 162
	$975 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555559ab530, lastItemPtr = 0x5555559ab530, map = 0x5555559ab570 "\377\377"}
		printing current item
		$976 = (ITEM *) 0x5555559ab550
	Printing bag state of buffer 162
	$977 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555559ad2d0, lastItemPtr = 0x5555559ad2d0, map = 0x5555559ad310 "\377\377"}
		printing current item
		$978 = (ITEM *) 0x5555559ad2f0
	Printing bag state of buffer 162
	$979 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555559aded0, lastItemPtr = 0x5555559aded0, map = 0x5555559adf10 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$980 = (ITEM *) 0x5555559adef0
printing queue buffer 163
$981 = {item = 3, bagState = 0x5555559ae258, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555559b4ac0}
	Printing bag state of buffer 163
	$982 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x55555591e310, lastItemPtr = 0x55555591e310, map = 0x5555559ae340 "\377\377"}
		printing current item
		$983 = (ITEM *) 0x5555559ae320
	Printing bag state of buffer 163
	$984 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x5555559b1de0, lastItemPtr = 0x5555559b1de0, map = 0x5555559b1e20 "\377\377"}
		printing current item
		$985 = (ITEM *) 0x5555559b1e00
	Printing bag state of buffer 163
	$986 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559b3b80 ""}
	Printing bag state of buffer 163
	$987 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x5555559b4740, lastItemPtr = 0x5555559b4780, map = 0x5555559b47c0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$988 = (ITEM *) 0x5555559b4760
		printing current item
		$989 = (ITEM *) 0x5555559b47a0
printing queue buffer 164
$990 = {item = 3, bagState = 0x5555559b4b08, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555559bb370}
	Printing bag state of buffer 164
	$991 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x55555592b470, lastItemPtr = 0x5555559b4bf0, map = 0x5555559b4c30 "\377\377\377\377"}
		printing current item
		$992 = (ITEM *) 0x5555559b4bd0
		printing current item
		$993 = (ITEM *) 0x5555559b4c10
	Printing bag state of buffer 164
	$994 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555559b86d0, lastItemPtr = 0x5555559b8710, map = 0x5555559b8750 "\377\377\377\377"}
		printing current item
		$995 = (ITEM *) 0x5555559b86f0
		printing current item
		$996 = (ITEM *) 0x5555559b8730
	Printing bag state of buffer 164
	$997 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559ba4b0 ""}
	Printing bag state of buffer 164
	$998 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559bb070 ""}
printing queue buffer 165
$999 = {item = 3, bagState = 0x5555559bb3b8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555559c1c20}
	Printing bag state of buffer 165
	$1000 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555559ae230, lastItemPtr = 0x5555559ae230, map = 0x5555559bb4a0 "\377\377"}
		printing current item
		$1001 = (ITEM *) 0x5555559bb480
	Printing bag state of buffer 165
	$1002 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 23, firstItemPtr = 0x5555559bef40, lastItemPtr = 0x5555559befc0, map = 0x5555559bf000 "\377\377\377\377"}
		printing current item
		$1003 = (ITEM *) 0x5555559bef60
		printing current item
		$1004 = (ITEM *) 0x5555559befa0
		printing current item
		$1005 = (ITEM *) 0x5555559befe0
	Printing bag state of buffer 165
	$1006 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559c0d60 ""}
	Printing bag state of buffer 165
	$1007 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559c1920 ""}
printing queue buffer 166
$1008 = {item = 3, bagState = 0x5555559c1c68, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555559c84d0}
	Printing bag state of buffer 166
	$1009 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555980560, lastItemPtr = 0x555555980560, map = 0x5555559c1d50 "\377\377"}
		printing current item
		$1010 = (ITEM *) 0x5555559c1d30
	Printing bag state of buffer 166
	$1011 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555559c57f0, lastItemPtr = 0x5555559c5830, map = 0x5555559c5870 "\377\377\377\377"}
		printing current item
		$1012 = (ITEM *) 0x5555559c5810
		printing current item
		$1013 = (ITEM *) 0x5555559c5850
	Printing bag state of buffer 166
	$1014 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555559c75d0, lastItemPtr = 0x5555559c75d0, map = 0x5555559c7610 "\377\377"}
		printing current item
		$1015 = (ITEM *) 0x5555559c75f0
	Printing bag state of buffer 166
	$1016 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559c81d0 ""}
printing queue buffer 167
$1017 = {item = 3, bagState = 0x5555559c8518, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555559ced80}
	Printing bag state of buffer 167
	$1018 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555559a10d0, lastItemPtr = 0x5555559a10d0, map = 0x5555559c8600 "\377\377"}
		printing current item
		$1019 = (ITEM *) 0x5555559c85e0
	Printing bag state of buffer 167
	$1020 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555559cc0a0, lastItemPtr = 0x5555559cc0e0, map = 0x5555559cc120 "\377\377\377\377"}
		printing current item
		$1021 = (ITEM *) 0x5555559cc0c0
		printing current item
		$1022 = (ITEM *) 0x5555559cc100
	Printing bag state of buffer 167
	$1023 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559cde80 ""}
	Printing bag state of buffer 167
	$1024 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555559cea40, lastItemPtr = 0x5555559cea40, map = 0x5555559cea80 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$1025 = (ITEM *) 0x5555559cea60
printing queue buffer 168
$1026 = {item = 3, bagState = 0x5555559cedc8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555559d5630}
	Printing bag state of buffer 168
	$1027 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555559c1c40, lastItemPtr = 0x5555559c1c40, map = 0x5555559ceeb0 "\377\377"}
		printing current item
		$1028 = (ITEM *) 0x5555559cee90
	Printing bag state of buffer 168
	$1029 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x5555559d2950, lastItemPtr = 0x5555559d29d0, map = 0x5555559d2a10 "\377\377\377\377"}
		printing current item
		$1030 = (ITEM *) 0x5555559d2970
		printing current item
		$1031 = (ITEM *) 0x5555559d29b0
		printing current item
		$1032 = (ITEM *) 0x5555559d29f0
	Printing bag state of buffer 168
	$1033 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559d4770 ""}
	Printing bag state of buffer 168
	$1034 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559d5330 ""}
printing queue buffer 169
$1035 = {item = 3, bagState = 0x5555559d5678, currentBagUsage = 5, bagCount = 4, bagUsage = 0x5555559dbee0}
	Printing bag state of buffer 169
	$1036 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559d5740 ""}
	Printing bag state of buffer 169
	$1037 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 4, itemWeightSum = 26, firstItemPtr = 0x5555559c84f0, lastItemPtr = 0x5555559d9280, map = 0x5555559d92c0 "\377\377\377\377"}
		printing current item
		$1038 = (ITEM *) 0x5555559d91e0
		printing current item
		$1039 = (ITEM *) 0x5555559d9220
		printing current item
		$1040 = (ITEM *) 0x5555559d9260
		printing current item
		$1041 = (ITEM *) 0x5555559d92a0
	Printing bag state of buffer 169
	$1042 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559db020 ""}
	Printing bag state of buffer 169
	$1043 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559dbbe0 ""}
printing queue buffer 170
$1044 = {item = 3, bagState = 0x5555559dbf28, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555559e2790}
	Printing bag state of buffer 170
	$1045 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559dbff0 ""}
	Printing bag state of buffer 170
	$1046 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x5555559a7980, lastItemPtr = 0x5555559dfaf0, map = 0x5555559dfb30 "\377\377\377\377"}
		printing current item
		$1047 = (ITEM *) 0x5555559dfa90
		printing current item
		$1048 = (ITEM *) 0x5555559dfad0
		printing current item
		$1049 = (ITEM *) 0x5555559dfb10
	Printing bag state of buffer 170
	$1050 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555559e1890, lastItemPtr = 0x5555559e1890, map = 0x5555559e18d0 "\377\377"}
		printing current item
		$1051 = (ITEM *) 0x5555559e18b0
	Printing bag state of buffer 170
	$1052 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559e2490 ""}
printing queue buffer 171
$1053 = {item = 3, bagState = 0x5555559e27d8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555559e9040}
	Printing bag state of buffer 171
	$1054 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559e28a0 ""}
	Printing bag state of buffer 171
	$1055 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 6, firstItemPtr = 0x55555596cb50, lastItemPtr = 0x5555559e63a0, map = 0x5555559e63e0 "\377\377\377\377"}
		printing current item
		$1056 = (ITEM *) 0x5555559e6340
		printing current item
		$1057 = (ITEM *) 0x5555559e6380
		printing current item
		$1058 = (ITEM *) 0x5555559e63c0
	Printing bag state of buffer 171
	$1059 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559e8140 ""}
	Printing bag state of buffer 171
	$1060 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555559e8d00, lastItemPtr = 0x5555559e8d00, map = 0x5555559e8d40 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$1061 = (ITEM *) 0x5555559e8d20
printing queue buffer 172
$1062 = {item = 3, bagState = 0x5555559e9088, currentBagUsage = 7, bagCount = 4, bagUsage = 0x5555559ef8f0}
	Printing bag state of buffer 172
	$1063 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555559dbf00, lastItemPtr = 0x5555559dbf00, map = 0x5555559e9170 "\377\377"}
		printing current item
		$1064 = (ITEM *) 0x5555559e9150
	Printing bag state of buffer 172
	$1065 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555559ecc10, lastItemPtr = 0x5555559ecc50, map = 0x5555559ecc90 "\377\377\377\377"}
		printing current item
		$1066 = (ITEM *) 0x5555559ecc30
		printing current item
		$1067 = (ITEM *) 0x5555559ecc70
	Printing bag state of buffer 172
	$1068 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555559ee9f0, lastItemPtr = 0x5555559ee9f0, map = 0x5555559eea30 "\377\377"}
		printing current item
		$1069 = (ITEM *) 0x5555559eea10
	Printing bag state of buffer 172
	$1070 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559ef5f0 ""}
printing queue buffer 173
$1071 = {item = 3, bagState = 0x5555559ef938, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555559f61a0}
	Printing bag state of buffer 173
	$1072 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559efa00 ""}
	Printing bag state of buffer 173
	$1073 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 23, firstItemPtr = 0x5555559e27b0, lastItemPtr = 0x5555559f3500, map = 0x5555559f3540 "\377\377\377\377"}
		printing current item
		$1074 = (ITEM *) 0x5555559f34a0
		printing current item
		$1075 = (ITEM *) 0x5555559f34e0
		printing current item
		$1076 = (ITEM *) 0x5555559f3520
	Printing bag state of buffer 173
	$1077 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555559f52a0, lastItemPtr = 0x5555559f52a0, map = 0x5555559f52e0 "\377\377"}
		printing current item
		$1078 = (ITEM *) 0x5555559f52c0
	Printing bag state of buffer 173
	$1079 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559f5ea0 ""}
printing queue buffer 174
$1080 = {item = 3, bagState = 0x5555559f61e8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x5555559fca50}
	Printing bag state of buffer 174
	$1081 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559f62b0 ""}
	Printing bag state of buffer 174
	$1082 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x55555593ee80, lastItemPtr = 0x5555559f9d70, map = 0x5555559f9db0 "\377\377\377\377"}
		printing current item
		$1083 = (ITEM *) 0x5555559f9d50
		printing current item
		$1084 = (ITEM *) 0x5555559f9d90
	Printing bag state of buffer 174
	$1085 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x5555559fbb10, lastItemPtr = 0x5555559fbb50, map = 0x5555559fbb90 "\377\377"}
		printing current item
		$1086 = (ITEM *) 0x5555559fbb30
		printing current item
		$1087 = (ITEM *) 0x5555559fbb70
	Printing bag state of buffer 174
	$1088 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559fc750 ""}
printing queue buffer 175
$1089 = {item = 3, bagState = 0x5555559fca98, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a03300}
	Printing bag state of buffer 175
	$1090 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555559fcb60 ""}
	Printing bag state of buffer 175
	$1091 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555559d5650, lastItemPtr = 0x555555a00620, map = 0x555555a00660 "\377\377\377\377"}
		printing current item
		$1092 = (ITEM *) 0x555555a00600
		printing current item
		$1093 = (ITEM *) 0x555555a00640
	Printing bag state of buffer 175
	$1094 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a023c0, lastItemPtr = 0x555555a023c0, map = 0x555555a02400 "\377\377"}
		printing current item
		$1095 = (ITEM *) 0x555555a023e0
	Printing bag state of buffer 175
	$1096 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555a02fc0, lastItemPtr = 0x555555a02fc0, map = 0x555555a03000 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$1097 = (ITEM *) 0x555555a02fe0
printing queue buffer 176
$1098 = {item = 3, bagState = 0x555555a03348, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a09bb0}
	Printing bag state of buffer 176
	$1099 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x5555559f61c0, lastItemPtr = 0x5555559f61c0, map = 0x555555a03430 "\377\377"}
		printing current item
		$1100 = (ITEM *) 0x555555a03410
	Printing bag state of buffer 176
	$1101 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x555555a06ed0, lastItemPtr = 0x555555a06f10, map = 0x555555a06f50 "\377\377\377\377"}
		printing current item
		$1102 = (ITEM *) 0x555555a06ef0
		printing current item
		$1103 = (ITEM *) 0x555555a06f30
	Printing bag state of buffer 176
	$1104 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a08cb0 ""}
	Printing bag state of buffer 176
	$1105 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a09870, lastItemPtr = 0x555555a09870, map = 0x555555a098b0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$1106 = (ITEM *) 0x555555a09890
printing queue buffer 177
$1107 = {item = 3, bagState = 0x555555a09bf8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555a10460}
	Printing bag state of buffer 177
	$1108 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a09cc0 ""}
	Printing bag state of buffer 177
	$1109 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 23, firstItemPtr = 0x5555559fca70, lastItemPtr = 0x555555a0d7c0, map = 0x555555a0d800 "\377\377\377\377"}
		printing current item
		$1110 = (ITEM *) 0x555555a0d760
		printing current item
		$1111 = (ITEM *) 0x555555a0d7a0
		printing current item
		$1112 = (ITEM *) 0x555555a0d7e0
	Printing bag state of buffer 177
	$1113 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a0f560 ""}
	Printing bag state of buffer 177
	$1114 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a10120, lastItemPtr = 0x555555a10120, map = 0x555555a10160 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$1115 = (ITEM *) 0x555555a10140
printing queue buffer 178
$1116 = {item = 3, bagState = 0x555555a104a8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a16d10}
	Printing bag state of buffer 178
	$1117 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a10570 ""}
	Printing bag state of buffer 178
	$1118 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555559bb390, lastItemPtr = 0x555555a14030, map = 0x555555a14070 "\377\377\377\377"}
		printing current item
		$1119 = (ITEM *) 0x555555a14010
		printing current item
		$1120 = (ITEM *) 0x555555a14050
	Printing bag state of buffer 178
	$1121 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555a15dd0, lastItemPtr = 0x555555a15dd0, map = 0x555555a15e10 "\377\377"}
		printing current item
		$1122 = (ITEM *) 0x555555a15df0
	Printing bag state of buffer 178
	$1123 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a169d0, lastItemPtr = 0x555555a169d0, map = 0x555555a16a10 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$1124 = (ITEM *) 0x555555a169f0
printing queue buffer 179
$1125 = {item = 3, bagState = 0x555555a16d58, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555a1d5c0}
	Printing bag state of buffer 179
	$1126 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a16e20 ""}
	Printing bag state of buffer 179
	$1127 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 3, firstItemPtr = 0x5555559e9060, lastItemPtr = 0x555555a1a8e0, map = 0x555555a1a920 "\377\377\377\377"}
		printing current item
		$1128 = (ITEM *) 0x555555a1a8c0
		printing current item
		$1129 = (ITEM *) 0x555555a1a900
	Printing bag state of buffer 179
	$1130 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a1c680 ""}
	Printing bag state of buffer 179
	$1131 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x555555a1d240, lastItemPtr = 0x555555a1d280, map = 0x555555a1d2c0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$1132 = (ITEM *) 0x555555a1d260
		printing current item
		$1133 = (ITEM *) 0x555555a1d2a0
printing queue buffer 180
$1134 = {item = 3, bagState = 0x555555a1d608, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a23e70}
	Printing bag state of buffer 180
	$1135 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x555555986e10, lastItemPtr = 0x555555a1d6f0, map = 0x555555a1d730 "\377\377\377\377"}
		printing current item
		$1136 = (ITEM *) 0x555555a1d6d0
		printing current item
		$1137 = (ITEM *) 0x555555a1d710
	Printing bag state of buffer 180
	$1138 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a211d0, lastItemPtr = 0x555555a211d0, map = 0x555555a21210 "\377\377"}
		printing current item
		$1139 = (ITEM *) 0x555555a211f0
	Printing bag state of buffer 180
	$1140 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a22f70, lastItemPtr = 0x555555a22f70, map = 0x555555a22fb0 "\377\377"}
		printing current item
		$1141 = (ITEM *) 0x555555a22f90
	Printing bag state of buffer 180
	$1142 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a23b70 ""}
printing queue buffer 181
$1143 = {item = 3, bagState = 0x555555a23eb8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a2a720}
	Printing bag state of buffer 181
	$1144 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a16d30, lastItemPtr = 0x555555a16d30, map = 0x555555a23fa0 "\377\377"}
		printing current item
		$1145 = (ITEM *) 0x555555a23f80
	Printing bag state of buffer 181
	$1146 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x555555a27a40, lastItemPtr = 0x555555a27a80, map = 0x555555a27ac0 "\377\377\377\377"}
		printing current item
		$1147 = (ITEM *) 0x555555a27a60
		printing current item
		$1148 = (ITEM *) 0x555555a27aa0
	Printing bag state of buffer 181
	$1149 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a29820, lastItemPtr = 0x555555a29820, map = 0x555555a29860 "\377\377"}
		printing current item
		$1150 = (ITEM *) 0x555555a29840
	Printing bag state of buffer 181
	$1151 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a2a420 ""}
printing queue buffer 182
$1152 = {item = 3, bagState = 0x555555a2a768, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a30fd0}
	Printing bag state of buffer 182
	$1153 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555559ef910, lastItemPtr = 0x5555559ef910, map = 0x555555a2a850 "\377\377"}
		printing current item
		$1154 = (ITEM *) 0x555555a2a830
	Printing bag state of buffer 182
	$1155 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a2e2f0, lastItemPtr = 0x555555a2e2f0, map = 0x555555a2e330 "\377\377"}
		printing current item
		$1156 = (ITEM *) 0x555555a2e310
	Printing bag state of buffer 182
	$1157 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555a30090, lastItemPtr = 0x555555a300d0, map = 0x555555a30110 "\377\377"}
		printing current item
		$1158 = (ITEM *) 0x555555a300b0
		printing current item
		$1159 = (ITEM *) 0x555555a300f0
	Printing bag state of buffer 182
	$1160 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a30cd0 ""}
printing queue buffer 183
$1161 = {item = 3, bagState = 0x555555a31018, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555a37880}
	Printing bag state of buffer 183
	$1162 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x5555559ceda0, lastItemPtr = 0x5555559ceda0, map = 0x555555a31100 "\377\377"}
		printing current item
		$1163 = (ITEM *) 0x555555a310e0
	Printing bag state of buffer 183
	$1164 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a34ba0, lastItemPtr = 0x555555a34ba0, map = 0x555555a34be0 "\377\377"}
		printing current item
		$1165 = (ITEM *) 0x555555a34bc0
	Printing bag state of buffer 183
	$1166 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a36940, lastItemPtr = 0x555555a36940, map = 0x555555a36980 "\377\377"}
		printing current item
		$1167 = (ITEM *) 0x555555a36960
	Printing bag state of buffer 183
	$1168 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555a37540, lastItemPtr = 0x555555a37540, map = 0x555555a37580 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$1169 = (ITEM *) 0x555555a37560
printing queue buffer 184
$1170 = {item = 3, bagState = 0x555555a378c8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a3e130}
	Printing bag state of buffer 184
	$1171 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555a2a740, lastItemPtr = 0x555555a2a740, map = 0x555555a379b0 "\377\377"}
		printing current item
		$1172 = (ITEM *) 0x555555a37990
	Printing bag state of buffer 184
	$1173 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x555555a3b450, lastItemPtr = 0x555555a3b490, map = 0x555555a3b4d0 "\377\377\377\377"}
		printing current item
		$1174 = (ITEM *) 0x555555a3b470
		printing current item
		$1175 = (ITEM *) 0x555555a3b4b0
	Printing bag state of buffer 184
	$1176 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a3d230, lastItemPtr = 0x555555a3d230, map = 0x555555a3d270 "\377\377"}
		printing current item
		$1177 = (ITEM *) 0x555555a3d250
	Printing bag state of buffer 184
	$1178 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a3de30 ""}
printing queue buffer 185
$1179 = {item = 3, bagState = 0x555555a3e178, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555a449e0}
	Printing bag state of buffer 185
	$1180 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a3e240 ""}
	Printing bag state of buffer 185
	$1181 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 3, itemWeightSum = 24, firstItemPtr = 0x555555a30ff0, lastItemPtr = 0x555555a41d40, map = 0x555555a41d80 "\377\377\377\377"}
		printing current item
		$1182 = (ITEM *) 0x555555a41ce0
		printing current item
		$1183 = (ITEM *) 0x555555a41d20
		printing current item
		$1184 = (ITEM *) 0x555555a41d60
	Printing bag state of buffer 185
	$1185 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a43ae0, lastItemPtr = 0x555555a43ae0, map = 0x555555a43b20 "\377\377"}
		printing current item
		$1186 = (ITEM *) 0x555555a43b00
	Printing bag state of buffer 185
	$1187 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a446e0 ""}
printing queue buffer 186
$1188 = {item = 3, bagState = 0x555555a44a28, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555a4b290}
	Printing bag state of buffer 186
	$1189 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a44af0 ""}
	Printing bag state of buffer 186
	$1190 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x5555559b4ae0, lastItemPtr = 0x555555a485b0, map = 0x555555a485f0 "\377\377\377\377"}
		printing current item
		$1191 = (ITEM *) 0x555555a48590
		printing current item
		$1192 = (ITEM *) 0x555555a485d0
	Printing bag state of buffer 186
	$1193 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555a4a350, lastItemPtr = 0x555555a4a390, map = 0x555555a4a3d0 "\377\377"}
		printing current item
		$1194 = (ITEM *) 0x555555a4a370
		printing current item
		$1195 = (ITEM *) 0x555555a4a3b0
	Printing bag state of buffer 186
	$1196 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a4af90 ""}
printing queue buffer 187
$1197 = {item = 3, bagState = 0x555555a4b2d8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a51b40}
	Printing bag state of buffer 187
	$1198 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a4b3a0 ""}
	Printing bag state of buffer 187
	$1199 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 4, firstItemPtr = 0x55555599a820, lastItemPtr = 0x555555a4ee60, map = 0x555555a4eea0 "\377\377\377\377"}
		printing current item
		$1200 = (ITEM *) 0x555555a4ee40
		printing current item
		$1201 = (ITEM *) 0x555555a4ee80
	Printing bag state of buffer 187
	$1202 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a50c00, lastItemPtr = 0x555555a50c00, map = 0x555555a50c40 "\377\377"}
		printing current item
		$1203 = (ITEM *) 0x555555a50c20
	Printing bag state of buffer 187
	$1204 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555a51800, lastItemPtr = 0x555555a51800, map = 0x555555a51840 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$1205 = (ITEM *) 0x555555a51820
printing queue buffer 188
$1206 = {item = 3, bagState = 0x555555a51b88, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a583f0}
	Printing bag state of buffer 188
	$1207 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555a44a00, lastItemPtr = 0x555555a44a00, map = 0x555555a51c70 "\377\377"}
		printing current item
		$1208 = (ITEM *) 0x555555a51c50
	Printing bag state of buffer 188
	$1209 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a55710, lastItemPtr = 0x555555a55710, map = 0x555555a55750 "\377\377"}
		printing current item
		$1210 = (ITEM *) 0x555555a55730
	Printing bag state of buffer 188
	$1211 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555a574b0, lastItemPtr = 0x555555a574f0, map = 0x555555a57530 "\377\377"}
		printing current item
		$1212 = (ITEM *) 0x555555a574d0
		printing current item
		$1213 = (ITEM *) 0x555555a57510
	Printing bag state of buffer 188
	$1214 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a580f0 ""}
printing queue buffer 189
$1215 = {item = 3, bagState = 0x555555a58438, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555a5eca0}
	Printing bag state of buffer 189
	$1216 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a58500 ""}
	Printing bag state of buffer 189
	$1217 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x555555a4b2b0, lastItemPtr = 0x555555a5bfc0, map = 0x555555a5c000 "\377\377\377\377"}
		printing current item
		$1218 = (ITEM *) 0x555555a5bfa0
		printing current item
		$1219 = (ITEM *) 0x555555a5bfe0
	Printing bag state of buffer 189
	$1220 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555a5dd60, lastItemPtr = 0x555555a5dda0, map = 0x555555a5dde0 "\377\377"}
		printing current item
		$1221 = (ITEM *) 0x555555a5dd80
		printing current item
		$1222 = (ITEM *) 0x555555a5ddc0
	Printing bag state of buffer 189
	$1223 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a5e9a0 ""}
printing queue buffer 190
$1224 = {item = 3, bagState = 0x555555a5ece8, currentBagUsage = 6, bagCount = 4, bagUsage = 0x555555a65550}
	Printing bag state of buffer 190
	$1225 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a5edb0 ""}
	Printing bag state of buffer 190
	$1226 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a03320, lastItemPtr = 0x555555a03320, map = 0x555555a62870 "\377\377"}
		printing current item
		$1227 = (ITEM *) 0x555555a62850
	Printing bag state of buffer 190
	$1228 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 3, itemWeightSum = 25, firstItemPtr = 0x555555a645d0, lastItemPtr = 0x555555a64650, map = 0x555555a64690 "\377\377"}
		printing current item
		$1229 = (ITEM *) 0x555555a645f0
		printing current item
		$1230 = (ITEM *) 0x555555a64630
		printing current item
		$1231 = (ITEM *) 0x555555a64670
	Printing bag state of buffer 190
	$1232 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a65250 ""}
printing queue buffer 191
$1233 = {item = 3, bagState = 0x555555a65598, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a6be00}
	Printing bag state of buffer 191
	$1234 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a65660 ""}
	Printing bag state of buffer 191
	$1235 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a378a0, lastItemPtr = 0x555555a378a0, map = 0x555555a69120 "\377\377"}
		printing current item
		$1236 = (ITEM *) 0x555555a69100
	Printing bag state of buffer 191
	$1237 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 5, firstItemPtr = 0x555555a6ae80, lastItemPtr = 0x555555a6aec0, map = 0x555555a6af00 "\377\377"}
		printing current item
		$1238 = (ITEM *) 0x555555a6aea0
		printing current item
		$1239 = (ITEM *) 0x555555a6aee0
	Printing bag state of buffer 191
	$1240 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555a6bac0, lastItemPtr = 0x555555a6bac0, map = 0x555555a6bb00 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$1241 = (ITEM *) 0x555555a6bae0
printing queue buffer 192
$1242 = {item = 3, bagState = 0x555555a6be48, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555a726b0}
	Printing bag state of buffer 192
	$1243 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555a10480, lastItemPtr = 0x555555a10480, map = 0x555555a6bf30 "\377\377"}
		printing current item
		$1244 = (ITEM *) 0x555555a6bf10
	Printing bag state of buffer 192
	$1245 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a6f9d0, lastItemPtr = 0x555555a6f9d0, map = 0x555555a6fa10 "\377\377"}
		printing current item
		$1246 = (ITEM *) 0x555555a6f9f0
	Printing bag state of buffer 192
	$1247 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a71770, lastItemPtr = 0x555555a71770, map = 0x555555a717b0 "\377\377"}
		printing current item
		$1248 = (ITEM *) 0x555555a71790
	Printing bag state of buffer 192
	$1249 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a72370, lastItemPtr = 0x555555a72370, map = 0x555555a723b0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$1250 = (ITEM *) 0x555555a72390
printing queue buffer 193
$1251 = {item = 3, bagState = 0x555555a726f8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a78f60}
	Printing bag state of buffer 193
	$1252 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a727c0 ""}
	Printing bag state of buffer 193
	$1253 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x555555a65570, lastItemPtr = 0x555555a76280, map = 0x555555a762c0 "\377\377\377\377"}
		printing current item
		$1254 = (ITEM *) 0x555555a76260
		printing current item
		$1255 = (ITEM *) 0x555555a762a0
	Printing bag state of buffer 193
	$1256 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a78020, lastItemPtr = 0x555555a78020, map = 0x555555a78060 "\377\377"}
		printing current item
		$1257 = (ITEM *) 0x555555a78040
	Printing bag state of buffer 193
	$1258 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a78c20, lastItemPtr = 0x555555a78c20, map = 0x555555a78c60 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$1259 = (ITEM *) 0x555555a78c40
printing queue buffer 194
$1260 = {item = 3, bagState = 0x555555a78fa8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a7f810}
	Printing bag state of buffer 194
	$1261 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a79070 ""}
	Printing bag state of buffer 194
	$1262 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a3e150, lastItemPtr = 0x555555a3e150, map = 0x555555a7cb30 "\377\377"}
		printing current item
		$1263 = (ITEM *) 0x555555a7cb10
	Printing bag state of buffer 194
	$1264 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555a7e890, lastItemPtr = 0x555555a7e8d0, map = 0x555555a7e910 "\377\377"}
		printing current item
		$1265 = (ITEM *) 0x555555a7e8b0
		printing current item
		$1266 = (ITEM *) 0x555555a7e8f0
	Printing bag state of buffer 194
	$1267 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a7f4d0, lastItemPtr = 0x555555a7f4d0, map = 0x555555a7f510 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$1268 = (ITEM *) 0x555555a7f4f0
printing queue buffer 195
$1269 = {item = 3, bagState = 0x555555a7f858, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a860c0}
	Printing bag state of buffer 195
	$1270 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a7f920 ""}
	Printing bag state of buffer 195
	$1271 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a23e90, lastItemPtr = 0x555555a23e90, map = 0x555555a833e0 "\377\377"}
		printing current item
		$1272 = (ITEM *) 0x555555a833c0
	Printing bag state of buffer 195
	$1273 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a85140, lastItemPtr = 0x555555a85140, map = 0x555555a85180 "\377\377"}
		printing current item
		$1274 = (ITEM *) 0x555555a85160
	Printing bag state of buffer 195
	$1275 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x555555a85d40, lastItemPtr = 0x555555a85d80, map = 0x555555a85dc0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$1276 = (ITEM *) 0x555555a85d60
		printing current item
		$1277 = (ITEM *) 0x555555a85da0
printing queue buffer 196
$1278 = {item = 3, bagState = 0x555555a86108, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a8c970}
	Printing bag state of buffer 196
	$1279 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 2, itemWeightSum = 23, firstItemPtr = 0x555555a5ecc0, lastItemPtr = 0x555555a861f0, map = 0x555555a86230 "\377\377\377\377"}
		printing current item
		$1280 = (ITEM *) 0x555555a861d0
		printing current item
		$1281 = (ITEM *) 0x555555a86210
	Printing bag state of buffer 196
	$1282 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a89cd0, lastItemPtr = 0x555555a89cd0, map = 0x555555a89d10 "\377\377"}
		printing current item
		$1283 = (ITEM *) 0x555555a89cf0
	Printing bag state of buffer 196
	$1284 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a8ba70 ""}
	Printing bag state of buffer 196
	$1285 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a8c630, lastItemPtr = 0x555555a8c630, map = 0x555555a8c670 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$1286 = (ITEM *) 0x555555a8c650
printing queue buffer 197
$1287 = {item = 3, bagState = 0x555555a8c9b8, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555a93220}
	Printing bag state of buffer 197
	$1288 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a7f830, lastItemPtr = 0x555555a7f830, map = 0x555555a8caa0 "\377\377"}
		printing current item
		$1289 = (ITEM *) 0x555555a8ca80
	Printing bag state of buffer 197
	$1290 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 2, itemWeightSum = 21, firstItemPtr = 0x555555a90540, lastItemPtr = 0x555555a90580, map = 0x555555a905c0 "\377\377\377\377"}
		printing current item
		$1291 = (ITEM *) 0x555555a90560
		printing current item
		$1292 = (ITEM *) 0x555555a905a0
	Printing bag state of buffer 197
	$1293 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a92320 ""}
	Printing bag state of buffer 197
	$1294 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a92ee0, lastItemPtr = 0x555555a92ee0, map = 0x555555a92f20 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$1295 = (ITEM *) 0x555555a92f00
printing queue buffer 198
$1296 = {item = 3, bagState = 0x555555a93268, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555a99ad0}
	Printing bag state of buffer 198
	$1297 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a58410, lastItemPtr = 0x555555a58410, map = 0x555555a93350 "\377\377"}
		printing current item
		$1298 = (ITEM *) 0x555555a93330
	Printing bag state of buffer 198
	$1299 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a96df0, lastItemPtr = 0x555555a96df0, map = 0x555555a96e30 "\377\377"}
		printing current item
		$1300 = (ITEM *) 0x555555a96e10
	Printing bag state of buffer 198
	$1301 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 1, itemWeightSum = 20, firstItemPtr = 0x555555a98b90, lastItemPtr = 0x555555a98b90, map = 0x555555a98bd0 "\377\377"}
		printing current item
		$1302 = (ITEM *) 0x555555a98bb0
	Printing bag state of buffer 198
	$1303 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 1, itemWeightSum = 2, firstItemPtr = 0x555555a99790, lastItemPtr = 0x555555a99790, map = 0x555555a997d0 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377", <incomplete sequence \360>}
		printing current item
		$1304 = (ITEM *) 0x555555a997b0
printing queue buffer 199
$1305 = {item = 3, bagState = 0x555555a99b18, currentBagUsage = 7, bagCount = 4, bagUsage = 0x555555aa0380}
	Printing bag state of buffer 199
	$1306 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 1, itemWeightSum = 3, firstItemPtr = 0x555555a51b60, lastItemPtr = 0x555555a51b60, map = 0x555555a99c00 "\377\377"}
		printing current item
		$1307 = (ITEM *) 0x555555a99be0
	Printing bag state of buffer 199
	$1308 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 1, itemWeightSum = 1, firstItemPtr = 0x555555a9d6a0, lastItemPtr = 0x555555a9d6a0, map = 0x555555a9d6e0 "\377\377"}
		printing current item
		$1309 = (ITEM *) 0x555555a9d6c0
	Printing bag state of buffer 199
	$1310 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555a9f440 ""}
	Printing bag state of buffer 199
	$1311 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 2, itemWeightSum = 22, firstItemPtr = 0x555555aa0000, lastItemPtr = 0x555555aa0040, map = 0x555555aa0080 "\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377\017\377\360\377\377"}
		printing current item
		$1312 = (ITEM *) 0x555555aa0020
		printing current item
		$1313 = (ITEM *) 0x555555aa0060
printing queue buffer 0
$1314 = {item = -1, bagState = 0x555555576578, currentBagUsage = 8, bagCount = 4, bagUsage = 0x555555576940}
	Printing bag state of buffer 0
	$1315 = {x = 50, y = 60, z = 40, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555580070 ""}
	Printing bag state of buffer 0
	$1316 = {x = 40, y = 50, z = 30, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555583b10 ""}
	Printing bag state of buffer 0
	$1317 = {x = 30, y = 40, z = 20, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555572b50 ""}
	Printing bag state of buffer 0
	$1318 = {x = 20, y = 30, z = 10, maxCapacity = 30, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555576640 ""}
$1319 = {buffer = 0x555555570688, capacity = 200, size = 150, front = 51, rear = 200, bagCount = 4}
#1  0x0000555555556ed6 in QUEUE::push (this=0x7fffffffd770, node=...) at branchAndBound.cpp:116
116	    buffer[++rear] = node;
$1320 = 200
Reading symbols from exe...
Breakpoint 1 at 0x6bfa: file source.cpp, line 102.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main () at source.cpp:102
102		bool result = bags[0].tryItem(items[0]);
BAG::tryItem (this=0x5555555702b8, itemToCheck=...) at input.cpp:382
382	{
384	    if(itemWeightSum + itemToCheck.weight > maxCapacity)
387	    int totalBitShift = 0;
388	    int itemSize = (itemToCheck.x - 1) / 8 + 1;
391	    itemMap = new unsigned char[itemSize];
$1 = 1
393	    int itemxBytes = itemToCheck.x / 8;
394	    unsigned short itemxBits = bitTable[itemToCheck.x % 8];
397	    for(int k = 0; k < itemxBytes; ++k)
$2 = 0
$3 = 224
405	    ptr = &itemMap[totalBitShift / 8];
406		*ptr = (unsigned char)itemxBits;
408	    int xMaxShift = x - itemToCheck.x;
$4 = 224 '\340'
0x555555576ad0:	-32	0	0	0	0	0	0	0
0x555555576ad8:	0	0	0	0	0	0	0	0
0x555555576ae0:	0	0	0	0
0x555555576ad0:	0xe0	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x555555576ad8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x555555576ae0:	0x00	0x00	0x00	0x00
409	    int yMaxShift = y - itemToCheck.y;
410	    int zMaxShift = z - itemToCheck.z;
412	    if(itemToCheck.x == 1)
460	    else if(itemToCheck.x > 8)
547	        totalBitShift = 0;
549	        byte = *itemMap;
551	        for(int i = 0; i <= zMaxShift; ++i)
0xe0:	Cannot access memory at address 0xe0
0x7fffffffd72b:	0xe0	0x98	0x49	0xe0	0x00	0x00	0x00	0x00
0x7fffffffd733:	0x00	0x00	0x00	0x00	0x00	0x07	0x00	0x00
0x7fffffffd73b:	0x00	0x00	0x00	0x00
0x555555576ad0:	0xe0	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x555555576ad8:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x555555576ae0:	0x00	0x00	0x00	0x00
553	            for(int j = 0; j <= yMaxShift; ++j)
555	                for(int k = 0; k <= xMaxShift; ++k)
557	                    totalBitShift = x * y * i + x * j + k;
1: totalBitShift = 0
561	                    bool fit = true;
1: totalBitShift = 0
563	                    for(int height = 0; height < itemToCheck.z; ++height)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
567	                            int checkBit = totalBitShift + height * x * y + width * x;
1: totalBitShift = 0
568	                            mapPtr = (unsigned int*)(map + (checkBit / 8));
1: totalBitShift = 0
569	                            shiftedBytes = shiftMap8bit[valueToKey[byte]][checkBit % 8];
1: totalBitShift = 0
573	                            if((*mapPtr & ntohl(shiftedBytes)) != 0)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
567	                            int checkBit = totalBitShift + height * x * y + width * x;
1: totalBitShift = 0
568	                            mapPtr = (unsigned int*)(map + (checkBit / 8));
1: totalBitShift = 0
569	                            shiftedBytes = shiftMap8bit[valueToKey[byte]][checkBit % 8];
1: totalBitShift = 0
573	                            if((*mapPtr & ntohl(shiftedBytes)) != 0)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
567	                            int checkBit = totalBitShift + height * x * y + width * x;
1: totalBitShift = 0
568	                            mapPtr = (unsigned int*)(map + (checkBit / 8));
1: totalBitShift = 0
569	                            shiftedBytes = shiftMap8bit[valueToKey[byte]][checkBit % 8];
1: totalBitShift = 0
573	                            if((*mapPtr & ntohl(shiftedBytes)) != 0)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
563	                    for(int height = 0; height < itemToCheck.z; ++height)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
567	                            int checkBit = totalBitShift + height * x * y + width * x;
1: totalBitShift = 0
568	                            mapPtr = (unsigned int*)(map + (checkBit / 8));
1: totalBitShift = 0
569	                            shiftedBytes = shiftMap8bit[valueToKey[byte]][checkBit % 8];
1: totalBitShift = 0
573	                            if((*mapPtr & ntohl(shiftedBytes)) != 0)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
567	                            int checkBit = totalBitShift + height * x * y + width * x;
1: totalBitShift = 0
568	                            mapPtr = (unsigned int*)(map + (checkBit / 8));
1: totalBitShift = 0
569	                            shiftedBytes = shiftMap8bit[valueToKey[byte]][checkBit % 8];
1: totalBitShift = 0
573	                            if((*mapPtr & ntohl(shiftedBytes)) != 0)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
567	                            int checkBit = totalBitShift + height * x * y + width * x;
1: totalBitShift = 0
568	                            mapPtr = (unsigned int*)(map + (checkBit / 8));
1: totalBitShift = 0
569	                            shiftedBytes = shiftMap8bit[valueToKey[byte]][checkBit % 8];
1: totalBitShift = 0
573	                            if((*mapPtr & ntohl(shiftedBytes)) != 0)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
563	                    for(int height = 0; height < itemToCheck.z; ++height)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
567	                            int checkBit = totalBitShift + height * x * y + width * x;
1: totalBitShift = 0
568	                            mapPtr = (unsigned int*)(map + (checkBit / 8));
1: totalBitShift = 0
569	                            shiftedBytes = shiftMap8bit[valueToKey[byte]][checkBit % 8];
1: totalBitShift = 0
573	                            if((*mapPtr & ntohl(shiftedBytes)) != 0)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
567	                            int checkBit = totalBitShift + height * x * y + width * x;
1: totalBitShift = 0
568	                            mapPtr = (unsigned int*)(map + (checkBit / 8));
1: totalBitShift = 0
569	                            shiftedBytes = shiftMap8bit[valueToKey[byte]][checkBit % 8];
1: totalBitShift = 0
573	                            if((*mapPtr & ntohl(shiftedBytes)) != 0)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
567	                            int checkBit = totalBitShift + height * x * y + width * x;
1: totalBitShift = 0
568	                            mapPtr = (unsigned int*)(map + (checkBit / 8));
1: totalBitShift = 0
569	                            shiftedBytes = shiftMap8bit[valueToKey[byte]][checkBit % 8];
1: totalBitShift = 0
573	                            if((*mapPtr & ntohl(shiftedBytes)) != 0)
1: totalBitShift = 0
565	                        for(int width = 0; width < itemToCheck.y; ++width)
1: totalBitShift = 0
563	                    for(int height = 0; height < itemToCheck.z; ++height)
1: totalBitShift = 0
582	                    if(fit)
1: totalBitShift = 0
584	                        putIn(itemToCheck, totalBitShift, itemMap);
1: totalBitShift = 0
BAG::putIn (this=0x5555555702b8, itemToInclude=..., bitShifts=0, itemMap=0x555555576ad0 <incomplete sequence \340>) at input.cpp:601
601	{
602	    int totalBitShift = 0;
$5 = (const unsigned char *) 0x555555576ad0 <incomplete sequence \340>
603	    int itemSize = (itemToInclude.x - 1) / 8 + 1;
605	    if(itemToInclude.x == 1)
617	    else if(itemToInclude.x > 8)
656	        totalBitShift = bitShifts;
658	        byte = *itemMap;
663	        for(int height = 0; height < itemToInclude.z; ++height)
$6 = 224 '\340'
$7 = 224 '\340'
665	            for(int width = 0; width < itemToInclude.y; ++width)
667	                int insertDword = totalBitShift + height * x * y + width * x;
668	                mapPtr = (unsigned int*)(map + (insertDword / 8));
$8 = (unsigned char *) 0x555555570380 ""
$9 = 0 '\000'
669	                shiftedBytes = shiftMap8bit[valueToKey[byte]][insertDword % 8];
$10 = (unsigned int *) 0x555555570380
$11 = 0
0x555555570380:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x555555570388:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x555555570390:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x555555570398:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x5555555703a0:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
672	                *mapPtr |= ntohl(shiftedBytes);
$12 = 4278190080
$13 = 0xff000000
$14 = 0xe0
$15 = 0
$16 = 0 '\000'
$17 = 224 '\340'
$18 = 0 '\000'
$19 = 224 '\340'
$20 = 0 '\000'
$21 = 0 '\000'
$22 = 0 '\000'
$23 = 0 '\000'
$24 = 0 '\000'
$25 = 0 '\000'
0x55555555d360 <valueToKey>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x55555555d368 <valueToKey+8>:	0x00	0x00
0x55555555d360 <valueToKey>:	0x00	0x00	0x00	0x00	0x00	0x00	0x00	0x00
0x55555555d368 <valueToKey+8>:	0x00	0x00
Reading symbols from exe...
Function "branchAndBound.cpp" not defined.
Breakpoint 1 at 0x3152: file branchAndBound.cpp, line 165.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555703b8, bags=0x5555555702b8, itemCount=6, bagCount=3) at branchAndBound.cpp:165
165	        popped = queue.pop();
166	        if(popped.item != itemCount - 1)
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = -10160, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
Continuing.
[Inferior 1 (process 24894) exited normally]
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555703b8, bags=0x5555555702b8, itemCount=6, bagCount=3) at branchAndBound.cpp:165
165	        popped = queue.pop();
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570420}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570500 ""}
4: toPush = {item = -10160, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
Undefined command: "y".  Try "help".
166	        if(popped.item != itemCount - 1)
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = -10160, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
170	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = -10160, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
172	                toPush = popped;
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = -10160, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
173	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = -1, bagState = 0x555555570668, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570760}
5: toPush.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570700 ""}
6: toPush.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570720 ""}
176	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = 0, bagState = 0x555555570668, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570760}
5: toPush.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570700 ""}
6: toPush.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570720 ""}
178	                if(wasPutIn)
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = 0, bagState = 0x555555570668, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570760}
5: toPush.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570700 ""}
6: toPush.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570720 ""}
170	            for(int i = 0; i < bagCount; i++)
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = 0, bagState = 0x555555570668, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570760}
5: toPush.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570700 ""}
6: toPush.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570720 ""}
Reading symbols from exe...
Breakpoint 1 at 0x319c: file branchAndBound.cpp, line 172.
Python Exception <class 'gdb.error'>: No symbol "popped" in current context.
Error occurred in Python: No symbol "popped" in current context.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555703b8, bags=0x5555555702b8, itemCount=6, bagCount=3) at branchAndBound.cpp:172
172	                toPush = popped;
173	                toPush.item = popped.item + 1;
176	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = 0, bagState = 0x555555570668, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570760}
5: toPush.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570700 ""}
6: toPush.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570720 ""}
$1 = {x = 1, y = 2, z = 2, weight = 1}
Undefined command: "stepn".  Try "help".
BAG::tryItem (this=0x555555570668, itemToCheck=...) at input.cpp:382
382	{
384	    if(itemWeightSum + itemToCheck.weight > maxCapacity)
387	    int totalBitShift = 0;
388	    int itemSize = (itemToCheck.x - 1) / 8 + 1;
391	    itemMap = new unsigned char[itemSize];
393	    int itemxBytes = itemToCheck.x / 8;
394	    unsigned short itemxBits = bitTable[itemToCheck.x % 8];
397	    for(int k = 0; k < itemxBytes; ++k)
405	    ptr = &itemMap[totalBitShift / 8];
406		*ptr = (unsigned char)itemxBits;
408	    int xMaxShift = x - itemToCheck.x;
$2 = 128 '\200'
409	    int yMaxShift = y - itemToCheck.y;
410	    int zMaxShift = z - itemToCheck.z;
412	    if(itemToCheck.x == 1)
414	        unsigned char byte = 128;
416	        for(int i = 0; i <= zMaxShift; ++i)
418	            for(int j = 0; j <= yMaxShift; ++j)
420	                for(int k = 0; k <= xMaxShift; ++k)
422	                    totalBitShift = (x * y * i + x * j + k);
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
$3 = 0 '\000'
$4 = 128
420	                for(int k = 0; k <= xMaxShift; ++k)
A syntax error in expression, near the end of `map[totalBitShift / 8] & ((byte >> (totalBitShift % 8))'.
$5 = 0
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555703b8, bags=0x5555555702b8, itemCount=6, bagCount=3) at branchAndBound.cpp:172
172	                toPush = popped;
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = -10160, bagState = 0x0, currentBagUsage = -1, bagCount = -1, bagUsage = 0x0}
5: toPush.bagState[0] = <error: Cannot access memory at address 0x0>
6: toPush.bagState[1] = <error: Cannot access memory at address 0x30>
173	                toPush.item = popped.item + 1;
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = -1, bagState = 0x555555570668, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570760}
5: toPush.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570700 ""}
6: toPush.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570720 ""}
176	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
1: popped = {item = -1, bagState = 0x555555570448, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570520}
2: popped.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570420 ""}
3: popped.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x5555555704e0 ""}
4: toPush = {item = 0, bagState = 0x555555570668, currentBagUsage = 6, bagCount = 3, bagUsage = 0x555555570760}
5: toPush.bagState[0] = {x = 10, y = 4, z = 4, maxCapacity = 45, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570700 ""}
6: toPush.bagState[1] = {x = 5, y = 3, z = 3, maxCapacity = 40, itemCount = 0, itemWeightSum = 0, firstItemPtr = 0x0, lastItemPtr = 0x0, map = 0x555555570720 ""}
BAG::tryItem (this=0x555555570668, itemToCheck=...) at input.cpp:382
382	{
BAG::tryItem (this=0x555555570668, itemToCheck=...) at input.cpp:425
425	                    if(map[totalBitShift / 8] & ((byte >> (totalBitShift % 8)) == 0))
$6 = 0
Reading symbols from exe...
Breakpoint 1 at 0x319c: file branchAndBound.cpp, line 172.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555703b8, bags=0x5555555702b8, itemCount=6, bagCount=3) at branchAndBound.cpp:172
172	                toPush = popped;
173	                toPush.item = popped.item + 1;
176	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
BAG::tryItem (this=0x555555570668, itemToCheck=...) at input.cpp:382
382	{
BAG::tryItem (this=0x555555570668, itemToCheck=...) at input.cpp:425
425	                    if((map[totalBitShift / 9] & (byte >> (totalBitShift % 8))) == 0)
$1 = true
427	                        bool fit = true;
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555703b8, bags=0x5555555702b8, itemCount=6, bagCount=3) at branchAndBound.cpp:172
172	                toPush = popped;
173	                toPush.item = popped.item + 1;
176	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
178	                if(wasPutIn)
170	            for(int i = 0; i < bagCount; i++)
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, getMinBagCount (items=0x5555555703b8, bags=0x5555555702b8, itemCount=6, bagCount=3) at branchAndBound.cpp:172
172	                toPush = popped;
173	                toPush.item = popped.item + 1;
176	                wasPutIn = toPush.bagState[i].tryItem(items[toPush.item]);
BAG::tryItem (this=0x555555570668, itemToCheck=...) at input.cpp:382
382	{
384	    if(itemWeightSum + itemToCheck.weight > maxCapacity)
BAG::tryItem (this=0x555555570668, itemToCheck=...) at input.cpp:425
425	                    if((map[totalBitShift / 9] & (byte >> (totalBitShift % 8))) == 0)
427	                        bool fit = true;
429	                        for(int height = 0; height < itemToCheck.z; ++height)
431	                            for(int width = 0; width < itemToCheck.y; ++width)
433	                                int bitShift = totalBitShift + x * y * height + x * width;
435	                                if(map[bitShift / 8] & ((byte >> (bitShift % 8)) == 0))
Reading symbols from exe...
Breakpoint 1 at 0xa422: file input.cpp, line 278.
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, BAG::initMap (this=0x50e000000048) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e000000078) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e0000000a8) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x7ffff4f09030) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e000000048) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e0000000a8) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x7ffff4f09030) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e000000078) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e0000000a8) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x7ffff4f09030) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e0000000a8) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e000000128) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e000000158) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e000000188) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e000000208) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e000000238) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e000000268) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e0000002e8) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e000000318) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e000000348) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e0000003c8) at input.cpp:278
278	    map = new unsigned char[size];
Continuing.

Breakpoint 1, BAG::initMap (this=0x50e0000003f8) at input.cpp:278
278	    map = new unsigned char[size];
Reading symbols from exe...
Starting program: /home/kimsungsu/School/Algorithm/termProject/Algorithm-Term-Project/exe 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 1 (process 10759) exited with code 01]
Reading symbols from exe...
